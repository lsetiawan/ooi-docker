drop keyspace ooi;

create keyspace ooi with replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };


CREATE TABLE ooi.dataset_l0_provenance (
subsite text,
node text,
sensor text,
method text,
deployment int,
id uuid,
fileName text,
parserName text,
parserVersion text,
PRIMARY KEY((subsite, node, sensor), method, deployment, id)
);


CREATE TABLE ooi.annotations(
    subsite text,
    node text,
    sensor text,
    time double,
    time2 double,
    id uuid,
    annotation text,
    parameters list<text>,
    deployment int,
    method text,
    provenance uuid,
    PRIMARY KEY((subsite, node, sensor), time, id)
);


create table ooi.qc_results (
subsite text,
node text,
sensor text,
bin bigint,
deployment int,
stream text,
id uuid,
parameter text,
results text,
PRIMARY KEY((subsite, node, sensor, bin), stream, deployment, id)
);

CREATE TABLE ooi.presf_tide_measurement (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    absolute_pressure double,
    date_time_string text,
    pressure_temp double,
    seawater_temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_operating_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_lithium double,
    battery_voltage_main double,
    date_time_string text,
    device_status text,
    external_conductivity_sensor int,
    external_temperature_sensor int,
    firmware_version text,
    last_sample_absolute_press double,
    last_sample_temp double,
    logging_start_time text,
    logging_status int,
    logging_stop_time text,
    memory_endurance double,
    nominal_alkaline_battery_endurance double,
    operational_current double,
    pressure_sensor_range int,
    quartz_pressure_sensor_serial_number text,
    serial_number text,
    tide_measurement_duration int,
    tide_measurement_interval int,
    tide_measurements_since_last_start int,
    tide_samples_per_day int,
    total_recorded_tide_measurements int,
    total_recorded_wave_bursts int,
    tx_tide_samples int,
    tx_wave_bursts int,
    tx_wave_stats int,
    user_info text,
    wave_bursts_per_day int,
    wave_bursts_since_last_start int,
    wave_samples_between_tide_measurements int,
    wave_samples_duration double,
    wave_samples_per_burst int,
    wave_samples_scans_per_second double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_calibration_coefficients (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibration_date_conductivity text,
    calibration_date_pressure text,
    calibration_date_temperature text,
    cond_coeff_cg double,
    cond_coeff_ch double,
    cond_coeff_ci double,
    cond_coeff_cj double,
    cond_coeff_cpcor double,
    cond_coeff_cslope double,
    cond_coeff_ctcor double,
    press_coeff_b double,
    press_coeff_m double,
    press_coeff_pc1 double,
    press_coeff_pc2 double,
    press_coeff_pc3 double,
    press_coeff_pd1 double,
    press_coeff_pd2 double,
    press_coeff_poffset double,
    press_coeff_pt1 double,
    press_coeff_pt2 double,
    press_coeff_pt3 double,
    press_coeff_pt4 double,
    press_coeff_pu0 double,
    press_coeff_py1 double,
    press_coeff_py2 double,
    press_coeff_py3 double,
    temp_coeff_ta0 double,
    temp_coeff_ta1 double,
    temp_coeff_ta2 double,
    temp_coeff_ta3 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.do_fast_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ext_volt0 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.do_stable_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    oxy_calphase int,
    oxy_temp int,
    oxygen int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_no_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    oxy_calphase int,
    oxy_temp int,
    oxygen int,
    pressure int,
    pressure_temp int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_no_hardware (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    assembly_number blob,
    command_set_version text,
    cond_sensor_serial_number text,
    firmware_date text,
    firmware_version text,
    manufacture_date text,
    pcb_serial_number blob,
    pressure_sensor_type text,
    quartz_pressure_sensor_serial_number text,
    serial_number text,
    temp_sensor_serial_number text,
    volt0_serial_number text,
    volt0_type text,
    volt1_serial_number text,
    volt1_type text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_no_calibration_coefficients (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibration_date_conductivity text,
    calibration_date_pressure text,
    calibration_date_temperature text,
    cond_coeff_cg double,
    cond_coeff_ch double,
    cond_coeff_ci double,
    cond_coeff_cj double,
    cond_coeff_cpcor double,
    cond_coeff_cslope double,
    cond_coeff_ctcor double,
    cond_sensor_serial_number text,
    ext_freq_sf double,
    ext_volt0_offset double,
    ext_volt0_slope double,
    ext_volt1_offset double,
    ext_volt1_slope double,
    ext_volt2_offset double,
    ext_volt2_slope double,
    ext_volt3_offset double,
    ext_volt3_slope double,
    ext_volt4_offset double,
    ext_volt4_slope double,
    ext_volt5_offset double,
    ext_volt5_slope double,
    press_coeff_pc1 double,
    press_coeff_pc2 double,
    press_coeff_pc3 double,
    press_coeff_pd1 double,
    press_coeff_pd2 double,
    press_coeff_poffset double,
    press_coeff_pslope double,
    press_coeff_pt1 double,
    press_coeff_pt2 double,
    press_coeff_pt3 double,
    press_coeff_pt4 double,
    pressure_sensor_range double,
    pressure_sensor_serial_number text,
    serial_number text,
    temp_coeff_offset double,
    temp_coeff_ta0 double,
    temp_coeff_ta1 double,
    temp_coeff_ta2 double,
    temp_coeff_ta3 double,
    temp_sensor_serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_no_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_lithium double,
    battery_voltage_main double,
    date_time_string text,
    ext_v01_current double,
    logging_status text,
    mem_free int,
    num_events int,
    num_samples int,
    operational_current double,
    profiles int,
    pump_current double,
    sample_length int,
    samples_free int,
    serial_current double,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_no_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auto_run int,
    battery_cutoff double,
    battery_type text,
    echo_characters int,
    ext_volt_0 int,
    ext_volt_1 int,
    ext_volt_2 int,
    ext_volt_3 int,
    ext_volt_4 int,
    ext_volt_5 int,
    gas_tension_device int,
    ignore_switch int,
    min_cond_freq int,
    optode int,
    output_executed_tag int,
    output_format text,
    pump_delay int,
    sbe38 int,
    sbe63 int,
    scans_to_average int,
    serial_number text,
    wetlabs int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_sa_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    elapsed_time double,
    input_voltage double,
    par bigint,
    par_measured double,
    pitch double,
    raw_internal_temp int,
    roll double,
    serial_number text,
    temp_interior double,
    temperature_volts double,
    voltage_out double,
    x_accel_counts int,
    y_accel_counts int,
    z_accel_counts int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.prest_real_time (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    absolute_pressure double,
    date_time_string text,
    pressure_temp double,
    sample_number int,
    sample_type text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.prest_reference_oscillator (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    pcb_thermistor_value int,
    reference_error double,
    reference_oscillator_freq double,
    sample_number int,
    sample_type text,
    set_timeout int,
    set_timeout_icd int,
    set_timeout_max int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.prest_configuration_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    acq_crystal_coeff_fra0 double,
    acq_crystal_coeff_fra1 double,
    acq_crystal_coeff_fra2 double,
    acq_crystal_coeff_fra3 double,
    battery_type int,
    baud_rate int,
    calibration_date_acq_crystal text,
    calibration_date_pressure text,
    device_type text,
    enable_alerts int,
    press_coeff_pc1 double,
    press_coeff_pc2 double,
    press_coeff_pc3 double,
    press_coeff_pd1 double,
    press_coeff_pd2 double,
    press_coeff_poffset double,
    press_coeff_pt1 double,
    press_coeff_pt2 double,
    press_coeff_pt3 double,
    press_coeff_pt4 double,
    press_coeff_pu0 double,
    press_coeff_py1 double,
    press_coeff_py2 double,
    press_coeff_py3 double,
    pressure_sensor_range double,
    pressure_sensor_serial_number text,
    sample_period int,
    serial_number text,
    upload_type int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.prest_device_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_main double,
    bytes_free int,
    bytes_used int,
    date_time_str text,
    device_type text,
    event_count int,
    sample_number int,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.prest_event_counter (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    command_buffer_overflow int,
    device_type text,
    error_10 int,
    error_12 int,
    low_battery int,
    max_stack double,
    number_events int,
    power_fail_reset int,
    power_on_reset int,
    serial_byte_error int,
    serial_number text,
    serial_receive_overflow int,
    signal_error int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.prest_hardware_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    device_type text,
    firmware_date text,
    firmware_version text,
    hardware_version blob,
    manufacture_date text,
    manufacturer text,
    pcb_serial_number blob,
    pcb_type text,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_control_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_bank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    checksum int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_length int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_dev1_data_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    record_length int,
    record_time bigint,
    record_type int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_a_regular_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_bank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    elapsed_time_config bigint,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    recording_active int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_a_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cycle_rate int,
    cycles_between_blanks int,
    disable_start_blank_flush int,
    driver_id_device1 int,
    driver_id_device2 int,
    driver_id_device3 int,
    driver_id_prestart int,
    driver_id_sami int,
    extend_global_config int,
    flush_pump_interval int,
    launch_time bigint,
    measure_after_pump_pulse int,
    num_blank_cycles int,
    num_reagent_cycles int,
    parameter_pointer_device1 int,
    parameter_pointer_device2 int,
    parameter_pointer_device3 int,
    parameter_pointer_prestart int,
    parameter_pointer_sami int,
    pmi_sample_schedule int,
    pump_on_to_measure int,
    pump_pulse int,
    recording_time int,
    sami_sample_schedule int,
    samples_per_measure bigint,
    send_live_records int,
    send_record_type int,
    slot1_follows_sami_sample int,
    slot1_independent_schedule int,
    slot2_follows_sami_sample int,
    slot2_independent_schedule int,
    slot3_follows_sami_sample int,
    slot3_independent_schedule int,
    start_time_offset int,
    timer_interval_device1 int,
    timer_interval_device2 int,
    timer_interval_device3 int,
    timer_interval_prestart int,
    timer_interval_sami int,
    use_baud_rate_57600 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.trhph_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage double,
    eh_sensor double,
    hydrogen_5 double,
    hydrogen_x1 double,
    hydrogen_x5 double,
    ref_temp_degc double,
    ref_temp_volts double,
    resistivity_5 double,
    resistivity_temp_degc double,
    resistivity_temp_volts double,
    resistivity_x1 double,
    resistivity_x5 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_hardware_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    board_frequency int,
    compass_installed int,
    firmware_version text,
    hardware_revision int,
    instrmt_type_serial_number text,
    pic_version int,
    recorder_installed int,
    recorder_size int,
    velocity_range int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_head_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    head_frequency int,
    head_serial_number text,
    head_type int,
    magnetometer_sensor int,
    number_beams int,
    pressure_sensor int,
    system_data text,
    tilt_sensor int,
    tilt_sensor_mounting int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_user_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input_address int,
    analog_output_enable int,
    analog_power_output int,
    analog_scale_factor int,
    average_interval int,
    blanking_distance int,
    cell_size int,
    compass_update_rate int,
    coordinate_system int,
    correlation_threshold int,
    deployment_name text,
    deployment_start_time blob,
    diagnostics_interval int,
    diagnostics_mode_enable int,
    dynamic_position_type int,
    file_comments text,
    filter_constants text,
    filter_data_output int,
    fixed_wave_blanking_distance int,
    measurement_interval int,
    mode_type int,
    number_beams int,
    number_beams_per_cell int,
    number_cells int,
    number_diagnostics_per_wave int,
    number_diagnostics_samples int,
    number_pings int,
    number_pings_diagnostic int,
    number_samples_per_burst int,
    output_format_nortek int,
    percent_wave_cell_position int,
    power_level_pcr1 int,
    power_level_pcr2 int,
    power_level_tcm1 int,
    power_level_tcm2 int,
    profile_type int,
    receive_length int,
    sample_on_sync int,
    scaling int,
    serial_output_enable int,
    software_version int,
    sound_speed_adjust_factor int,
    stage_enable int,
    start_on_sync int,
    sync_out_position int,
    time_between_bursts int,
    time_between_pings int,
    transmit_pulse_length int,
    transmit_pulse_length_2nd int,
    use_dsp_filter int,
    use_specified_sound_speed int,
    velocity_adjustment_factor text,
    wave_cell_position int,
    wave_data_rate int,
    wave_measurement_cell_size int,
    wave_transmit_pulse int,
    wrap_mode int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a_reference_counts blob,
    a_reference_dark_counts int,
    a_signal_counts blob,
    a_signal_dark_counts int,
    c_reference_counts blob,
    c_reference_dark_counts int,
    c_signal_counts blob,
    c_signal_dark_counts int,
    checksum int,
    elapsed_run_time bigint,
    external_temp_raw int,
    internal_temp_raw int,
    meter_type int,
    num_wavelengths int,
    packet_type int,
    pressure_counts int,
    record_length int,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    firmware_date text,
    firmware_version text,
    persistor_cf_bios_version text,
    persistor_cf_picodos_version text,
    persistor_cf_serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.tmpsf_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage double,
    serial_number text,
    temperature01 double,
    temperature02 double,
    temperature03 double,
    temperature04 double,
    temperature05 double,
    temperature06 double,
    temperature07 double,
    temperature08 double,
    temperature09 double,
    temperature10 double,
    temperature11 double,
    temperature12 double,
    temperature13 double,
    temperature14 double,
    temperature15 double,
    temperature16 double,
    temperature17 double,
    temperature18 double,
    temperature19 double,
    temperature20 double,
    temperature21 double,
    temperature22 double,
    temperature23 double,
    temperature24 double,
    timestamp text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.tmpsf_engineering (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage double,
    tmpsf_cal_coeffs blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_b_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    mag_comp_x double,
    mag_comp_y double,
    pitch double,
    roll double,
    temperature double,
    turbulent_velocity_east double,
    turbulent_velocity_north double,
    turbulent_velocity_up double,
    velocity_beam_a int,
    velocity_beam_b int,
    velocity_beam_c int,
    velocity_beam_d int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_b_engineering (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bin_to_si_conversion double,
    burst_interval_days int,
    burst_interval_hours int,
    burst_interval_minutes int,
    burst_interval_seconds int,
    compass_offset_0 int,
    compass_offset_1 int,
    compass_offset_2 int,
    compass_scale_factor_0 double,
    compass_scale_factor_1 double,
    compass_scale_factor_2 double,
    sample_period double,
    samples_per_burst int,
    tilt_offset_pitch int,
    tilt_offset_roll int,
    velocity_offset_a int,
    velocity_offset_b int,
    velocity_offset_c int,
    velocity_offset_d int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_pd0_earth_parsed (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    address_error_exception int,
    battery_saver_power int,
    beam_angle int,
    bin_1_distance int,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    blank_after_transmit int,
    bus_error_exception int,
    cell_length int,
    checksum int,
    clock_jump_backward int,
    clock_jump_forward int,
    clock_read_error int,
    cold_wakeup_occurred int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    correlation_magnitude_id int,
    cpu_board_serial_number text,
    data_flag int,
    data_source_id int,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    echo_intensity_id int,
    emulator_exception int,
    ensemble_number int,
    ensemble_number_increment int,
    ensemble_start_time double,
    error_vel_threshold int,
    error_velocity blob,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    fixed_leader_id int,
    header_id int,
    heading int,
    heading_alignment int,
    heading_bias int,
    heading_stdev int,
    illegal_instruction_exception int,
    lag_length int,
    level_7_interrupt int,
    low_corr_threshold int,
    low_latency_trigger int,
    mpt_minutes int,
    mpt_seconds double,
    num_beams int,
    num_bytes int,
    num_cells int,
    num_code_repetitions int,
    num_data_types int,
    offset_data_types blob,
    percent_bad_beams blob,
    percent_good_3beam blob,
    percent_good_4beam blob,
    percent_good_id int,
    percent_good_min int,
    percent_transforms_reject blob,
    pinging int,
    pings_per_ensemble int,
    pitch int,
    pitch_stdev int,
    power_fail int,
    pressure bigint,
    pressure_variance bigint,
    real_time_clock blob,
    reference_layer_start int,
    reference_layer_stop int,
    roll int,
    roll_stdev int,
    salinity int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_temperature int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    serial_number text,
    signal_processing_mode int,
    speed_of_sound int,
    spurious_clock_interrupt int,
    spurious_dsp_interrupt int,
    spurious_uart_interrupt int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    temperature int,
    time_per_ping_minutes int,
    time_per_ping_seconds double,
    transducer_depth int,
    transmit_lag_distance int,
    transmit_pulse_length int,
    unassigned_exception int,
    unexpected_alarm int,
    unknown_wakeup_occurred int,
    variable_leader_id int,
    velocity_data_id int,
    watchdog_restart_occurred int,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    zero_divide_instruction int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_pd12_parsed (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    ensemble_number int,
    ensemble_start_time double,
    error_velocity blob,
    firmware_revision int,
    firmware_version int,
    heading int,
    num_bins int,
    num_bytes int,
    pd12_packet_id int,
    pitch int,
    pressure bigint,
    real_time_clock blob,
    roll int,
    serial_number text,
    start_bin int,
    subsampling_parameter int,
    temperature int,
    velocity_po_east_flag int,
    velocity_po_error_flag int,
    velocity_po_north_flag int,
    velocity_po_up_flag int,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_waves_parsed (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    avg_depth int,
    avg_heading int,
    avg_pitch int,
    avg_roll int,
    avg_speed_of_sound int,
    avg_temperature int,
    beam_radial_velocity blob,
    bin_1_distance int,
    bin_length int,
    burst_number bigint,
    burst_start_time double,
    checksum int,
    checksum_offset int,
    configuration int,
    distance_surface blob,
    dws_bitmap blob,
    elapsed_time bigint,
    firmware_version int,
    first_leader_id int,
    heading int,
    hpr_ping_id int,
    last_leader_id int,
    num_bins int,
    num_bins_out int,
    num_data_types int,
    offset_data_types int,
    pitch int,
    pressure bigint,
    real_time_clock blob,
    roll int,
    sample_number int,
    samples_per_burst int,
    serial_number text,
    stdev_heading int,
    stdev_pitch int,
    stdev_roll int,
    temperature int,
    time_between_bursts int,
    time_between_pings int,
    velocity_bitmap blob,
    wave_header_id int,
    wave_ping_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_compass_calibration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibration_temp double,
    coil_offset blob,
    electrical_null double,
    fluxgate_calibration_timestamp double,
    offset_up_down blob,
    pitch_up_down blob,
    roll_up_down blob,
    s_inverse_bx blob,
    s_inverse_by blob,
    s_inverse_bz blob,
    s_inverse_err blob,
    tilt_calibration_timestamp double,
    tilt_null double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_system_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    beam_angle int,
    beam_pattern text,
    board_serial_numbers text,
    boot_code_actual text,
    boot_code_required text,
    configuration text,
    cpu_firmware text,
    demod_1_type text,
    demod_1_version text,
    demod_2_type text,
    demod_2_version text,
    match_layer text,
    orientation text,
    power_timing_type text,
    power_timing_version text,
    pressure_coeff_c1 double,
    pressure_coeff_c2 double,
    pressure_coeff_c3 double,
    pressure_coeff_offset double,
    sensors text,
    serial_number text,
    temperature_sensor_offset double,
    transducer_frequency bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_data_header (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    noise_amp_beam1 int,
    noise_amp_beam2 int,
    noise_amp_beam3 int,
    noise_correlation_beam1 int,
    noise_correlation_beam2 int,
    noise_correlation_beam3 int,
    number_velocity_records int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_velocity_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam_1 int,
    amplitude_beam_2 int,
    amplitude_beam_3 int,
    analog_input_1 int,
    analog_input_2 int,
    correlation_beam_1 int,
    correlation_beam_2 int,
    correlation_beam_3 int,
    ensemble_counter int,
    seawater_pressure_mbar int,
    turbulent_velocity_east int,
    turbulent_velocity_north int,
    turbulent_velocity_vertical int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_system_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    roll_decidegree int,
    sound_speed_dms int,
    status_code int,
    temperature_centidegree int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_clock_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_array blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_battery_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_mv int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_identification_string (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    identification_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_wave_burst (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    absolute_pressure_burst blob,
    date_time_string text,
    ptemp_frequency double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_wave_statistics (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ass_sig_wave_height double,
    ass_sig_wave_period double,
    ass_total_energy double,
    ass_total_variance double,
    n_avg_band int,
    tss_10_wave_height double,
    tss_1_wave_height double,
    tss_avg_wave_height double,
    tss_avg_wave_period double,
    tss_max_wave_height double,
    tss_number_of_waves int,
    tss_sig_wave_height double,
    tss_sig_wave_period double,
    tss_total_energy double,
    tss_total_variance double,
    tss_wave_integration_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_nano_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bottom_pressure double,
    date_time_string text,
    press_trans_temp double,
    sensor_id text,
    time_sync_flag text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_lily_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    compass_direction double,
    date_time_string text,
    lily_temp double,
    lily_x_tilt double,
    lily_y_tilt double,
    sensor_id text,
    serial_number text,
    supply_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_iris_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    iris_temp double,
    iris_x_tilt double,
    iris_y_tilt double,
    sensor_id text,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_heat_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    heat_temp int,
    heat_x_tilt int,
    heat_y_tilt int,
    sensor_id text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_pd0_beam_parsed (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    address_error_exception int,
    battery_saver_power int,
    beam_1_velocity blob,
    beam_2_velocity blob,
    beam_3_velocity blob,
    beam_4_velocity blob,
    beam_angle int,
    bin_1_distance int,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    blank_after_transmit int,
    bus_error_exception int,
    cell_length int,
    checksum int,
    clock_jump_backward int,
    clock_jump_forward int,
    clock_read_error int,
    cold_wakeup_occurred int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    correlation_magnitude_id int,
    cpu_board_serial_number text,
    data_flag int,
    data_source_id int,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    echo_intensity_id int,
    emulator_exception int,
    ensemble_number int,
    ensemble_number_increment int,
    ensemble_start_time double,
    error_vel_threshold int,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    fixed_leader_id int,
    header_id int,
    heading int,
    heading_alignment int,
    heading_bias int,
    heading_stdev int,
    illegal_instruction_exception int,
    lag_length int,
    level_7_interrupt int,
    low_corr_threshold int,
    low_latency_trigger int,
    mpt_minutes int,
    mpt_seconds double,
    num_beams int,
    num_bytes int,
    num_cells int,
    num_code_repetitions int,
    num_data_types int,
    offset_data_types blob,
    percent_good_beam1 blob,
    percent_good_beam2 blob,
    percent_good_beam3 blob,
    percent_good_beam4 blob,
    percent_good_id int,
    percent_good_min int,
    pinging int,
    pings_per_ensemble int,
    pitch int,
    pitch_stdev int,
    power_fail int,
    pressure bigint,
    pressure_variance bigint,
    real_time_clock blob,
    reference_layer_start int,
    reference_layer_stop int,
    roll int,
    roll_stdev int,
    salinity int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_temperature int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    serial_number text,
    signal_processing_mode int,
    speed_of_sound int,
    spurious_clock_interrupt int,
    spurious_dsp_interrupt int,
    spurious_uart_interrupt int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    temperature int,
    time_per_ping_minutes int,
    time_per_ping_seconds double,
    transducer_depth int,
    transmit_lag_distance int,
    transmit_pulse_length int,
    unassigned_exception int,
    unexpected_alarm int,
    unknown_wakeup_occurred int,
    variable_leader_id int,
    velocity_data_id int,
    watchdog_restart_occurred int,
    zero_divide_instruction int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_a_control_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_bank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    checksum int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_length int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_data_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    ph_light_measurements blob,
    record_length int,
    record_time bigint,
    record_type int,
    reference_light_measurements blob,
    thermistor_end int,
    thermistor_start int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_regular_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_bank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    elapsed_time_config bigint,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    recording_active int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    driver_id_device1 int,
    driver_id_device2 int,
    driver_id_device3 int,
    driver_id_prestart int,
    driver_id_sami int,
    extend_global_config int,
    launch_time bigint,
    measure_to_pump_on int,
    number_blanks int,
    number_flushes int,
    number_measurements int,
    number_reagent_pumps int,
    number_samples_averaged int,
    parameter_pointer_device1 int,
    parameter_pointer_device2 int,
    parameter_pointer_device3 int,
    parameter_pointer_prestart int,
    parameter_pointer_sami int,
    pmi_sample_schedule int,
    pump_measure_t int,
    pump_off_flush int,
    pump_off_to_measure int,
    pump_on_flush int,
    pump_on_ind int,
    pv_off_ind int,
    recording_time int,
    salinity_delay int,
    sami_sample_schedule int,
    send_live_records int,
    send_record_type int,
    slot1_follows_sami_sample int,
    slot1_independent_schedule int,
    slot2_follows_sami_sample int,
    slot2_independent_schedule int,
    slot3_follows_sami_sample int,
    slot3_independent_schedule int,
    start_time_offset int,
    timer_interval_device1 int,
    timer_interval_device2 int,
    timer_interval_device3 int,
    timer_interval_prestart int,
    timer_interval_sami int,
    use_baud_rate_57600 int,
    valve_delay int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2a_a_dcl_instrument_air (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    avg_irga_temperature double,
    current_a2d int,
    date_time_string text,
    dcl_controller_timestamp text,
    gas_stream_pressure int,
    humidity double,
    humidity_temperature double,
    irga_detector_temperature double,
    irga_source_temperature double,
    measured_air_co2 double,
    supply_voltage double,
    zero_a2d int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2a_a_dcl_instrument_water (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    avg_irga_temperature double,
    current_a2d int,
    date_time_string text,
    dcl_controller_timestamp text,
    gas_stream_pressure int,
    humidity double,
    humidity_temperature double,
    irga_detector_temperature double,
    irga_source_temperature double,
    measured_water_co2 double,
    supply_voltage double,
    zero_a2d int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.metbk_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    air_temperature double,
    barometric_pressure double,
    eastward_wind_velocity double,
    lat double,
    lon double,
    longwave_irradiance double,
    northward_wind_velocity double,
    precipitation double,
    relative_humidity double,
    sea_surface_conductivity double,
    sea_surface_temperature double,
    shortwave_irradiance double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.metbk_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_main double,
    calibration_date text,
    current_tick int,
    date_time_string text,
    failure_messages text,
    firmware_version text,
    flash_card_presence int,
    instrument_model text,
    logging_interval int,
    ptt_id1 text,
    ptt_id2 text,
    ptt_id3 text,
    recent_record_interval int,
    sampling_state text,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.rasfl_sample_result (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage double,
    commanded_flowrate int,
    commanded_min_flowrate int,
    commanded_timelimit int,
    commanded_volume int,
    cumulative_volume double,
    date_time_string text,
    elapsed_time int,
    flowrate double,
    minimum_flowrate double,
    port_number int,
    sampling_status_code int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.d1000_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    temperature1 double,
    temperature2 double,
    temperature3 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ppsdn_sample_result (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage double,
    commanded_flowrate int,
    commanded_min_flowrate int,
    commanded_timelimit int,
    commanded_volume int,
    cumulative_volume double,
    date_time_string text,
    elapsed_time int,
    flowrate double,
    minimum_flowrate double,
    port_number int,
    sampling_status_code int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_data_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    frame_counter int,
    instrument_id text,
    internal_temperature int,
    sample_delay int,
    serial_number text,
    spkir_samples blob,
    timer double,
    va_sense int,
    vin_sense int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_d_data_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    signal_1_offset int,
    signal_1_scale_factor double,
    signal_2_offset int,
    signal_2_scale_factor double,
    signal_3_offset int,
    signal_3_scale_factor double,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_parsed (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    light_measurements blob,
    record_length int,
    record_time_1904_uint32 bigint,
    record_type int,
    reference_light_measurements blob,
    thermistor_end int,
    thermistor_start int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_ckl_wfp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    pressure int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_ckl_wfp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_number_samples bigint,
    wfp_time_off bigint,
    wfp_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dofst_k_wfp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dofst_k_oxygen bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dofst_k_wfp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_number_samples bigint,
    wfp_time_off bigint,
    wfp_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_kn_stc_imodem_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_k__stc_imodem_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    par_val_v double,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_stc_imodem_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_indicator int,
    wfp_profile_status int,
    wfp_profile_stop bigint,
    wfp_ramp_status int,
    wfp_sensor_stop bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_stc_imodem_engineering (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_prof_current double,
    wfp_prof_pressure double,
    wfp_prof_voltage double,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.rte_o_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    rte_avg_q_current double,
    rte_avg_supply_voltage double,
    rte_avg_voltage double,
    rte_coulombs double,
    rte_hits int,
    rte_state int,
    rte_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.mopak_o_dcl_accel (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    mopak_accelx double,
    mopak_accely double,
    mopak_accelz double,
    mopak_ang_ratex double,
    mopak_ang_ratey double,
    mopak_ang_ratez double,
    mopak_magx double,
    mopak_magy double,
    mopak_magz double,
    mopak_timer bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.mopak_o_dcl_rate (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    mopak_ang_ratex double,
    mopak_ang_ratey double,
    mopak_ang_ratez double,
    mopak_pitch double,
    mopak_roll double,
    mopak_timer bigint,
    mopak_yaw double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_k_wfp_stc_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_array blob,
    vel3d_k_amp0 int,
    vel3d_k_amp1 int,
    vel3d_k_amp2 int,
    vel3d_k_beams int,
    vel3d_k_data_set_description blob,
    vel3d_k_heading int,
    vel3d_k_pitch int,
    vel3d_k_roll int,
    vel3d_k_temp_c int,
    vel3d_k_v_scale int,
    vel3d_k_vel0 int,
    vel3d_k_vel1 int,
    vel3d_k_vel2 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_k_wfp_stc_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    vel3d_k_number_of_records int,
    vel3d_k_time_off bigint,
    vel3d_k_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcps_jln_stc_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcps_jln_events bigint,
    adcps_jln_id int,
    adcps_jln_length bigint,
    adcps_jln_records bigint,
    adcps_jln_samples_written bigint,
    adcps_jln_timestamp text,
    adcps_jln_volts double,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_stc_imodem_start_time (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_profile_start bigint,
    wfp_sensor_start bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_m_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_flbbcd_bb_ref double,
    sci_flbbcd_bb_sig double,
    sci_flbbcd_bb_units double,
    sci_flbbcd_cdom_ref double,
    sci_flbbcd_cdom_sig double,
    sci_flbbcd_cdom_units double,
    sci_flbbcd_chlor_ref double,
    sci_flbbcd_chlor_sig double,
    sci_flbbcd_chlor_units double,
    sci_flbbcd_therm double,
    sci_flbbcd_timestamp double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_k_wfp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_array blob,
    vel3d_k_acc_x int,
    vel3d_k_acc_y int,
    vel3d_k_acc_z int,
    vel3d_k_ambiguity int,
    vel3d_k_amp0 int,
    vel3d_k_amp1 int,
    vel3d_k_amp2 int,
    vel3d_k_battery_voltage int,
    vel3d_k_beams_coordinate int,
    vel3d_k_blanking int,
    vel3d_k_cell_size int,
    vel3d_k_configuration int,
    vel3d_k_corr0 int,
    vel3d_k_corr1 int,
    vel3d_k_corr2 int,
    vel3d_k_data_set_description blob,
    vel3d_k_error int,
    vel3d_k_heading int,
    vel3d_k_id int,
    vel3d_k_mag_x int,
    vel3d_k_mag_y int,
    vel3d_k_mag_z int,
    vel3d_k_micro_second int,
    vel3d_k_pitch int,
    vel3d_k_power_level int,
    vel3d_k_pressure bigint,
    vel3d_k_roll int,
    vel3d_k_serial bigint,
    vel3d_k_speed_sound int,
    vel3d_k_status int,
    vel3d_k_temp_c int,
    vel3d_k_transmit_energy int,
    vel3d_k_v_scale int,
    vel3d_k_vel0 int,
    vel3d_k_vel1 int,
    vel3d_k_vel2 int,
    vel3d_k_velocity_range int,
    vel3d_k_version int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdgv_m_glider_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_ctd41cp_timestamp double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    sci_water_cond double,
    sci_water_pressure double,
    sci_water_temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_glider_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    sci_oxy4_oxygen double,
    sci_oxy4_saturation double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_glider_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    sci_oxy4_c1amp double,
    sci_oxy4_c1rph double,
    sci_oxy4_c2amp double,
    sci_oxy4_c2rph double,
    sci_oxy4_calphase double,
    sci_oxy4_oxygen double,
    sci_oxy4_rawtemp double,
    sci_oxy4_saturation double,
    sci_oxy4_tcphase double,
    sci_oxy4_temp double,
    sci_oxy4_timestamp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_m_glider_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_flbb_bb_ref double,
    sci_flbb_bb_sig double,
    sci_flbb_bb_units double,
    sci_flbb_chlor_ref double,
    sci_flbb_chlor_sig double,
    sci_flbb_chlor_units double,
    sci_flbb_therm double,
    sci_flbb_timestamp double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_m_glider_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_flbbcd_bb_units double,
    sci_flbbcd_cdom_units double,
    sci_flbbcd_chlor_units double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_m_glider_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_flbbcd_bb_ref double,
    sci_flbbcd_bb_sig double,
    sci_flbbcd_bb_units double,
    sci_flbbcd_cdom_ref double,
    sci_flbbcd_cdom_sig double,
    sci_flbbcd_cdom_units double,
    sci_flbbcd_chlor_ref double,
    sci_flbbcd_chlor_sig double,
    sci_flbbcd_chlor_units double,
    sci_flbbcd_therm double,
    sci_flbbcd_timestamp double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_m_glider_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_bsipar_par double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_m_glider_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_bsipar_par double,
    sci_bsipar_sensor_volts double,
    sci_bsipar_supply_volts double,
    sci_bsipar_temp double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.glider_eng_telemetered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    c_ballast_pumped double,
    c_battpos double,
    c_de_oil_vol double,
    c_dvl_on double,
    c_heading double,
    c_pitch double,
    c_wpt_lat double,
    c_wpt_lon double,
    m_air_pump int,
    m_altitude double,
    m_ballast_pumped double,
    m_battery double,
    m_battpos double,
    m_coulomb_amphr double,
    m_coulomb_amphr_total double,
    m_coulomb_current double,
    m_de_oil_vol double,
    m_depth double,
    m_fin double,
    m_heading double,
    m_lat double,
    m_lithium_battery_relative_charge double,
    m_lon double,
    m_pitch double,
    m_present_secs_into_mission double,
    m_present_time double,
    m_pressure double,
    m_raw_altitude double,
    m_roll double,
    m_speed double,
    m_vacuum double,
    m_water_depth double,
    m_water_vx double,
    m_water_vy double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.glider_eng_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    c_air_pump int,
    c_ballast_pumped double,
    c_battpos double,
    c_battroll double,
    c_bsipar_on double,
    c_de_oil_vol double,
    c_dvl_on double,
    c_flbbcd_on double,
    c_heading double,
    c_oxy3835_wphase_on double,
    c_pitch double,
    c_profile_on double,
    c_wpt_lat double,
    c_wpt_lon double,
    m_1meg_persistor int,
    m_aground_water_depth double,
    m_air_fill int,
    m_air_pump int,
    m_altimeter_status int,
    m_altimeter_voltage double,
    m_altitude double,
    m_altitude_rate double,
    m_appear_to_be_at_surface int,
    m_argos_is_xmitting int,
    m_argos_on int,
    m_argos_sent_data int,
    m_argos_timestamp double,
    m_at_risk_depth double,
    m_avbot_enable int,
    m_avbot_power int,
    m_avg_climb_rate double,
    m_avg_depth_rate double,
    m_avg_dive_rate double,
    m_avg_downward_inflection_time double,
    m_avg_speed double,
    m_avg_system_clock_lags_gps double,
    m_avg_upward_inflection_time double,
    m_avg_yo_time double,
    m_ballast_pumped double,
    m_ballast_pumped_energy double,
    m_ballast_pumped_vel double,
    m_battery double,
    m_battery_inst double,
    m_battpos double,
    m_battpos_vel double,
    m_battroll double,
    m_battroll_vel double,
    m_bpump_fault_bit int,
    m_certainly_at_surface int,
    m_chars_tossed_by_abend double,
    m_chars_tossed_with_cd_off double,
    m_chars_tossed_with_power_off double,
    m_climb_tot_time double,
    m_console_cd int,
    m_console_on int,
    m_cop_tickle int,
    m_coulomb_amphr double,
    m_coulomb_amphr_raw double,
    m_coulomb_amphr_total double,
    m_coulomb_current double,
    m_coulomb_current_raw double,
    m_cycle_number double,
    m_de_oil_vol double,
    m_de_oil_vol_pot_voltage double,
    m_de_pump_fault_count double,
    m_depth double,
    m_depth_rate double,
    m_depth_rate_avg_final double,
    m_depth_rate_running_avg double,
    m_depth_rate_running_avg_n int,
    m_depth_rate_subsampled double,
    m_depth_rejected int,
    m_depth_state int,
    m_depth_subsampled double,
    m_device_drivers_called_abnormally double,
    m_device_error double,
    m_device_oddity double,
    m_device_warning double,
    m_digifin_cmd_done double,
    m_digifin_cmd_error double,
    m_digifin_leakdetect_reading double,
    m_digifin_motorstep_counter double,
    m_digifin_resp_data double,
    m_digifin_status double,
    m_disk_free double,
    m_disk_usage double,
    m_dist_to_wpt double,
    m_dive_depth double,
    m_dive_tot_time double,
    m_dr_fix_time double,
    m_dr_postfix_time double,
    m_dr_surf_x_lmc double,
    m_dr_surf_y_lmc double,
    m_dr_time double,
    m_dr_x_actual_err double,
    m_dr_x_ini_err double,
    m_dr_x_postfix_drift double,
    m_dr_x_ta_postfix_drift double,
    m_dr_y_actual_err double,
    m_dr_y_ini_err double,
    m_dr_y_postfix_drift double,
    m_dr_y_ta_postfix_drift double,
    m_est_time_to_surface double,
    m_fin double,
    m_fin_vel double,
    m_final_water_vx double,
    m_final_water_vy double,
    m_fluid_pumped double,
    m_fluid_pumped_aft_hall_voltage double,
    m_fluid_pumped_fwd_hall_voltage double,
    m_fluid_pumped_vel double,
    m_free_heap double,
    m_gps_dist_from_dr double,
    m_gps_fix_x_lmc double,
    m_gps_fix_y_lmc double,
    m_gps_full_status int,
    m_gps_heading double,
    m_gps_ignored_lat double,
    m_gps_ignored_lon double,
    m_gps_invalid_lat double,
    m_gps_invalid_lon double,
    m_gps_mag_var double,
    m_gps_num_satellites double,
    m_gps_on int,
    m_gps_postfix_x_lmc double,
    m_gps_postfix_y_lmc double,
    m_gps_speed double,
    m_gps_status int,
    m_gps_toofar_lat double,
    m_gps_toofar_lon double,
    m_gps_uncertainty double,
    m_gps_utc_day int,
    m_gps_utc_hour int,
    m_gps_utc_minute int,
    m_gps_utc_month int,
    m_gps_utc_second double,
    m_gps_utc_year int,
    m_gps_x_lmc double,
    m_gps_y_lmc double,
    m_hdg_derror double,
    m_hdg_error double,
    m_hdg_ierror double,
    m_hdg_rate double,
    m_heading double,
    m_initial_water_vx double,
    m_initial_water_vy double,
    m_iridium_attempt_num double,
    m_iridium_call_num double,
    m_iridium_connected int,
    m_iridium_console_on int,
    m_iridium_dialed_num double,
    m_iridium_on int,
    m_iridium_redials double,
    m_iridium_signal_strength double,
    m_iridium_status int,
    m_iridium_waiting_redial_delay int,
    m_iridium_waiting_registration int,
    m_is_ballast_pump_moving int,
    m_is_battpos_moving int,
    m_is_battroll_moving int,
    m_is_de_pump_moving int,
    m_is_fin_moving int,
    m_is_fpitch_pump_moving int,
    m_is_speed_estimated int,
    m_is_thermal_valve_moving int,
    m_last_yo_time double,
    m_lat double,
    m_leak int,
    m_leak_forward int,
    m_leakdetect_voltage double,
    m_leakdetect_voltage_forward double,
    m_lithium_battery_relative_charge double,
    m_lithium_battery_status double,
    m_lithium_battery_time_to_charge double,
    m_lithium_battery_time_to_discharge double,
    m_lon double,
    m_min_free_heap double,
    m_min_spare_heap double,
    m_mission_avg_speed_climbing double,
    m_mission_avg_speed_diving double,
    m_mission_start_time double,
    m_num_half_yos_in_segment double,
    m_pitch double,
    m_pitch_energy double,
    m_pitch_error double,
    m_present_secs_into_mission double,
    m_present_time double,
    m_pressure double,
    m_pressure_raw_voltage_sample0 double,
    m_pressure_raw_voltage_sample19 double,
    m_pressure_voltage double,
    m_raw_altitude double,
    m_raw_altitude_rejected int,
    m_roll double,
    m_science_clothesline_lag double,
    m_science_on int,
    m_science_ready_for_consci int,
    m_science_sent_some_data double,
    m_science_sync_time double,
    m_science_unreadiness_for_consci int,
    m_spare_heap double,
    m_speed double,
    m_stable_comms int,
    m_strobe_ctrl int,
    m_surface_est_cmd double,
    m_surface_est_ctd double,
    m_surface_est_fw double,
    m_surface_est_gps double,
    m_surface_est_irid double,
    m_surface_est_total double,
    m_system_clock_lags_gps double,
    m_tcm3_is_calibrated int,
    m_tcm3_magbearth double,
    m_tcm3_poll_time double,
    m_tcm3_recv_start_time double,
    m_tcm3_recv_stop_time double,
    m_tcm3_stddeverr double,
    m_tcm3_xcoverage double,
    m_tcm3_ycoverage double,
    m_tcm3_zcoverage double,
    m_thermal_acc_pres double,
    m_thermal_acc_pres_voltage double,
    m_thermal_acc_vol double,
    m_thermal_enuf_acc_vol int,
    m_thermal_pump int,
    m_thermal_updown int,
    m_thermal_valve int,
    m_time_til_wpt double,
    m_tot_ballast_pumped_energy double,
    m_tot_horz_dist double,
    m_tot_num_inflections double,
    m_tot_on_time double,
    m_vacuum double,
    m_veh_overheat int,
    m_veh_temp double,
    m_vehicle_temp double,
    m_vmg_to_wpt double,
    m_vx_lmc double,
    m_vy_lmc double,
    m_water_cond double,
    m_water_delta_vx double,
    m_water_delta_vy double,
    m_water_depth double,
    m_water_pressure double,
    m_water_temp double,
    m_water_vx double,
    m_water_vy double,
    m_why_started int,
    m_x_lmc double,
    m_y_lmc double,
    x_last_wpt_lat double,
    x_last_wpt_lon double,
    x_system_clock_adjusted double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.glider_eng_sci_telemetered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sci_m_disk_free double,
    sci_m_disk_usage double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.glider_eng_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    glider_eng_filename text,
    glider_eng_fileopen_time text,
    glider_mission_name text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.glider_eng_sci_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sci_bsipar_is_installed int,
    sci_ctd41cp_is_installed int,
    sci_dvl_is_installed int,
    sci_flbbcd_is_installed int,
    sci_m_disk_free double,
    sci_m_disk_usage double,
    sci_m_free_heap double,
    sci_m_min_free_heap double,
    sci_m_min_spare_heap double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    sci_m_science_on int,
    sci_m_spare_heap double,
    sci_oxy3835_wphase_is_installed int,
    sci_oxy4_is_installed int,
    sci_reqd_heartbeat double,
    sci_software_ver double,
    sci_wants_comms int,
    sci_wants_surface int,
    sci_x_disk_files_removed double,
    sci_x_sent_data_files double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_stc_eng_stc (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cg_eng_cpu_load1 double,
    cg_eng_cpu_load15 double,
    cg_eng_cpu_load5 double,
    cg_eng_cpu_uptime text,
    cg_eng_dcl_port_status double,
    cg_eng_dclp1_clim int,
    cg_eng_dclp1_current double,
    cg_eng_dclp1_eflag int,
    cg_eng_dclp1_enable int,
    cg_eng_dclp1_prot int,
    cg_eng_dclp1_volt double,
    cg_eng_dclp1_vsel int,
    cg_eng_dclp2_clim int,
    cg_eng_dclp2_current double,
    cg_eng_dclp2_eflag int,
    cg_eng_dclp2_enable int,
    cg_eng_dclp2_prot int,
    cg_eng_dclp2_volt double,
    cg_eng_dclp2_vsel int,
    cg_eng_dclp3_clim int,
    cg_eng_dclp3_current double,
    cg_eng_dclp3_eflag int,
    cg_eng_dclp3_enable int,
    cg_eng_dclp3_prot int,
    cg_eng_dclp3_volt double,
    cg_eng_dclp3_vsel int,
    cg_eng_dclp4_clim int,
    cg_eng_dclp4_current double,
    cg_eng_dclp4_eflag int,
    cg_eng_dclp4_enable int,
    cg_eng_dclp4_prot int,
    cg_eng_dclp4_volt double,
    cg_eng_dclp4_vsel int,
    cg_eng_dclp5_clim int,
    cg_eng_dclp5_current double,
    cg_eng_dclp5_eflag int,
    cg_eng_dclp5_enable int,
    cg_eng_dclp5_prot int,
    cg_eng_dclp5_volt double,
    cg_eng_dclp5_vsel int,
    cg_eng_dclp6_clim int,
    cg_eng_dclp6_current double,
    cg_eng_dclp6_eflag int,
    cg_eng_dclp6_enable int,
    cg_eng_dclp6_prot int,
    cg_eng_dclp6_volt double,
    cg_eng_dclp6_vsel int,
    cg_eng_dclp7_clim int,
    cg_eng_dclp7_current double,
    cg_eng_dclp7_eflag int,
    cg_eng_dclp7_enable int,
    cg_eng_dclp7_prot int,
    cg_eng_dclp7_volt double,
    cg_eng_dclp7_vsel int,
    cg_eng_dclp8_clim int,
    cg_eng_dclp8_current double,
    cg_eng_dclp8_eflag int,
    cg_eng_dclp8_enable int,
    cg_eng_dclp8_prot int,
    cg_eng_dclp8_volt double,
    cg_eng_dclp8_vsel int,
    cg_eng_dmgrstatus_active int,
    cg_eng_dmgrstatus_date text,
    cg_eng_dmgrstatus_failed int,
    cg_eng_dmgrstatus_halted int,
    cg_eng_dmgrstatus_map text,
    cg_eng_dmgrstatus_started int,
    cg_eng_dmgrstatus_time text,
    cg_eng_dmgrstatus_update double,
    cg_eng_err_bcmd int,
    cg_eng_err_c_ctl int,
    cg_eng_err_c_gps int,
    cg_eng_err_c_imm int,
    cg_eng_err_c_irid int,
    cg_eng_err_c_power_sys int,
    cg_eng_err_c_pps int,
    cg_eng_err_c_status int,
    cg_eng_err_c_telem_sys int,
    cg_eng_err_cpm1 int,
    cg_eng_err_d_ctl int,
    cg_eng_err_d_status int,
    cg_eng_err_dlog_mgr int,
    cg_eng_err_dlogp1 int,
    cg_eng_err_dlogp2 int,
    cg_eng_err_dlogp3 int,
    cg_eng_err_dlogp4 int,
    cg_eng_err_dlogp5 int,
    cg_eng_err_dlogp6 int,
    cg_eng_err_dlogp7 int,
    cg_eng_err_dlogp8 int,
    cg_eng_err_rcmd int,
    cg_eng_err_superv int,
    cg_eng_errmsg_bcmd text,
    cg_eng_errmsg_c_ctl text,
    cg_eng_errmsg_c_gps text,
    cg_eng_errmsg_c_imm text,
    cg_eng_errmsg_c_irid text,
    cg_eng_errmsg_c_power_sys text,
    cg_eng_errmsg_c_pps text,
    cg_eng_errmsg_c_status text,
    cg_eng_errmsg_c_telem_sys text,
    cg_eng_errmsg_cpm1 text,
    cg_eng_errmsg_d_ctl text,
    cg_eng_errmsg_d_status text,
    cg_eng_errmsg_dlog_mgr text,
    cg_eng_errmsg_dlogp1 text,
    cg_eng_errmsg_dlogp2 text,
    cg_eng_errmsg_dlogp3 text,
    cg_eng_errmsg_dlogp4 text,
    cg_eng_errmsg_dlogp5 text,
    cg_eng_errmsg_dlogp6 text,
    cg_eng_errmsg_dlogp7 text,
    cg_eng_errmsg_dlogp8 text,
    cg_eng_errmsg_rcmd text,
    cg_eng_errmsg_superv text,
    cg_eng_gps_alt double,
    cg_eng_gps_cog double,
    cg_eng_gps_date bigint,
    cg_eng_gps_fix int,
    cg_eng_gps_hdop double,
    cg_eng_gps_last_update double,
    cg_eng_gps_lat double,
    cg_eng_gps_latstr text,
    cg_eng_gps_lon double,
    cg_eng_gps_lonstr text,
    cg_eng_gps_msg_date text,
    cg_eng_gps_msg_time text,
    cg_eng_gps_nsat int,
    cg_eng_gps_spd double,
    cg_eng_gps_time bigint,
    cg_eng_loadshed_last_update double,
    cg_eng_loadshed_status text,
    cg_eng_memory_free bigint,
    cg_eng_memory_ram bigint,
    cg_eng_mpic_bat_c double,
    cg_eng_mpic_bat_v double,
    cg_eng_mpic_dcl bigint,
    cg_eng_mpic_dsl bigint,
    cg_eng_mpic_eflag bigint,
    cg_eng_mpic_eflag2 bigint,
    cg_eng_mpic_esw bigint,
    cg_eng_mpic_fw_wifi int,
    cg_eng_mpic_fw_wifi_c double,
    cg_eng_mpic_fw_wifi_e int,
    cg_eng_mpic_fw_wifi_v double,
    cg_eng_mpic_gf_ena int,
    cg_eng_mpic_gflt1 double,
    cg_eng_mpic_gflt2 double,
    cg_eng_mpic_gflt3 double,
    cg_eng_mpic_gflt4 double,
    cg_eng_mpic_gps int,
    cg_eng_mpic_hbeat_dtime int,
    cg_eng_mpic_hbeat_enable int,
    cg_eng_mpic_hbeat_threshold int,
    cg_eng_mpic_humid double,
    cg_eng_mpic_irid int,
    cg_eng_mpic_irid_c double,
    cg_eng_mpic_irid_e int,
    cg_eng_mpic_irid_v double,
    cg_eng_mpic_last_update double,
    cg_eng_mpic_ld_ena int,
    cg_eng_mpic_ldet1 double,
    cg_eng_mpic_ldet2 double,
    cg_eng_mpic_main_c double,
    cg_eng_mpic_main_v double,
    cg_eng_mpic_pps int,
    cg_eng_mpic_press double,
    cg_eng_mpic_sbd int,
    cg_eng_mpic_sbd_ce_msg int,
    cg_eng_mpic_temp1 double,
    cg_eng_mpic_temp2 double,
    cg_eng_mpic_wake_cpm double,
    cg_eng_mpic_wpc int,
    cg_eng_mpic_wsrc int,
    cg_eng_msg_cnts_c_gps int,
    cg_eng_msg_cnts_c_ntp int,
    cg_eng_msg_cnts_c_power_sys int,
    cg_eng_msg_cnts_c_pps int,
    cg_eng_msg_cnts_c_superv int,
    cg_eng_msg_cnts_c_telem int,
    cg_eng_msg_cnts_d_dlog_ngr int,
    cg_eng_msg_cnts_d_gps int,
    cg_eng_msg_cnts_d_ntp int,
    cg_eng_msg_cnts_d_pps int,
    cg_eng_msg_cnts_d_superv int,
    cg_eng_nproc int,
    cg_eng_ntp_jitter double,
    cg_eng_ntp_offset double,
    cg_eng_ntp_refid text,
    cg_eng_platform_time text,
    cg_eng_platform_utime double,
    cg_eng_port_dlog1_bad bigint,
    cg_eng_port_dlog1_bb bigint,
    cg_eng_port_dlog1_good bigint,
    cg_eng_port_dlog1_lc int,
    cg_eng_port_dlog1_ld int,
    cg_eng_port_dlog1_log bigint,
    cg_eng_port_dlog1_lu double,
    cg_eng_port_dlog1_name text,
    cg_eng_port_dlog1_rx bigint,
    cg_eng_port_dlog1_state text,
    cg_eng_port_dlog1_tx bigint,
    cg_eng_port_dlog2_bad bigint,
    cg_eng_port_dlog2_bb bigint,
    cg_eng_port_dlog2_good bigint,
    cg_eng_port_dlog2_lc int,
    cg_eng_port_dlog2_ld int,
    cg_eng_port_dlog2_log bigint,
    cg_eng_port_dlog2_lu double,
    cg_eng_port_dlog2_name text,
    cg_eng_port_dlog2_rx bigint,
    cg_eng_port_dlog2_state text,
    cg_eng_port_dlog2_tx bigint,
    cg_eng_port_dlog3_bad bigint,
    cg_eng_port_dlog3_bb bigint,
    cg_eng_port_dlog3_good bigint,
    cg_eng_port_dlog3_lc int,
    cg_eng_port_dlog3_ld int,
    cg_eng_port_dlog3_log bigint,
    cg_eng_port_dlog3_lu double,
    cg_eng_port_dlog3_name text,
    cg_eng_port_dlog3_rx bigint,
    cg_eng_port_dlog3_state text,
    cg_eng_port_dlog3_tx bigint,
    cg_eng_port_dlog4_bad bigint,
    cg_eng_port_dlog4_bb bigint,
    cg_eng_port_dlog4_good bigint,
    cg_eng_port_dlog4_lc int,
    cg_eng_port_dlog4_ld int,
    cg_eng_port_dlog4_log bigint,
    cg_eng_port_dlog4_lu double,
    cg_eng_port_dlog4_name text,
    cg_eng_port_dlog4_rx bigint,
    cg_eng_port_dlog4_state text,
    cg_eng_port_dlog4_tx bigint,
    cg_eng_port_dlog5_bad bigint,
    cg_eng_port_dlog5_bb bigint,
    cg_eng_port_dlog5_good bigint,
    cg_eng_port_dlog5_lc int,
    cg_eng_port_dlog5_ld int,
    cg_eng_port_dlog5_log bigint,
    cg_eng_port_dlog5_lu double,
    cg_eng_port_dlog5_name text,
    cg_eng_port_dlog5_rx bigint,
    cg_eng_port_dlog5_state text,
    cg_eng_port_dlog5_tx bigint,
    cg_eng_port_dlog6_bad bigint,
    cg_eng_port_dlog6_bb bigint,
    cg_eng_port_dlog6_good bigint,
    cg_eng_port_dlog6_lc int,
    cg_eng_port_dlog6_ld int,
    cg_eng_port_dlog6_log bigint,
    cg_eng_port_dlog6_lu double,
    cg_eng_port_dlog6_name text,
    cg_eng_port_dlog6_rx bigint,
    cg_eng_port_dlog6_state text,
    cg_eng_port_dlog6_tx bigint,
    cg_eng_port_dlog7_bad bigint,
    cg_eng_port_dlog7_bb bigint,
    cg_eng_port_dlog7_good bigint,
    cg_eng_port_dlog7_lc int,
    cg_eng_port_dlog7_ld int,
    cg_eng_port_dlog7_log bigint,
    cg_eng_port_dlog7_lu double,
    cg_eng_port_dlog7_name text,
    cg_eng_port_dlog7_rx bigint,
    cg_eng_port_dlog7_state text,
    cg_eng_port_dlog7_tx bigint,
    cg_eng_port_dlog8_bad bigint,
    cg_eng_port_dlog8_bb bigint,
    cg_eng_port_dlog8_good bigint,
    cg_eng_port_dlog8_lc int,
    cg_eng_port_dlog8_ld int,
    cg_eng_port_dlog8_log bigint,
    cg_eng_port_dlog8_lu double,
    cg_eng_port_dlog8_name text,
    cg_eng_port_dlog8_rx bigint,
    cg_eng_port_dlog8_state text,
    cg_eng_port_dlog8_tx bigint,
    cg_eng_pps_bad_pulse int,
    cg_eng_pps_delta int,
    cg_eng_pps_deltamax int,
    cg_eng_pps_deltamin int,
    cg_eng_pps_last_update double,
    cg_eng_pps_lock text,
    cg_eng_pps_timestamp text,
    cg_eng_sbc_bid int,
    cg_eng_sbc_bstr int,
    cg_eng_sbc_ce_led int,
    cg_eng_sbc_eth0 int,
    cg_eng_sbc_eth1 int,
    cg_eng_sbc_fb1 int,
    cg_eng_sbc_fb2 int,
    cg_eng_sbc_gpio0 int,
    cg_eng_sbc_gpio1 int,
    cg_eng_sbc_gpio2 int,
    cg_eng_sbc_gpio3 int,
    cg_eng_sbc_gpio4 int,
    cg_eng_sbc_gpio5 int,
    cg_eng_sbc_gpo0 int,
    cg_eng_sbc_gpo1 int,
    cg_eng_sbc_gpo2 int,
    cg_eng_sbc_gpo3 int,
    cg_eng_sbc_gpo4 int,
    cg_eng_sbc_led0 int,
    cg_eng_sbc_led1 int,
    cg_eng_sbc_led2 int,
    cg_eng_sbc_wdt int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_ln_wfp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    estimated_oxygen_concentration double,
    optode_temperature double,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_ln_wfp_sio_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dosta_ln_optode_oxygen double,
    dosta_ln_optode_temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_l_wfp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_chl int,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_l_wfp_sio_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    flord_wfp_chlorophyll int,
    flord_wfp_temperature int,
    flord_wfp_turbidity int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_ckl_wfp_sio_mule_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_decimation_factor int,
    wfp_number_samples bigint,
    wfp_time_off bigint,
    wfp_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.trhph_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    trhph_cycle_time int,
    trhph_cycle_time_units int,
    trhph_eh_amp_power_status int,
    trhph_eprom_status int,
    trhph_hydro_sensor_power_status int,
    trhph_metadata_on_powerup int,
    trhph_metadata_on_restart int,
    trhph_power_control_word int,
    trhph_ref_temp_power_status int,
    trhph_res_power_status int,
    trhph_system_info text,
    trhph_thermo_hydro_amp_power_status int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_d_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    baud_rate int,
    clock text,
    date text,
    firmware_version text,
    internal_memory int,
    manual_mode int,
    manual_start_time text,
    measurement_1_dark_count_value int,
    measurement_1_slope_value double,
    measurement_2_dark_count_value int,
    measurement_2_slope_value double,
    measurement_3_dark_count_value int,
    measurement_3_slope_value double,
    number_measurements_per_reported_value int,
    number_of_packets_per_set int,
    number_of_reported_values_per_packet int,
    predefined_output_sequence int,
    recording_mode int,
    sampling_interval text,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.glider_eng_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    glider_eng_filename text,
    glider_eng_fileopen_time text,
    glider_mission_name text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_a_configuration_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    initialize_auto_telemetry int,
    initialize_power_down int,
    initialize_silent_mode int,
    instrument_id text,
    max_frame_rate text,
    network_address int,
    network_baud_rate bigint,
    network_mode int,
    serial_number text,
    spkir_a_firmware_version text,
    telemetry_baud_rate bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.sami_regular_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_bank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    elapsed_time_config bigint,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    recording_active int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_battery_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pco2w_battery_voltage int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_thermistor_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pco2w_thermistor_voltage int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.sio_eng_control_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sio_controller_id bigint,
    sio_controller_timestamp bigint,
    sio_eng_clock_drift int,
    sio_eng_number_of_wakeups bigint,
    sio_eng_on_time bigint,
    sio_eng_temperature double,
    sio_eng_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcps_jln_sio_mule_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcps_jln_bins int,
    adcps_jln_day int,
    adcps_jln_heading int,
    adcps_jln_hour int,
    adcps_jln_hsec int,
    adcps_jln_minute int,
    adcps_jln_month int,
    adcps_jln_pitch int,
    adcps_jln_pressure int,
    adcps_jln_roll int,
    adcps_jln_second int,
    adcps_jln_startbin int,
    adcps_jln_temp int,
    adcps_jln_year int,
    ensemble_number bigint,
    error_velocity blob,
    firmware_revision int,
    firmware_version int,
    sio_controller_timestamp bigint,
    subsampling_parameter int,
    unit_id int,
    velocity_po_east_flag int,
    velocity_po_error_flag int,
    velocity_po_north_flag int,
    velocity_po_up_flag int,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_ancillary_system_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcp_ambient_temp double,
    adcp_attitude_temp double,
    adcp_internal_moisture text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_transmit_path (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcp_transmit_current double,
    adcp_transmit_impedance double,
    adcp_transmit_test_results text,
    adcp_transmit_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_lily_leveling (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    compass_direction double,
    lily_leveling_status text,
    lily_temp double,
    lily_x_tilt double,
    lily_y_tilt double,
    sensor_id text,
    serial_number text,
    supply_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    botpt_iris_status_01 text,
    botpt_iris_status_02 text,
    botpt_lily_status_01 text,
    botpt_lily_status_02 text,
    botpt_nano_status text,
    botpt_syst_status text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.thsph_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    thsph_bthermistor int,
    thsph_h2electrode int,
    thsph_hie1 int,
    thsph_hie2 int,
    thsph_rthermistor int,
    thsph_s2electrode int,
    thsph_thermocouple1 int,
    thsph_thermocouple2 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_k_wfp_string (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    vel3d_k_str_id int,
    vel3d_k_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_k_wfp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    vel3d_k_time_off bigint,
    vel3d_k_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_imodem_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    ctd_time int,
    pressure int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_imodem_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    ctd_time int,
    pressure int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_sio_mule_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    reference_light_measurements blob,
    sio_controller_timestamp bigint,
    thermistor_end int,
    thermistor_start int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_sio_mule_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    sio_controller_timestamp bigint,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_l_wfp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    vel3d_l_date_time_array blob,
    vel3d_l_heading double,
    vel3d_l_hx double,
    vel3d_l_hy double,
    vel3d_l_hz double,
    vel3d_l_tx double,
    vel3d_l_ty double,
    vel3d_l_vp1 double,
    vel3d_l_vp2 double,
    vel3d_l_vp3 double,
    vel3d_l_vp4 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_l_wfp_sio_mule_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    serial_number text,
    vel3d_l_controller_timestamp bigint,
    vel3d_l_decimation_factor int,
    vel3d_l_number_of_records int,
    vel3d_l_time_off bigint,
    vel3d_l_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_wfp_sio_mule_start_time (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sio_controller_timestamp bigint,
    wfp_profile_start bigint,
    wfp_sensor_start bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_wfp_sio_mule_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sio_controller_timestamp bigint,
    wfp_decimation_factor int,
    wfp_indicator int,
    wfp_profile_status int,
    wfp_profile_stop bigint,
    wfp_ramp_status int,
    wfp_sensor_stop bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_wfp_sio_mule_engineering (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_prof_current double,
    wfp_prof_pressure double,
    wfp_prof_voltage double,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcps_jln_stc_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcps_jln_bins int,
    adcps_jln_day int,
    adcps_jln_fw_rev int,
    adcps_jln_fw_vers int,
    adcps_jln_heading int,
    adcps_jln_hour int,
    adcps_jln_hsec int,
    adcps_jln_minute int,
    adcps_jln_month int,
    adcps_jln_number bigint,
    adcps_jln_pitch int,
    adcps_jln_pressure int,
    adcps_jln_record bigint,
    adcps_jln_roll int,
    adcps_jln_second int,
    adcps_jln_startbin int,
    adcps_jln_temp int,
    adcps_jln_unit_id int,
    adcps_jln_year int,
    error_velocity blob,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_hardware_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    board_frequency int,
    compass_installed int,
    firmware_version text,
    hardware_revision int,
    instrmt_type_serial_number text,
    pic_version int,
    recorder_installed int,
    recorder_size int,
    velocity_range int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_head_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    head_frequency int,
    head_serial_number text,
    head_type int,
    magnetometer_sensor int,
    number_beams int,
    pressure_sensor int,
    system_data text,
    tilt_sensor int,
    tilt_sensor_mounting int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_user_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input_address int,
    analog_output_enable int,
    analog_power_output int,
    analog_scale_factor int,
    average_interval int,
    blanking_distance int,
    cell_size int,
    compass_update_rate int,
    coordinate_system int,
    correlation_threshold int,
    deployment_name text,
    deployment_start_time blob,
    diagnostics_interval int,
    diagnostics_mode_enable int,
    dynamic_position_type int,
    file_comments text,
    filter_constants text,
    filter_data_output int,
    fixed_wave_blanking_distance int,
    measurement_interval int,
    mode_type int,
    number_beams int,
    number_beams_per_cell int,
    number_cells int,
    number_diagnostics_per_wave int,
    number_diagnostics_samples int,
    number_pings int,
    number_pings_diagnostic int,
    number_samples_per_burst int,
    output_format_nortek int,
    percent_wave_cell_position int,
    power_level_pcr1 int,
    power_level_pcr2 int,
    power_level_tcm1 int,
    power_level_tcm2 int,
    profile_type int,
    receive_length int,
    sample_on_sync int,
    scaling int,
    serial_output_enable int,
    software_version int,
    sound_speed_adjust_factor int,
    stage_enable int,
    start_on_sync int,
    sync_out_position int,
    time_between_bursts int,
    time_between_pings int,
    transmit_pulse_length int,
    transmit_pulse_length_2nd int,
    use_dsp_filter int,
    use_specified_sound_speed int,
    velocity_adjustment_factor text,
    wave_cell_position int,
    wave_data_rate int,
    wave_measurement_cell_size int,
    wave_transmit_pulse int,
    wrap_mode int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_data_header (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    noise_amp_beam1 int,
    noise_amp_beam2 int,
    noise_amp_beam3 int,
    noise_correlation_beam1 int,
    noise_correlation_beam2 int,
    noise_correlation_beam3 int,
    number_velocity_records int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_velocity_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    analog1 int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    pressure_mbar int,
    roll_decidegree int,
    sound_speed_dms int,
    status int,
    temperature_centidegree int,
    velocity_beam1 int,
    velocity_beam2 int,
    velocity_beam3 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_system_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input int,
    battery_voltage double,
    date_time_string text,
    error_code int,
    heading double,
    pitch double,
    roll double,
    speed_of_sound double,
    status_code int,
    temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_clock_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_array blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_battery_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_mv int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_identification_string (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    identification_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_optode_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    oxy_calphase int,
    oxy_temp int,
    oxygen int,
    pressure int,
    pressure_temp int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_optode_hardware (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    assembly_number blob,
    command_set_version text,
    cond_sensor_serial_number text,
    firmware_date text,
    firmware_version text,
    manufacture_date text,
    pcb_serial_number blob,
    pressure_sensor_type text,
    serial_number text,
    strain_pressure_sensor_serial_number text,
    temp_sensor_serial_number text,
    volt0_serial_number text,
    volt0_type text,
    volt1_serial_number text,
    volt1_type text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_optode_calibration_coefficients (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibration_date_conductivity text,
    calibration_date_pressure text,
    calibration_date_temperature text,
    cond_coeff_cg double,
    cond_coeff_ch double,
    cond_coeff_ci double,
    cond_coeff_cj double,
    cond_coeff_cpcor double,
    cond_coeff_cslope double,
    cond_coeff_ctcor double,
    cond_sensor_serial_number text,
    ext_freq_sf double,
    ext_volt0_offset double,
    ext_volt0_slope double,
    ext_volt1_offset double,
    ext_volt1_slope double,
    ext_volt2_offset double,
    ext_volt2_slope double,
    ext_volt3_offset double,
    ext_volt3_slope double,
    ext_volt4_offset double,
    ext_volt4_slope double,
    ext_volt5_offset double,
    ext_volt5_slope double,
    press_coeff_pa0 double,
    press_coeff_pa1 double,
    press_coeff_pa2 double,
    press_coeff_poffset double,
    press_coeff_ptca0 double,
    press_coeff_ptca1 double,
    press_coeff_ptca2 double,
    press_coeff_ptcb0 double,
    press_coeff_ptcb1 double,
    press_coeff_ptcb2 double,
    press_coeff_ptempa0 double,
    press_coeff_ptempa1 double,
    press_coeff_ptempa2 double,
    pressure_sensor_range int,
    pressure_sensor_serial_number text,
    serial_number text,
    temp_coeff_offset double,
    temp_coeff_ta0 double,
    temp_coeff_ta1 double,
    temp_coeff_ta2 double,
    temp_coeff_ta3 double,
    temp_sensor_serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_optode_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_lithium double,
    battery_voltage_main double,
    date_time_string text,
    ext_v01_current double,
    logging_status text,
    mem_free int,
    num_events int,
    num_samples int,
    operational_current double,
    profiles int,
    pump_current double,
    sample_length int,
    samples_free int,
    serial_current double,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_optode_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auto_run int,
    battery_cutoff double,
    battery_type text,
    echo_characters int,
    ext_volt_0 int,
    ext_volt_1 int,
    ext_volt_2 int,
    ext_volt_3 int,
    ext_volt_4 int,
    ext_volt_5 int,
    gas_tension_device int,
    ignore_switch int,
    min_cond_freq int,
    optode int,
    output_executed_tag int,
    output_format text,
    pump_delay int,
    sbe38 int,
    sbe63 int,
    scans_to_average int,
    serial_number text,
    wetlabs int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_optode_settings (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_output text,
    calphase double,
    enable_airsaturation int,
    enable_humiditycomp int,
    enable_rawdata int,
    enable_temperature int,
    enable_text int,
    interval double,
    mode text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_no_optode_settings (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_output text,
    calphase double,
    enable_airsaturation int,
    enable_humiditycomp int,
    enable_rawdata int,
    enable_temperature int,
    enable_text int,
    interval double,
    mode text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_sbe43_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    ext_volt0 int,
    pressure int,
    pressure_temp int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_sbe43_hardware (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    assembly_number blob,
    command_set_version text,
    cond_sensor_serial_number text,
    firmware_date text,
    firmware_version text,
    manufacture_date text,
    pcb_serial_number blob,
    pressure_sensor_type text,
    serial_number text,
    strain_pressure_sensor_serial_number text,
    temp_sensor_serial_number text,
    volt0_serial_number text,
    volt0_type text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_sbe43_calibration_coefficients (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibration_date_conductivity text,
    calibration_date_pressure text,
    calibration_date_temperature text,
    cond_coeff_cg double,
    cond_coeff_ch double,
    cond_coeff_ci double,
    cond_coeff_cj double,
    cond_coeff_cpcor double,
    cond_coeff_cslope double,
    cond_coeff_ctcor double,
    cond_sensor_serial_number text,
    ext_freq_sf double,
    ext_volt0_offset double,
    ext_volt0_slope double,
    ext_volt1_offset double,
    ext_volt1_slope double,
    ext_volt2_offset double,
    ext_volt2_slope double,
    ext_volt3_offset double,
    ext_volt3_slope double,
    ext_volt4_offset double,
    ext_volt4_slope double,
    ext_volt5_offset double,
    ext_volt5_slope double,
    press_coeff_pa0 double,
    press_coeff_pa1 double,
    press_coeff_pa2 double,
    press_coeff_poffset double,
    press_coeff_ptca0 double,
    press_coeff_ptca1 double,
    press_coeff_ptca2 double,
    press_coeff_ptcb0 double,
    press_coeff_ptcb1 double,
    press_coeff_ptcb2 double,
    press_coeff_ptempa0 double,
    press_coeff_ptempa1 double,
    press_coeff_ptempa2 double,
    pressure_sensor_range int,
    pressure_sensor_serial_number text,
    serial_number text,
    temp_coeff_offset double,
    temp_coeff_ta0 double,
    temp_coeff_ta1 double,
    temp_coeff_ta2 double,
    temp_coeff_ta3 double,
    temp_sensor_serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_sbe43_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_lithium double,
    battery_voltage_main double,
    date_time_string text,
    ext_v01_current double,
    logging_status text,
    mem_free int,
    num_events int,
    num_samples int,
    operational_current double,
    profiles int,
    pump_current double,
    sample_length int,
    samples_free int,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_sbe43_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auto_run int,
    battery_cutoff double,
    battery_type text,
    echo_characters int,
    ext_volt_0 int,
    ext_volt_1 int,
    ext_volt_2 int,
    ext_volt_3 int,
    ext_volt_4 int,
    ext_volt_5 int,
    gas_tension_device int,
    ignore_switch int,
    min_cond_freq int,
    optode int,
    output_executed_tag int,
    output_format text,
    pump_delay int,
    sbe38 int,
    sbe63 int,
    scans_to_average int,
    serial_number text,
    wetlabs int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_a_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    checksum int,
    date_of_sample int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    serial_number text,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_a_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    baud_rate int,
    nutnr_absorbance_cutoff double,
    nutnr_acqcount int,
    nutnr_activecalfile text,
    nutnr_analog_output text,
    nutnr_apf_interface text,
    nutnr_apf_timeout double,
    nutnr_baseline_order int,
    nutnr_bromide_tracing text,
    nutnr_cntcount int,
    nutnr_concentrations_fit int,
    nutnr_countdown int,
    nutnr_dac_nitrate_max double,
    nutnr_dac_nitrate_min double,
    nutnr_dark_avg int,
    nutnr_dark_coefs text,
    nutnr_dark_corr_method text,
    nutnr_dark_duration int,
    nutnr_dark_samples int,
    nutnr_data_file_size int,
    nutnr_data_mode text,
    nutnr_data_wavelength_high double,
    nutnr_data_wavelength_low double,
    nutnr_davgprm0 double,
    nutnr_davgprm1 double,
    nutnr_davgprm2 double,
    nutnr_davgprm3 double,
    nutnr_ext_dev_during_acq text,
    nutnr_ext_dev_prerun_time int,
    nutnr_ext_power_port text,
    nutnr_extl_dev text,
    nutnr_fit_wavelength_high double,
    nutnr_fit_wavelength_low double,
    nutnr_fixed_time_duration bigint,
    nutnr_int_data_logging text,
    nutnr_int_time_adj text,
    nutnr_int_time_factor int,
    nutnr_int_time_max int,
    nutnr_int_time_step int,
    nutnr_integrated_wiper text,
    nutnr_lamp_fan text,
    nutnr_lamp_shutter text,
    nutnr_lamp_stability_time int,
    nutnr_lamp_switchoff_temp int,
    nutnr_lamp_time int,
    nutnr_light_avg int,
    nutnr_light_duration int,
    nutnr_light_samples int,
    nutnr_log_file_type text,
    nutnr_logging_dark_frame text,
    nutnr_logging_frame_type text,
    nutnr_msg_file_size int,
    nutnr_msg_level text,
    nutnr_operating_mode text,
    nutnr_operation_ctrl text,
    nutnr_output_dark_frame text,
    nutnr_output_frame_type text,
    nutnr_periodic_duration int,
    nutnr_periodic_interval text,
    nutnr_periodic_offset int,
    nutnr_periodic_samples int,
    nutnr_polled_timeout bigint,
    nutnr_psb_supervisor text,
    nutnr_ref_min_lamp_on int,
    nutnr_reference_detector text,
    nutnr_reference_samples int,
    nutnr_relay_module text,
    nutnr_salinity_fit text,
    nutnr_scheduling text,
    nutnr_sdi12_address int,
    nutnr_sdi12_interface text,
    nutnr_sensor_address_hous_temp text,
    nutnr_sensor_address_lamp_temp text,
    nutnr_sensor_address_spec_temp text,
    nutnr_sensor_type text,
    nutnr_sensor_version text,
    nutnr_serial_number_lamp text,
    nutnr_serial_number_spec text,
    nutnr_skip_sleep text,
    nutnr_spec_integration_period int,
    nutnr_stupstus text,
    nutnr_super_capacitors text,
    nutnr_temp_comp text,
    nutnr_timeresl text,
    nutnr_usb_communication text,
    nutnr_watchdog_timer text,
    nutnr_wiper_protector text,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_a_test (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    humidity double,
    lamp_time int,
    nutnr_electrical_bd double,
    nutnr_electrical_c double,
    nutnr_electrical_mn double,
    nutnr_electrical_pr double,
    nutnr_external_disk_free bigint,
    nutnr_external_disk_size bigint,
    nutnr_internal_disk_free bigint,
    nutnr_internal_disk_size bigint,
    nutnr_lamp_power int,
    nutnr_spec_dark_av int,
    nutnr_spec_dark_ma int,
    nutnr_spec_dark_mi int,
    nutnr_spec_dark_sd int,
    nutnr_spec_lght_av int,
    nutnr_spec_lght_ma int,
    nutnr_spec_lght_mi int,
    nutnr_spec_lght_sd int,
    nutnr_test_result text,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.massp_mcu_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    massp_cal_bag1_minutes int,
    massp_cal_bag2_minutes int,
    massp_cal_bag3_minutes int,
    massp_converter_12v_main int,
    massp_converter_12v_sec int,
    massp_converter_24v_main int,
    massp_converter_24v_sec int,
    massp_external_valve1_status int,
    massp_external_valve2_status int,
    massp_external_valve3_status int,
    massp_external_valve4_status int,
    massp_fan_current int,
    massp_ground_relay_status int,
    massp_heater_current int,
    massp_housing_humidity int,
    massp_housing_pressure int,
    massp_inlet_temp_status int,
    massp_inlet_temp_value int,
    massp_ion_chamber_heater1_status int,
    massp_ion_chamber_heater2_status int,
    massp_ion_chamber_heater_status int,
    massp_nafion_core_temp int,
    massp_nafion_elapsed_time int,
    massp_nafion_heater1_power int,
    massp_nafion_heater2_power int,
    massp_nafion_heater_status int,
    massp_ph_meter_status int,
    massp_ph_meter_value int,
    massp_power_relay_aux1 int,
    massp_power_relay_aux2 int,
    massp_power_relay_fan1 int,
    massp_power_relay_fan2 int,
    massp_power_relay_fan3 int,
    massp_power_relay_fan4 int,
    massp_power_relay_heaters int,
    massp_power_relay_main_rough int,
    massp_power_relay_ph int,
    massp_power_relay_pump int,
    massp_power_relay_rga int,
    massp_power_relay_sec_rough int,
    massp_power_relay_turbo int,
    massp_pressure_p1 int,
    massp_pressure_p2 int,
    massp_pressure_p3 int,
    massp_pressure_p4 int,
    massp_rga_current int,
    massp_roughing_current int,
    massp_sample_valve1 int,
    massp_sample_valve2 int,
    massp_sample_valve3 int,
    massp_sample_valve4 int,
    massp_sbe_current int,
    massp_temp_analyzer int,
    massp_temp_ion int,
    massp_temp_main_24v int,
    massp_temp_main_control int,
    massp_temp_main_rough int,
    massp_temp_nafion int,
    massp_temp_sec_24v int,
    massp_temp_sec_rough int,
    massp_turbo_current int,
    massp_valve_current int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.massp_turbo_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    massp_turbo_bearing_temperature int,
    massp_turbo_drive_current int,
    massp_turbo_drive_voltage int,
    massp_turbo_motor_temperature int,
    massp_turbo_rotation_speed int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.massp_rga_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    massp_rga_device_id text,
    massp_rga_electron_energy int,
    massp_rga_error_status int,
    massp_rga_filament_emission_actual double,
    massp_rga_filament_emission_set double,
    massp_rga_final_mass int,
    massp_rga_focus_voltage int,
    massp_rga_high_voltage_cdem int,
    massp_rga_initial_mass int,
    massp_rga_ion_energy int,
    massp_rga_noise_floor int,
    massp_rga_readings_per_scan int,
    massp_rga_steps_per_amu int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.massp_rga_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    massp_scan_data blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.hpies_data_header (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_data_valid int,
    hpies_dest text,
    hpies_hcno int,
    hpies_ibeg int,
    hpies_iend int,
    hpies_navg_cal int,
    hpies_navg_ef int,
    hpies_navg_mot int,
    hpies_secs bigint,
    hpies_stm_timestamp bigint,
    hpies_tics int,
    hpies_type text,
    hpies_ver int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.horizontal_electric_field (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_data_valid int,
    hpies_e1a int,
    hpies_e1b int,
    hpies_e1c int,
    hpies_e2a int,
    hpies_e2b int,
    hpies_e2c int,
    hpies_eindex int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.motor_current (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_data_valid int,
    hpies_mindex int,
    hpies_motor_current int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.calibration_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_c1a int,
    hpies_c1b int,
    hpies_c1c int,
    hpies_c2a int,
    hpies_c2b int,
    hpies_c2c int,
    hpies_cindex int,
    hpies_data_valid int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.hpies_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_adc_raw_overflow_count int,
    hpies_compass_fwrite_attempted int,
    hpies_compass_fwrite_ofp_null int,
    hpies_compass_port_nerr int,
    hpies_compass_port_open_errs int,
    hpies_data_valid int,
    hpies_hcno int,
    hpies_hcno_last_cal int,
    hpies_hcno_last_comp int,
    hpies_ifok text,
    hpies_irq2_count int,
    hpies_max7317_add_queue_errs int,
    hpies_mot_pwr_count int,
    hpies_ofile text,
    hpies_pitperiod_zero_count int,
    hpies_secs bigint,
    hpies_spsr_unknown_count int,
    hpies_spurious_count int,
    hpies_start_motor_count bigint,
    hpies_tuport_compass_null_count int,
    hpies_wsrun_rtc_pinch_end_nerr int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.echo_sounding (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_bliley_frequency double,
    hpies_bliley_temperature bigint,
    hpies_data_valid int,
    hpies_ies_timestamp bigint,
    hpies_n_travel_times int,
    hpies_pressure bigint,
    hpies_stm_timestamp bigint,
    hpies_temperature bigint,
    hpies_travel_time1 bigint,
    hpies_travel_time2 bigint,
    hpies_travel_time3 bigint,
    hpies_travel_time4 bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ies_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_average_pressure int,
    hpies_average_temperature int,
    hpies_average_travel_time double,
    hpies_backup_battery_voltage double,
    hpies_data_validity int,
    hpies_ies_clock_error double,
    hpies_ies_timestamp bigint,
    hpies_internal_temperature double,
    hpies_last_pressure double,
    hpies_last_temperature double,
    hpies_release_battery_voltage double,
    hpies_release_drain double,
    hpies_release_system_voltage double,
    hpies_status_pressure_frequencies blob,
    hpies_status_pressures blob,
    hpies_status_temperature_frequencies blob,
    hpies_status_temperatures blob,
    hpies_status_travel_times blob,
    hpies_system_battery_voltage double,
    hpies_system_drain double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.stm_timestamp (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    hpies_data_valid int,
    hpies_rsn_timestamp bigint,
    hpies_stm_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_5thbeam_pd0_beam_parsed (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    address_error_exception int,
    battery_saver_power int,
    beam_1_velocity blob,
    beam_2_velocity blob,
    beam_3_velocity blob,
    beam_4_velocity blob,
    beam_angle int,
    bin_1_distance int,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    blank_after_transmit int,
    bus_error_exception int,
    cell_length int,
    checksum int,
    clock_jump_backward int,
    clock_jump_forward int,
    clock_read_error int,
    cold_wakeup_occurred int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    correlation_magnitude_id int,
    cpu_board_serial_number text,
    data_flag int,
    data_source_id int,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    echo_intensity_id int,
    emulator_exception int,
    ensemble_number int,
    ensemble_number_increment int,
    ensemble_start_time double,
    error_vel_threshold int,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    fixed_leader_id int,
    header_id int,
    heading int,
    heading_alignment int,
    heading_bias int,
    heading_stdev int,
    illegal_instruction_exception int,
    lag_length int,
    level_7_interrupt int,
    low_corr_threshold int,
    low_latency_trigger int,
    mpt_minutes int,
    mpt_seconds double,
    num_beams int,
    num_bytes int,
    num_cells int,
    num_code_repetitions int,
    num_data_types int,
    offset_data_types blob,
    percent_good_beam1 blob,
    percent_good_beam2 blob,
    percent_good_beam3 blob,
    percent_good_beam4 blob,
    percent_good_id int,
    percent_good_min int,
    pinging int,
    pings_per_ensemble int,
    pitch int,
    pitch_stdev int,
    power_fail int,
    pressure bigint,
    pressure_variance bigint,
    real_time_clock blob,
    reference_layer_start int,
    reference_layer_stop int,
    roll int,
    roll_stdev int,
    salinity int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_temperature int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    serial_number text,
    signal_processing_mode int,
    speed_of_sound int,
    spurious_clock_interrupt int,
    spurious_dsp_interrupt int,
    spurious_uart_interrupt int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    temperature int,
    time_per_ping_minutes int,
    time_per_ping_seconds double,
    transducer_depth int,
    transmit_lag_distance int,
    transmit_pulse_length int,
    unassigned_exception int,
    unexpected_alarm int,
    unknown_wakeup_occurred int,
    variable_leader_id int,
    velocity_data_id int,
    watchdog_restart_occurred int,
    zero_divide_instruction int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_5thbeam_compass_calibration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibration_temp double,
    coil_offset blob,
    electrical_null double,
    fluxgate_calibration_timestamp double,
    offset_up_down blob,
    pitch_up_down blob,
    roll_up_down blob,
    s_inverse_bx blob,
    s_inverse_by blob,
    s_inverse_bz blob,
    s_inverse_err blob,
    tilt_calibration_timestamp double,
    tilt_null double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_thermistor_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pco2w_thermistor_voltage int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_battery_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pco2w_battery_voltage int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cycle_rate int,
    cycles_between_blanks int,
    disable_start_blank_flush int,
    driver_id_device1 int,
    driver_id_device2 int,
    driver_id_device3 int,
    driver_id_prestart int,
    driver_id_sami int,
    extend_global_config int,
    external_pump_setting int,
    flush_pump_interval int,
    launch_time bigint,
    measure_after_pump_pulse int,
    num_blank_cycles int,
    num_reagent_cycles int,
    parameter_pointer_device1 int,
    parameter_pointer_device2 int,
    parameter_pointer_device3 int,
    parameter_pointer_prestart int,
    parameter_pointer_sami int,
    pmi_sample_schedule int,
    pump_on_to_measure int,
    pump_pulse int,
    recording_time int,
    sami_sample_schedule int,
    samples_per_measure bigint,
    send_live_records int,
    send_record_type int,
    slot1_follows_sami_sample int,
    slot1_independent_schedule int,
    slot2_follows_sami_sample int,
    slot2_independent_schedule int,
    slot3_follows_sami_sample int,
    slot3_independent_schedule int,
    start_time_offset int,
    timer_interval_device1 int,
    timer_interval_device2 int,
    timer_interval_device3 int,
    timer_interval_prestart int,
    timer_interval_sami int,
    use_baud_rate_57600 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_regular_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_bank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    elapsed_time_config bigint,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    recording_active int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_control_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_bank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    checksum int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_length int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_a_thermistor_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pco2w_thermistor_voltage int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_a_battery_voltage (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pco2w_battery_voltage int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_sa_config (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    parad_firmware text,
    parad_maxrate double,
    parad_telbaud int,
    parad_type text,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_4beam_system_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    beam_angle int,
    beam_pattern text,
    board_serial_numbers text,
    boot_code_actual text,
    boot_code_required text,
    configuration text,
    cpu_firmware text,
    demod_1_type text,
    demod_1_version text,
    demod_2_type text,
    demod_2_version text,
    match_layer text,
    orientation text,
    power_timing_type text,
    power_timing_version text,
    pressure_coeff_c1 double,
    pressure_coeff_c2 double,
    pressure_coeff_c3 double,
    pressure_coeff_offset double,
    sensors text,
    serial_number text,
    temperature_sensor_offset double,
    transducer_frequency bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_5thbeam_system_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    beam_angle int,
    beam_pattern text,
    board_serial_numbers text,
    boot_code_actual text,
    boot_code_required text,
    configuration text,
    cpu_firmware text,
    demod_1_type text,
    demod_1_version text,
    demod_2_type text,
    demod_2_version text,
    match_layer text,
    orientation text,
    power_timing_type text,
    power_timing_version text,
    pressure_coeff_c1 double,
    pressure_coeff_c2 double,
    pressure_coeff_c3 double,
    pressure_coeff_offset double,
    sensors text,
    serial_number text,
    temperature_sensor_offset double,
    transducer_frequency bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_ancillary_system_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcp_ambient_temp double,
    adcp_attitude_temp double,
    adcp_internal_moisture text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_transmit_path (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcp_transmit_current double,
    adcp_transmit_impedance double,
    adcp_transmit_test_results text,
    adcp_transmit_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdgv_m_glider_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_ctd41cp_timestamp double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    sci_water_cond double,
    sci_water_pressure double,
    sci_water_temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_m_glider_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_flbb_bb_ref double,
    sci_flbb_bb_sig double,
    sci_flbb_bb_units double,
    sci_flbb_chlor_ref double,
    sci_flbb_chlor_sig double,
    sci_flbb_chlor_units double,
    sci_flbb_therm double,
    sci_flbb_timestamp double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.camds_image_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    camds_brightness int,
    camds_brightness2 int,
    camds_focus_position int,
    camds_gain int,
    camds_iris_position int,
    camds_pan_position int,
    camds_resolution int,
    camds_tilt_position int,
    camds_zoom_position int,
    filepath text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.camds_health_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    camds_error int,
    camds_humidity int,
    camds_temp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.camds_disk_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    camds_disk_remaining int,
    camds_disk_size int,
    camds_images_on_disk int,
    camds_images_remaining int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.zplsc_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    zplsc_active_120k_mode text,
    zplsc_active_120k_power double,
    zplsc_active_120k_pulse_length double,
    zplsc_active_120k_sample_interval double,
    zplsc_active_200k_mode text,
    zplsc_active_200k_power double,
    zplsc_active_200k_pulse_length double,
    zplsc_active_200k_sample_interval double,
    zplsc_active_38k_mode text,
    zplsc_active_38k_power double,
    zplsc_active_38k_pulse_length double,
    zplsc_active_38k_sample_interval double,
    zplsc_connected int,
    zplsc_current_raw_filename text,
    zplsc_current_raw_filesize int,
    zplsc_current_utc_time text,
    zplsc_executable text,
    zplsc_file_path text,
    zplsc_file_prefix text,
    zplsc_fs_root text,
    zplsc_gpts_enabled int,
    zplsc_host text,
    zplsc_max_file_size int,
    zplsc_next_scheduled_interval text,
    zplsc_pid text,
    zplsc_port int,
    zplsc_sample_range double,
    zplsc_save_bottom int,
    zplsc_save_index int,
    zplsc_save_raw int,
    zplsc_schedule_filename text,
    zplsc_scheduled_intervals_remaining int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_pd0_beam_parsed (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    address_error_exception int,
    battery_saver_power int,
    beam_1_velocity blob,
    beam_2_velocity blob,
    beam_3_velocity blob,
    beam_4_velocity blob,
    beam_angle int,
    bin_1_distance int,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    blank_after_transmit int,
    bus_error_exception int,
    cell_length int,
    checksum int,
    clock_jump_backward int,
    clock_jump_forward int,
    clock_read_error int,
    cold_wakeup_occurred int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    correlation_magnitude_id int,
    cpu_board_serial_number text,
    data_flag int,
    data_source_id int,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    echo_intensity_id int,
    emulator_exception int,
    ensemble_number int,
    ensemble_number_increment int,
    ensemble_start_time double,
    error_vel_threshold int,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    fixed_leader_id int,
    header_id int,
    heading int,
    heading_alignment int,
    heading_bias int,
    heading_stdev int,
    illegal_instruction_exception int,
    lag_length int,
    level_7_interrupt int,
    low_corr_threshold int,
    low_latency_trigger int,
    mpt_minutes int,
    mpt_seconds double,
    num_beams int,
    num_bytes int,
    num_cells int,
    num_code_repetitions int,
    num_data_types int,
    offset_data_types blob,
    percent_good_beam1 blob,
    percent_good_beam2 blob,
    percent_good_beam3 blob,
    percent_good_beam4 blob,
    percent_good_id int,
    percent_good_min int,
    pinging int,
    pings_per_ensemble int,
    pitch int,
    pitch_stdev int,
    power_fail int,
    pressure bigint,
    pressure_variance bigint,
    real_time_clock blob,
    reference_layer_start int,
    reference_layer_stop int,
    roll int,
    roll_stdev int,
    salinity int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_temperature int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    serial_number text,
    signal_processing_mode int,
    speed_of_sound int,
    spurious_clock_interrupt int,
    spurious_dsp_interrupt int,
    spurious_uart_interrupt int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    temperature int,
    time_per_ping_minutes int,
    time_per_ping_seconds double,
    transducer_depth int,
    transmit_lag_distance int,
    transmit_pulse_length int,
    unassigned_exception int,
    unexpected_alarm int,
    unknown_wakeup_occurred int,
    variable_leader_id int,
    velocity_data_id int,
    watchdog_restart_occurred int,
    zero_divide_instruction int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_a_sami_data_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    light_measurements blob,
    record_length int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_sami_data_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    light_measurements blob,
    record_length int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_ckl_wfp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    pressure int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_ckl_wfp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_number_samples bigint,
    wfp_time_off bigint,
    wfp_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dofst_k_wfp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dofst_k_oxygen bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dofst_k_wfp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_number_samples bigint,
    wfp_time_off bigint,
    wfp_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_k__stc_imodem_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    par_val_v double,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_stc_imodem_start_time_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_profile_start bigint,
    wfp_sensor_start bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng__stc_imodem_status_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_indicator int,
    wfp_profile_status int,
    wfp_profile_stop bigint,
    wfp_ramp_status int,
    wfp_sensor_stop bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_stc_imodem_engineering_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_prof_current double,
    wfp_prof_pressure double,
    wfp_prof_voltage double,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_kn_stc_imodem_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_stc_eng_stc_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cg_eng_cpu_load1 double,
    cg_eng_cpu_load15 double,
    cg_eng_cpu_load5 double,
    cg_eng_cpu_uptime text,
    cg_eng_dcl_port_status double,
    cg_eng_dclp1_clim int,
    cg_eng_dclp1_current double,
    cg_eng_dclp1_eflag int,
    cg_eng_dclp1_enable int,
    cg_eng_dclp1_prot int,
    cg_eng_dclp1_volt double,
    cg_eng_dclp1_vsel int,
    cg_eng_dclp2_clim int,
    cg_eng_dclp2_current double,
    cg_eng_dclp2_eflag int,
    cg_eng_dclp2_enable int,
    cg_eng_dclp2_prot int,
    cg_eng_dclp2_volt double,
    cg_eng_dclp2_vsel int,
    cg_eng_dclp3_clim int,
    cg_eng_dclp3_current double,
    cg_eng_dclp3_eflag int,
    cg_eng_dclp3_enable int,
    cg_eng_dclp3_prot int,
    cg_eng_dclp3_volt double,
    cg_eng_dclp3_vsel int,
    cg_eng_dclp4_clim int,
    cg_eng_dclp4_current double,
    cg_eng_dclp4_eflag int,
    cg_eng_dclp4_enable int,
    cg_eng_dclp4_prot int,
    cg_eng_dclp4_volt double,
    cg_eng_dclp4_vsel int,
    cg_eng_dclp5_clim int,
    cg_eng_dclp5_current double,
    cg_eng_dclp5_eflag int,
    cg_eng_dclp5_enable int,
    cg_eng_dclp5_prot int,
    cg_eng_dclp5_volt double,
    cg_eng_dclp5_vsel int,
    cg_eng_dclp6_clim int,
    cg_eng_dclp6_current double,
    cg_eng_dclp6_eflag int,
    cg_eng_dclp6_enable int,
    cg_eng_dclp6_prot int,
    cg_eng_dclp6_volt double,
    cg_eng_dclp6_vsel int,
    cg_eng_dclp7_clim int,
    cg_eng_dclp7_current double,
    cg_eng_dclp7_eflag int,
    cg_eng_dclp7_enable int,
    cg_eng_dclp7_prot int,
    cg_eng_dclp7_volt double,
    cg_eng_dclp7_vsel int,
    cg_eng_dclp8_clim int,
    cg_eng_dclp8_current double,
    cg_eng_dclp8_eflag int,
    cg_eng_dclp8_enable int,
    cg_eng_dclp8_prot int,
    cg_eng_dclp8_volt double,
    cg_eng_dclp8_vsel int,
    cg_eng_dmgrstatus_active int,
    cg_eng_dmgrstatus_date text,
    cg_eng_dmgrstatus_failed int,
    cg_eng_dmgrstatus_halted int,
    cg_eng_dmgrstatus_map text,
    cg_eng_dmgrstatus_started int,
    cg_eng_dmgrstatus_time text,
    cg_eng_dmgrstatus_update double,
    cg_eng_err_bcmd int,
    cg_eng_err_c_ctl int,
    cg_eng_err_c_gps int,
    cg_eng_err_c_imm int,
    cg_eng_err_c_irid int,
    cg_eng_err_c_power_sys int,
    cg_eng_err_c_pps int,
    cg_eng_err_c_status int,
    cg_eng_err_c_telem_sys int,
    cg_eng_err_cpm1 int,
    cg_eng_err_d_ctl int,
    cg_eng_err_d_status int,
    cg_eng_err_dlog_mgr int,
    cg_eng_err_dlogp1 int,
    cg_eng_err_dlogp2 int,
    cg_eng_err_dlogp3 int,
    cg_eng_err_dlogp4 int,
    cg_eng_err_dlogp5 int,
    cg_eng_err_dlogp6 int,
    cg_eng_err_dlogp7 int,
    cg_eng_err_dlogp8 int,
    cg_eng_err_rcmd int,
    cg_eng_err_superv int,
    cg_eng_errmsg_bcmd text,
    cg_eng_errmsg_c_ctl text,
    cg_eng_errmsg_c_gps text,
    cg_eng_errmsg_c_imm text,
    cg_eng_errmsg_c_irid text,
    cg_eng_errmsg_c_power_sys text,
    cg_eng_errmsg_c_pps text,
    cg_eng_errmsg_c_status text,
    cg_eng_errmsg_c_telem_sys text,
    cg_eng_errmsg_cpm1 text,
    cg_eng_errmsg_d_ctl text,
    cg_eng_errmsg_d_status text,
    cg_eng_errmsg_dlog_mgr text,
    cg_eng_errmsg_dlogp1 text,
    cg_eng_errmsg_dlogp2 text,
    cg_eng_errmsg_dlogp3 text,
    cg_eng_errmsg_dlogp4 text,
    cg_eng_errmsg_dlogp5 text,
    cg_eng_errmsg_dlogp6 text,
    cg_eng_errmsg_dlogp7 text,
    cg_eng_errmsg_dlogp8 text,
    cg_eng_errmsg_rcmd text,
    cg_eng_errmsg_superv text,
    cg_eng_gps_alt double,
    cg_eng_gps_cog double,
    cg_eng_gps_date bigint,
    cg_eng_gps_fix int,
    cg_eng_gps_hdop double,
    cg_eng_gps_last_update double,
    cg_eng_gps_lat double,
    cg_eng_gps_latstr text,
    cg_eng_gps_lon double,
    cg_eng_gps_lonstr text,
    cg_eng_gps_msg_date text,
    cg_eng_gps_msg_time text,
    cg_eng_gps_nsat int,
    cg_eng_gps_spd double,
    cg_eng_gps_time bigint,
    cg_eng_loadshed_last_update double,
    cg_eng_loadshed_status text,
    cg_eng_memory_free bigint,
    cg_eng_memory_ram bigint,
    cg_eng_mpic_bat_c double,
    cg_eng_mpic_bat_v double,
    cg_eng_mpic_dcl bigint,
    cg_eng_mpic_dsl bigint,
    cg_eng_mpic_eflag bigint,
    cg_eng_mpic_eflag2 bigint,
    cg_eng_mpic_esw bigint,
    cg_eng_mpic_fw_wifi int,
    cg_eng_mpic_fw_wifi_c double,
    cg_eng_mpic_fw_wifi_e int,
    cg_eng_mpic_fw_wifi_v double,
    cg_eng_mpic_gf_ena int,
    cg_eng_mpic_gflt1 double,
    cg_eng_mpic_gflt2 double,
    cg_eng_mpic_gflt3 double,
    cg_eng_mpic_gflt4 double,
    cg_eng_mpic_gps int,
    cg_eng_mpic_hbeat_dtime int,
    cg_eng_mpic_hbeat_enable int,
    cg_eng_mpic_hbeat_threshold int,
    cg_eng_mpic_humid double,
    cg_eng_mpic_irid int,
    cg_eng_mpic_irid_c double,
    cg_eng_mpic_irid_e int,
    cg_eng_mpic_irid_v double,
    cg_eng_mpic_last_update double,
    cg_eng_mpic_ld_ena int,
    cg_eng_mpic_ldet1 double,
    cg_eng_mpic_ldet2 double,
    cg_eng_mpic_main_c double,
    cg_eng_mpic_main_v double,
    cg_eng_mpic_pps int,
    cg_eng_mpic_press double,
    cg_eng_mpic_sbd int,
    cg_eng_mpic_sbd_ce_msg int,
    cg_eng_mpic_temp1 double,
    cg_eng_mpic_temp2 double,
    cg_eng_mpic_wake_cpm double,
    cg_eng_mpic_wpc int,
    cg_eng_mpic_wsrc int,
    cg_eng_msg_cnts_c_gps int,
    cg_eng_msg_cnts_c_ntp int,
    cg_eng_msg_cnts_c_power_sys int,
    cg_eng_msg_cnts_c_pps int,
    cg_eng_msg_cnts_c_superv int,
    cg_eng_msg_cnts_c_telem int,
    cg_eng_msg_cnts_d_dlog_ngr int,
    cg_eng_msg_cnts_d_gps int,
    cg_eng_msg_cnts_d_ntp int,
    cg_eng_msg_cnts_d_pps int,
    cg_eng_msg_cnts_d_superv int,
    cg_eng_nproc int,
    cg_eng_ntp_jitter double,
    cg_eng_ntp_offset double,
    cg_eng_ntp_refid text,
    cg_eng_platform_time text,
    cg_eng_platform_utime double,
    cg_eng_port_dlog1_bad bigint,
    cg_eng_port_dlog1_bb bigint,
    cg_eng_port_dlog1_good bigint,
    cg_eng_port_dlog1_lc int,
    cg_eng_port_dlog1_ld int,
    cg_eng_port_dlog1_log bigint,
    cg_eng_port_dlog1_lu double,
    cg_eng_port_dlog1_name text,
    cg_eng_port_dlog1_rx bigint,
    cg_eng_port_dlog1_state text,
    cg_eng_port_dlog1_tx bigint,
    cg_eng_port_dlog2_bad bigint,
    cg_eng_port_dlog2_bb bigint,
    cg_eng_port_dlog2_good bigint,
    cg_eng_port_dlog2_lc int,
    cg_eng_port_dlog2_ld int,
    cg_eng_port_dlog2_log bigint,
    cg_eng_port_dlog2_lu double,
    cg_eng_port_dlog2_name text,
    cg_eng_port_dlog2_rx bigint,
    cg_eng_port_dlog2_state text,
    cg_eng_port_dlog2_tx bigint,
    cg_eng_port_dlog3_bad bigint,
    cg_eng_port_dlog3_bb bigint,
    cg_eng_port_dlog3_good bigint,
    cg_eng_port_dlog3_lc int,
    cg_eng_port_dlog3_ld int,
    cg_eng_port_dlog3_log bigint,
    cg_eng_port_dlog3_lu double,
    cg_eng_port_dlog3_name text,
    cg_eng_port_dlog3_rx bigint,
    cg_eng_port_dlog3_state text,
    cg_eng_port_dlog3_tx bigint,
    cg_eng_port_dlog4_bad bigint,
    cg_eng_port_dlog4_bb bigint,
    cg_eng_port_dlog4_good bigint,
    cg_eng_port_dlog4_lc int,
    cg_eng_port_dlog4_ld int,
    cg_eng_port_dlog4_log bigint,
    cg_eng_port_dlog4_lu double,
    cg_eng_port_dlog4_name text,
    cg_eng_port_dlog4_rx bigint,
    cg_eng_port_dlog4_state text,
    cg_eng_port_dlog4_tx bigint,
    cg_eng_port_dlog5_bad bigint,
    cg_eng_port_dlog5_bb bigint,
    cg_eng_port_dlog5_good bigint,
    cg_eng_port_dlog5_lc int,
    cg_eng_port_dlog5_ld int,
    cg_eng_port_dlog5_log bigint,
    cg_eng_port_dlog5_lu double,
    cg_eng_port_dlog5_name text,
    cg_eng_port_dlog5_rx bigint,
    cg_eng_port_dlog5_state text,
    cg_eng_port_dlog5_tx bigint,
    cg_eng_port_dlog6_bad bigint,
    cg_eng_port_dlog6_bb bigint,
    cg_eng_port_dlog6_good bigint,
    cg_eng_port_dlog6_lc int,
    cg_eng_port_dlog6_ld int,
    cg_eng_port_dlog6_log bigint,
    cg_eng_port_dlog6_lu double,
    cg_eng_port_dlog6_name text,
    cg_eng_port_dlog6_rx bigint,
    cg_eng_port_dlog6_state text,
    cg_eng_port_dlog6_tx bigint,
    cg_eng_port_dlog7_bad bigint,
    cg_eng_port_dlog7_bb bigint,
    cg_eng_port_dlog7_good bigint,
    cg_eng_port_dlog7_lc int,
    cg_eng_port_dlog7_ld int,
    cg_eng_port_dlog7_log bigint,
    cg_eng_port_dlog7_lu double,
    cg_eng_port_dlog7_name text,
    cg_eng_port_dlog7_rx bigint,
    cg_eng_port_dlog7_state text,
    cg_eng_port_dlog7_tx bigint,
    cg_eng_port_dlog8_bad bigint,
    cg_eng_port_dlog8_bb bigint,
    cg_eng_port_dlog8_good bigint,
    cg_eng_port_dlog8_lc int,
    cg_eng_port_dlog8_ld int,
    cg_eng_port_dlog8_log bigint,
    cg_eng_port_dlog8_lu double,
    cg_eng_port_dlog8_name text,
    cg_eng_port_dlog8_rx bigint,
    cg_eng_port_dlog8_state text,
    cg_eng_port_dlog8_tx bigint,
    cg_eng_pps_bad_pulse int,
    cg_eng_pps_delta int,
    cg_eng_pps_deltamax int,
    cg_eng_pps_deltamin int,
    cg_eng_pps_last_update double,
    cg_eng_pps_lock text,
    cg_eng_pps_timestamp text,
    cg_eng_sbc_bid int,
    cg_eng_sbc_bstr int,
    cg_eng_sbc_ce_led int,
    cg_eng_sbc_eth0 int,
    cg_eng_sbc_eth1 int,
    cg_eng_sbc_fb1 int,
    cg_eng_sbc_fb2 int,
    cg_eng_sbc_gpio0 int,
    cg_eng_sbc_gpio1 int,
    cg_eng_sbc_gpio2 int,
    cg_eng_sbc_gpio3 int,
    cg_eng_sbc_gpio4 int,
    cg_eng_sbc_gpio5 int,
    cg_eng_sbc_gpo0 int,
    cg_eng_sbc_gpo1 int,
    cg_eng_sbc_gpo2 int,
    cg_eng_sbc_gpo3 int,
    cg_eng_sbc_gpo4 int,
    cg_eng_sbc_led0 int,
    cg_eng_sbc_led1 int,
    cg_eng_sbc_led2 int,
    cg_eng_sbc_wdt int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.mopak_o_dcl_accel_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    mopak_accelx double,
    mopak_accely double,
    mopak_accelz double,
    mopak_ang_ratex double,
    mopak_ang_ratey double,
    mopak_ang_ratez double,
    mopak_magx double,
    mopak_magy double,
    mopak_magz double,
    mopak_timer bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.mopak_o_dcl_rate_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    mopak_ang_ratex double,
    mopak_ang_ratey double,
    mopak_ang_ratez double,
    mopak_pitch double,
    mopak_roll double,
    mopak_timer bigint,
    mopak_yaw double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.rte_o_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    rte_avg_q_current double,
    rte_avg_supply_voltage double,
    rte_avg_voltage double,
    rte_coulombs double,
    rte_hits int,
    rte_state int,
    rte_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_full_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    ref_channel_average double,
    ref_channel_variance double,
    rms_error double,
    sea_water_dark double,
    serial_number text,
    spec_channel_average double,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_analog double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_full_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    ref_channel_average double,
    ref_channel_variance double,
    rms_error double,
    sea_water_dark double,
    serial_number text,
    spec_channel_average double,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_analog double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_full_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    data_log_file text,
    dcl_controller_timestamp text,
    lamp_on_time int,
    lamp_powered_time int,
    serial_number text,
    spec_on_time int,
    spec_powered_time int,
    startup_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_full_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    data_log_file text,
    dcl_controller_timestamp text,
    lamp_on_time int,
    lamp_powered_time int,
    serial_number text,
    spec_on_time int,
    spec_powered_time int,
    startup_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_a_sami_data_record_cal (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    light_measurements blob,
    record_length int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_b_sami_data_record_cal (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    checksum int,
    light_measurements blob,
    record_length int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wfp_eng_stc_imodem_status_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    wfp_indicator int,
    wfp_profile_status int,
    wfp_profile_stop bigint,
    wfp_ramp_status int,
    wfp_sensor_stop bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.metbk_a_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    air_temperature double,
    barometric_pressure double,
    dcl_controller_timestamp text,
    eastward_wind_velocity double,
    longwave_irradiance double,
    northward_wind_velocity double,
    precipitation double,
    relative_humidity double,
    sea_surface_conductivity double,
    sea_surface_temperature double,
    shortwave_irradiance double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.metbk_a_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    air_temperature double,
    barometric_pressure double,
    dcl_controller_timestamp text,
    eastward_wind_velocity double,
    longwave_irradiance double,
    northward_wind_velocity double,
    precipitation double,
    relative_humidity double,
    sea_surface_conductivity double,
    sea_surface_temperature double,
    shortwave_irradiance double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blue_amplitude double,
    blue_phase double,
    calibrated_phase double,
    dcl_controller_timestamp text,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    optode_temperature double,
    product_number int,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    serial_number text,
    temp_compensated_phase double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blue_amplitude double,
    blue_phase double,
    calibrated_phase double,
    dcl_controller_timestamp text,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    optode_temperature double,
    product_number int,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    serial_number text,
    temp_compensated_phase double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_abj_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    channel_array blob,
    dcl_controller_timestamp text,
    frame_counter int,
    instrument_id text,
    internal_temperature int,
    passed_checksum int,
    sample_delay int,
    serial_number text,
    timer double,
    va_sense int,
    vin_sense int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_abj_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    channel_array blob,
    dcl_controller_timestamp text,
    frame_counter int,
    instrument_id text,
    internal_temperature int,
    passed_checksum int,
    sample_delay int,
    serial_number text,
    timer double,
    va_sense int,
    vin_sense int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    light_measurements blob,
    record_time bigint,
    record_type int,
    reference_light_measurements blob,
    thermistor_end int,
    thermistor_start int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    light_measurements blob,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_instrument_blank (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blank_light_measurements blob,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_power (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    record_time bigint,
    record_type int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_instrument_blank (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blank_light_measurements blob,
    dcl_controller_timestamp text,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_instrument_blank_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blank_light_measurements blob,
    dcl_controller_timestamp text,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    dcl_controller_timestamp text,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    dcl_controller_timestamp text,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_power (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    passed_checksum int,
    record_time bigint,
    record_type int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_dcl_power_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    passed_checksum int,
    record_time bigint,
    record_type int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    reference_light_measurements blob,
    thermistor_end int,
    thermistor_start int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    reference_light_measurements blob,
    thermistor_end int,
    thermistor_start int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_dcl_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    dcl_controller_timestamp text,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_dcl_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    dcl_controller_timestamp text,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_conc_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    nitrate_concentration double,
    rms_error double,
    serial_number text,
    time_of_sample double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_conc_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    nitrate_concentration double,
    rms_error double,
    serial_number text,
    time_of_sample double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_conc_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    data_log_file text,
    dcl_controller_timestamp text,
    lamp_on_time int,
    lamp_powered_time int,
    serial_number text,
    spec_on_time int,
    spec_powered_time int,
    startup_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_conc_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    data_log_file text,
    dcl_controller_timestamp text,
    lamp_on_time int,
    lamp_powered_time int,
    serial_number text,
    spec_on_time int,
    spec_powered_time int,
    startup_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_abc_dcl_tide_measurement (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    absolute_pressure double,
    date_time_string text,
    dcl_controller_timestamp text,
    pressure_temp double,
    seawater_temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_abc_dcl_tide_measurement_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    absolute_pressure double,
    date_time_string text,
    dcl_controller_timestamp text,
    pressure_temp double,
    seawater_temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_abc_dcl_wave_burst (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    absolute_pressure_burst blob,
    date_time_string text,
    dcl_controller_end_timestamp text,
    dcl_controller_start_timestamp text,
    ptemp_frequency double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_abc_dcl_wave_burst_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    absolute_pressure_burst blob,
    date_time_string text,
    dcl_controller_end_timestamp text,
    dcl_controller_start_timestamp text,
    ptemp_frequency double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcps_jln_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    address_error_exception int,
    battery_saver_power int,
    beam_angle int,
    bin_1_distance int,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    blank_after_transmit int,
    bus_error_exception int,
    cell_length int,
    clock_jump_backward int,
    clock_jump_forward int,
    clock_read_error int,
    cold_wakeup_occurred int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    cpu_board_serial_number text,
    data_flag int,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    emulator_exception int,
    ensemble_number int,
    ensemble_number_increment int,
    ensemble_start_time double,
    ensemble_start_time_2 double,
    error_vel_threshold int,
    error_velocity blob,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    heading int,
    heading_alignment int,
    heading_bias int,
    heading_stdev int,
    illegal_instruction_exception int,
    lag_length int,
    level_7_interrupt int,
    low_corr_threshold int,
    low_latency_trigger int,
    mpt_minutes int,
    mpt_seconds double,
    num_beams int,
    num_cells int,
    num_code_repetitions int,
    percent_bad_beams blob,
    percent_good_3beam blob,
    percent_good_4beam blob,
    percent_good_min int,
    percent_transforms_reject blob,
    pinging int,
    pings_per_ensemble int,
    pitch int,
    pitch_stdev int,
    power_fail int,
    pressure bigint,
    pressure_variance bigint,
    real_time_clock blob,
    real_time_clock_2 blob,
    reference_layer_start int,
    reference_layer_stop int,
    roll int,
    roll_stdev int,
    salinity int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_speed int,
    sensor_available_temperature int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    serial_number text,
    signal_processing_mode int,
    speed_of_sound int,
    spurious_clock_interrupt int,
    spurious_dsp_interrupt int,
    spurious_uart_interrupt int,
    sysconfig_beam_angle int,
    sysconfig_beam_config int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    temperature int,
    time_per_ping_minutes int,
    time_per_ping_seconds double,
    transducer_depth int,
    transmit_lag_distance int,
    transmit_pulse_length int,
    unassigned_exception int,
    unexpected_alarm int,
    unknown_wakeup_occurred int,
    watchdog_restart_occurred int,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    zero_divide_instruction int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcps_jln_beam_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    address_error_exception int,
    battery_saver_power int,
    beam_1_velocity blob,
    beam_2_velocity blob,
    beam_3_velocity blob,
    beam_4_velocity blob,
    beam_angle int,
    bin_1_distance int,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    blank_after_transmit int,
    bus_error_exception int,
    cell_length int,
    clock_jump_backward int,
    clock_jump_forward int,
    clock_read_error int,
    cold_wakeup_occurred int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    cpu_board_serial_number text,
    data_flag int,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    emulator_exception int,
    ensemble_number int,
    ensemble_number_increment int,
    ensemble_start_time double,
    ensemble_start_time_2 double,
    error_vel_threshold int,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    heading int,
    heading_alignment int,
    heading_bias int,
    heading_stdev int,
    illegal_instruction_exception int,
    lag_length int,
    level_7_interrupt int,
    low_corr_threshold int,
    low_latency_trigger int,
    mpt_minutes int,
    mpt_seconds double,
    num_beams int,
    num_cells int,
    num_code_repetitions int,
    percent_bad_beams blob,
    percent_good_3beam blob,
    percent_good_4beam blob,
    percent_good_min int,
    percent_transforms_reject blob,
    pinging int,
    pings_per_ensemble int,
    pitch int,
    pitch_stdev int,
    power_fail int,
    pressure bigint,
    pressure_variance bigint,
    real_time_clock blob,
    real_time_clock_2 blob,
    reference_layer_start int,
    reference_layer_stop int,
    roll int,
    roll_stdev int,
    salinity int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_speed int,
    sensor_available_temperature int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    serial_number text,
    signal_processing_mode int,
    speed_of_sound int,
    spurious_clock_interrupt int,
    spurious_dsp_interrupt int,
    spurious_uart_interrupt int,
    sysconfig_beam_angle int,
    sysconfig_beam_config int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    temperature int,
    time_per_ping_minutes int,
    time_per_ping_seconds double,
    transducer_depth int,
    transmit_lag_distance int,
    transmit_pulse_length int,
    unassigned_exception int,
    unexpected_alarm int,
    unknown_wakeup_occurred int,
    watchdog_restart_occurred int,
    zero_divide_instruction int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2a_a_dcl_instrument_air_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    avg_irga_temperature double,
    current_a2d int,
    date_time_string text,
    dcl_controller_timestamp text,
    gas_stream_pressure int,
    humidity double,
    humidity_temperature double,
    irga_detector_temperature double,
    irga_source_temperature double,
    measured_air_co2 double,
    zero_a2d int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2a_a_dcl_instrument_water_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    avg_irga_temperature double,
    current_a2d int,
    date_time_string text,
    dcl_controller_timestamp text,
    gas_stream_pressure int,
    humidity double,
    humidity_temperature double,
    irga_detector_temperature double,
    irga_source_temperature double,
    measured_water_co2 double,
    zero_a2d int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2a_a_dcl_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    logging_start_time text,
    logging_stop_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2a_a_dcl_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    logging_start_time text,
    logging_stop_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_imodem_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_lithium double,
    battery_voltage_main double,
    date_time_string text,
    mem_free int,
    num_samples int,
    pressure_range int,
    sample_interval int,
    sample_number int,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_imodem_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_voltage_lithium double,
    battery_voltage_main double,
    date_time_string text,
    mem_free int,
    num_samples int,
    pressure_range int,
    sample_interval int,
    sample_number int,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcpt_acfgm_pd8_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    dcl_controller_timestamp text,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    ensemble_number int,
    error_velocity blob,
    heading double,
    instrument_timestamp text,
    num_cells int,
    pitch double,
    roll double,
    speed_of_sound int,
    temperature double,
    water_direction blob,
    water_velocity blob,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcpt_acfgm_pd8_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bit_result_demod_0 int,
    bit_result_demod_1 int,
    bit_result_timing int,
    dcl_controller_timestamp text,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    ensemble_number int,
    error_velocity blob,
    heading double,
    instrument_timestamp text,
    num_cells int,
    pitch double,
    roll double,
    speed_of_sound int,
    temperature double,
    water_direction blob,
    water_velocity blob,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a_reference_counts blob,
    a_reference_dark_counts int,
    a_signal_counts blob,
    a_signal_dark_counts int,
    c_reference_counts blob,
    c_reference_dark_counts int,
    c_signal_counts blob,
    c_signal_dark_counts int,
    elapsed_run_time bigint,
    external_temp_raw int,
    internal_temp_raw int,
    num_wavelengths int,
    pressure_counts int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a_reference_counts blob,
    a_reference_dark_counts int,
    a_signal_counts blob,
    a_signal_dark_counts int,
    c_reference_counts blob,
    c_reference_dark_counts int,
    c_signal_counts blob,
    c_signal_dark_counts int,
    elapsed_run_time bigint,
    external_temp_raw int,
    internal_temp_raw int,
    num_wavelengths int,
    pressure_counts int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_dcl_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    meter_type int,
    packet_type int,
    serial_number text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_dcl_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    meter_type int,
    packet_type int,
    serial_number text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_non_directional (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    frequency_spacing double,
    initial_frequency double,
    number_bands int,
    psd_non_directional blob,
    serial_number text,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_non_directional_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    frequency_spacing double,
    initial_frequency double,
    number_bands int,
    psd_non_directional blob,
    serial_number text,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_mean_directional (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    directional_spread_array blob,
    frequency_spacing double,
    initial_frequency double,
    mean_direction double,
    mean_direction_array blob,
    number_bands int,
    psd_mean_directional blob,
    serial_number text,
    spread_direction double,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_mean_directional_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    directional_spread_array blob,
    frequency_spacing double,
    initial_frequency double,
    mean_direction double,
    mean_direction_array blob,
    number_bands int,
    psd_mean_directional blob,
    serial_number text,
    spread_direction double,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_motion (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    east_offset_array blob,
    heave_offset_array blob,
    initial_time double,
    north_offset_array blob,
    number_time_samples int,
    serial_number text,
    solution_found int,
    time_spacing double,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_motion_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    east_offset_array blob,
    heave_offset_array blob,
    initial_time double,
    north_offset_array blob,
    number_time_samples int,
    serial_number text,
    solution_found int,
    time_spacing double,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_fourier (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    directional_frequency_spacing double,
    fourier_coefficient_2d_array blob,
    frequency_spacing double,
    initial_directional_frequency double,
    initial_frequency double,
    number_bands int,
    number_directional_bands int,
    serial_number text,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_fourier_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    dcl_controller_timestamp text,
    directional_frequency_spacing double,
    fourier_coefficient_2d_array blob,
    frequency_spacing double,
    initial_directional_frequency double,
    initial_frequency double,
    number_bands int,
    number_directional_bands int,
    serial_number text,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    analog1 int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    pressure_mbar int,
    roll_decidegree int,
    sound_speed_dms int,
    status int,
    temperature_centidegree int,
    velocity_beam1 int,
    velocity_beam2 int,
    velocity_beam3 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    analog1 int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    pressure_mbar int,
    roll_decidegree int,
    sound_speed_dms int,
    status int,
    temperature_centidegree int,
    velocity_beam1 int,
    velocity_beam2 int,
    velocity_beam3 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_dcl_diagnostics_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cell_number_diagnostics int,
    date_time_string text,
    distance_beam1 int,
    distance_beam2 int,
    distance_beam3 int,
    distance_beam4 int,
    noise_amplitude_beam1 int,
    noise_amplitude_beam2 int,
    noise_amplitude_beam3 int,
    noise_amplitude_beam4 int,
    processing_magnitude_beam1 int,
    processing_magnitude_beam2 int,
    processing_magnitude_beam3 int,
    processing_magnitude_beam4 int,
    records_to_follow int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_dcl_diagnostics_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cell_number_diagnostics int,
    date_time_string text,
    distance_beam1 int,
    distance_beam2 int,
    distance_beam3 int,
    distance_beam4 int,
    noise_amplitude_beam1 int,
    noise_amplitude_beam2 int,
    noise_amplitude_beam3 int,
    noise_amplitude_beam4 int,
    processing_magnitude_beam1 int,
    processing_magnitude_beam2 int,
    processing_magnitude_beam3 int,
    processing_magnitude_beam4 int,
    records_to_follow int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_dcl_diagnostics (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    analog1 int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    pressure_mbar int,
    roll_decidegree int,
    sound_speed_dms int,
    status int,
    temperature_centidegree int,
    velocity_beam1 int,
    velocity_beam2 int,
    velocity_beam3 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_dcl_diagnostics_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    analog1 int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    pressure_mbar int,
    roll_decidegree int,
    sound_speed_dms int,
    status int,
    temperature_centidegree int,
    velocity_beam1 int,
    velocity_beam2 int,
    velocity_beam3 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    ctd_time int,
    inductive_id int,
    pressure int,
    pressure_temp int,
    serial_number text,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_offset_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ctd_time_offset int,
    inductive_id int,
    sio_controller_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_ckl_mmp_cds_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity double,
    pressure double,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_j_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity double,
    pressure double,
    profiler_timestamp double,
    salinity double,
    suspect_timestamp int,
    temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_j_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity double,
    pressure double,
    profiler_timestamp double,
    salinity double,
    suspect_timestamp int,
    temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_j_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdpf_j_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blue_amplitude double,
    blue_phase double,
    calibrated_phase double,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    optode_temperature double,
    pressure_depth double,
    profiler_timestamp double,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    suspect_timestamp int,
    temp_compensated_phase double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blue_amplitude double,
    blue_phase double,
    calibrated_phase double,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    optode_temperature double,
    pressure_depth double,
    profiler_timestamp double,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    suspect_timestamp int,
    temp_compensated_phase double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    product_number int,
    serial_number text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    product_number int,
    serial_number text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_mmp_cds_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibrated_phase double,
    optode_temperature double,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_sio_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blue_amplitude double,
    blue_phase double,
    calibrated_phase double,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    optode_temperature double,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    sio_controller_timestamp bigint,
    temp_compensated_phase double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_sio_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blue_amplitude double,
    blue_phase double,
    calibrated_phase double,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    optode_temperature double,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    sio_controller_timestamp bigint,
    temp_compensated_phase double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_sio_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    product_number int,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_sio_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    product_number int,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_ln_wfp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    estimated_oxygen_concentration double,
    optode_temperature double,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flcdr_x_mmp_cds_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cdomflo bigint,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flntu_x_mmp_cds_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    chlaflo bigint,
    ntuflo bigint,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_l_wfp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_chl int,
    wfp_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    pressure_depth double,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    pressure_depth double,
    profiler_timestamp double,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    suspect_timestamp int,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    pressure_depth double,
    profiler_timestamp double,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    suspect_timestamp int,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_cpm_eng_cpm (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cg_eng_alarm_at blob,
    cg_eng_alarm_err blob,
    cg_eng_alarm_pc blob,
    cg_eng_alarm_severity blob,
    cg_eng_alarm_sys blob,
    cg_eng_alarm_ts blob,
    cg_eng_cpu_load1 double,
    cg_eng_cpu_load15 double,
    cg_eng_cpu_load5 double,
    cg_eng_cpu_uptime text,
    cg_eng_err_bcmd int,
    cg_eng_err_c_ctl int,
    cg_eng_err_c_gps int,
    cg_eng_err_c_imm int,
    cg_eng_err_c_irid int,
    cg_eng_err_c_power_sys int,
    cg_eng_err_c_pps int,
    cg_eng_err_c_status int,
    cg_eng_err_c_telem_sys int,
    cg_eng_err_cpm1 int,
    cg_eng_err_d_ctl int,
    cg_eng_err_d_status int,
    cg_eng_err_dlog_mgr int,
    cg_eng_err_dlogp1 int,
    cg_eng_err_dlogp2 int,
    cg_eng_err_dlogp3 int,
    cg_eng_err_dlogp4 int,
    cg_eng_err_dlogp5 int,
    cg_eng_err_dlogp6 int,
    cg_eng_err_dlogp7 int,
    cg_eng_err_dlogp8 int,
    cg_eng_err_rcmd int,
    cg_eng_err_superv int,
    cg_eng_errmsg_bcmd text,
    cg_eng_errmsg_c_ctl text,
    cg_eng_errmsg_c_gps text,
    cg_eng_errmsg_c_imm text,
    cg_eng_errmsg_c_irid text,
    cg_eng_errmsg_c_power_sys text,
    cg_eng_errmsg_c_pps text,
    cg_eng_errmsg_c_status text,
    cg_eng_errmsg_c_telem_sys text,
    cg_eng_errmsg_cpm1 text,
    cg_eng_errmsg_d_ctl text,
    cg_eng_errmsg_d_status text,
    cg_eng_errmsg_dlog_mgr text,
    cg_eng_errmsg_dlogp1 text,
    cg_eng_errmsg_dlogp2 text,
    cg_eng_errmsg_dlogp3 text,
    cg_eng_errmsg_dlogp4 text,
    cg_eng_errmsg_dlogp5 text,
    cg_eng_errmsg_dlogp6 text,
    cg_eng_errmsg_dlogp7 text,
    cg_eng_errmsg_dlogp8 text,
    cg_eng_errmsg_rcmd text,
    cg_eng_errmsg_superv text,
    cg_eng_gps_alt double,
    cg_eng_gps_cog double,
    cg_eng_gps_date bigint,
    cg_eng_gps_fix int,
    cg_eng_gps_hdop double,
    cg_eng_gps_last_update double,
    cg_eng_gps_lat double,
    cg_eng_gps_latstr text,
    cg_eng_gps_lon double,
    cg_eng_gps_lonstr text,
    cg_eng_gps_msg_date text,
    cg_eng_gps_msg_time text,
    cg_eng_gps_nsat int,
    cg_eng_gps_spd double,
    cg_eng_gps_time bigint,
    cg_eng_loadshed_last_update double,
    cg_eng_loadshed_status text,
    cg_eng_memory_free bigint,
    cg_eng_memory_ram bigint,
    cg_eng_mpic_bat_c double,
    cg_eng_mpic_bat_v double,
    cg_eng_mpic_dcl bigint,
    cg_eng_mpic_dsl bigint,
    cg_eng_mpic_eflag bigint,
    cg_eng_mpic_eflag2 bigint,
    cg_eng_mpic_esw bigint,
    cg_eng_mpic_fw_wifi int,
    cg_eng_mpic_fw_wifi_c double,
    cg_eng_mpic_fw_wifi_e int,
    cg_eng_mpic_fw_wifi_v double,
    cg_eng_mpic_gf_ena int,
    cg_eng_mpic_gflt1 double,
    cg_eng_mpic_gflt2 double,
    cg_eng_mpic_gflt3 double,
    cg_eng_mpic_gflt4 double,
    cg_eng_mpic_gps int,
    cg_eng_mpic_hbeat_dtime int,
    cg_eng_mpic_hbeat_enable int,
    cg_eng_mpic_hbeat_threshold int,
    cg_eng_mpic_humid double,
    cg_eng_mpic_irid int,
    cg_eng_mpic_irid_c double,
    cg_eng_mpic_irid_e int,
    cg_eng_mpic_irid_v double,
    cg_eng_mpic_last_update double,
    cg_eng_mpic_ld_ena int,
    cg_eng_mpic_ldet1 double,
    cg_eng_mpic_ldet2 double,
    cg_eng_mpic_main_c double,
    cg_eng_mpic_main_v double,
    cg_eng_mpic_pps int,
    cg_eng_mpic_press double,
    cg_eng_mpic_sbd int,
    cg_eng_mpic_sbd_ce_msg int,
    cg_eng_mpic_temp1 double,
    cg_eng_mpic_temp2 double,
    cg_eng_mpic_wake_cpm double,
    cg_eng_mpic_wpc int,
    cg_eng_mpic_wsrc int,
    cg_eng_msg_cnts_c_gps int,
    cg_eng_msg_cnts_c_ntp int,
    cg_eng_msg_cnts_c_power_sys int,
    cg_eng_msg_cnts_c_pps int,
    cg_eng_msg_cnts_c_superv int,
    cg_eng_msg_cnts_c_telem int,
    cg_eng_nproc int,
    cg_eng_ntp_jitter double,
    cg_eng_ntp_offset double,
    cg_eng_ntp_refid text,
    cg_eng_platform_time text,
    cg_eng_platform_utime double,
    cg_eng_pps_bad_pulse int,
    cg_eng_pps_delta int,
    cg_eng_pps_deltamax int,
    cg_eng_pps_deltamin int,
    cg_eng_pps_last_update double,
    cg_eng_pps_lock text,
    cg_eng_pps_timestamp text,
    cg_eng_pwrsys_b1_0 double,
    cg_eng_pwrsys_b1_1 double,
    cg_eng_pwrsys_b1_2 double,
    cg_eng_pwrsys_b2_0 double,
    cg_eng_pwrsys_b2_1 double,
    cg_eng_pwrsys_b2_2 double,
    cg_eng_pwrsys_b3_0 double,
    cg_eng_pwrsys_b3_1 double,
    cg_eng_pwrsys_b3_2 double,
    cg_eng_pwrsys_b4_0 double,
    cg_eng_pwrsys_b4_1 double,
    cg_eng_pwrsys_b4_2 double,
    cg_eng_pwrsys_b_chg double,
    cg_eng_pwrsys_cvt_0 double,
    cg_eng_pwrsys_cvt_1 double,
    cg_eng_pwrsys_cvt_2 double,
    cg_eng_pwrsys_cvt_3 double,
    cg_eng_pwrsys_cvt_4 double,
    cg_eng_pwrsys_eflag1 bigint,
    cg_eng_pwrsys_eflag2 bigint,
    cg_eng_pwrsys_eflag3 bigint,
    cg_eng_pwrsys_fc1_0 double,
    cg_eng_pwrsys_fc1_1 double,
    cg_eng_pwrsys_fc1_2 double,
    cg_eng_pwrsys_fc2_0 double,
    cg_eng_pwrsys_fc2_1 double,
    cg_eng_pwrsys_fc2_2 double,
    cg_eng_pwrsys_fc_level double,
    cg_eng_pwrsys_last_update double,
    cg_eng_pwrsys_main_c double,
    cg_eng_pwrsys_main_v double,
    cg_eng_pwrsys_override int,
    cg_eng_pwrsys_pv1_0 double,
    cg_eng_pwrsys_pv1_1 double,
    cg_eng_pwrsys_pv1_2 double,
    cg_eng_pwrsys_pv2_0 double,
    cg_eng_pwrsys_pv2_1 double,
    cg_eng_pwrsys_pv2_2 double,
    cg_eng_pwrsys_pv3_0 double,
    cg_eng_pwrsys_pv3_1 double,
    cg_eng_pwrsys_pv3_2 double,
    cg_eng_pwrsys_pv4_0 double,
    cg_eng_pwrsys_pv4_1 double,
    cg_eng_pwrsys_pv4_2 double,
    cg_eng_pwrsys_swg_0 double,
    cg_eng_pwrsys_swg_1 double,
    cg_eng_pwrsys_swg_2 double,
    cg_eng_pwrsys_temp double,
    cg_eng_pwrsys_wt1_0 double,
    cg_eng_pwrsys_wt1_1 double,
    cg_eng_pwrsys_wt1_2 double,
    cg_eng_pwrsys_wt2_0 double,
    cg_eng_pwrsys_wt2_1 double,
    cg_eng_pwrsys_wt2_2 double,
    cg_eng_sbc_bid int,
    cg_eng_sbc_bstr int,
    cg_eng_sbc_ce_led int,
    cg_eng_sbc_eth0 int,
    cg_eng_sbc_eth1 int,
    cg_eng_sbc_fb1 int,
    cg_eng_sbc_fb2 int,
    cg_eng_sbc_gpio0 int,
    cg_eng_sbc_gpio1 int,
    cg_eng_sbc_gpio2 int,
    cg_eng_sbc_gpio3 int,
    cg_eng_sbc_gpio4 int,
    cg_eng_sbc_gpio5 int,
    cg_eng_sbc_gpo0 int,
    cg_eng_sbc_gpo1 int,
    cg_eng_sbc_gpo2 int,
    cg_eng_sbc_gpo3 int,
    cg_eng_sbc_gpo4 int,
    cg_eng_sbc_led0 int,
    cg_eng_sbc_led1 int,
    cg_eng_sbc_led2 int,
    cg_eng_sbc_wdt int,
    cg_eng_sched_last_update double,
    cg_eng_sched_num1 blob,
    cg_eng_sched_num2 blob,
    cg_eng_sched_num3 blob,
    cg_eng_sched_num4 blob,
    cg_eng_sched_num5 blob,
    cg_eng_sched_num6 blob,
    cg_eng_sched_num7 blob,
    cg_eng_sched_remaining blob,
    cg_eng_sched_status blob,
    cg_eng_sched_status_val blob,
    cg_eng_sched_sys blob,
    cg_eng_sched_time blob,
    cg_eng_sched_type blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_cpm_eng_cpm_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cg_eng_alarm_at blob,
    cg_eng_alarm_err blob,
    cg_eng_alarm_pc blob,
    cg_eng_alarm_severity blob,
    cg_eng_alarm_sys blob,
    cg_eng_alarm_ts blob,
    cg_eng_cpu_load1 double,
    cg_eng_cpu_load15 double,
    cg_eng_cpu_load5 double,
    cg_eng_cpu_uptime text,
    cg_eng_err_bcmd int,
    cg_eng_err_c_ctl int,
    cg_eng_err_c_gps int,
    cg_eng_err_c_imm int,
    cg_eng_err_c_irid int,
    cg_eng_err_c_power_sys int,
    cg_eng_err_c_pps int,
    cg_eng_err_c_status int,
    cg_eng_err_c_telem_sys int,
    cg_eng_err_cpm1 int,
    cg_eng_err_d_ctl int,
    cg_eng_err_d_status int,
    cg_eng_err_dlog_mgr int,
    cg_eng_err_dlogp1 int,
    cg_eng_err_dlogp2 int,
    cg_eng_err_dlogp3 int,
    cg_eng_err_dlogp4 int,
    cg_eng_err_dlogp5 int,
    cg_eng_err_dlogp6 int,
    cg_eng_err_dlogp7 int,
    cg_eng_err_dlogp8 int,
    cg_eng_err_rcmd int,
    cg_eng_err_superv int,
    cg_eng_errmsg_bcmd text,
    cg_eng_errmsg_c_ctl text,
    cg_eng_errmsg_c_gps text,
    cg_eng_errmsg_c_imm text,
    cg_eng_errmsg_c_irid text,
    cg_eng_errmsg_c_power_sys text,
    cg_eng_errmsg_c_pps text,
    cg_eng_errmsg_c_status text,
    cg_eng_errmsg_c_telem_sys text,
    cg_eng_errmsg_cpm1 text,
    cg_eng_errmsg_d_ctl text,
    cg_eng_errmsg_d_status text,
    cg_eng_errmsg_dlog_mgr text,
    cg_eng_errmsg_dlogp1 text,
    cg_eng_errmsg_dlogp2 text,
    cg_eng_errmsg_dlogp3 text,
    cg_eng_errmsg_dlogp4 text,
    cg_eng_errmsg_dlogp5 text,
    cg_eng_errmsg_dlogp6 text,
    cg_eng_errmsg_dlogp7 text,
    cg_eng_errmsg_dlogp8 text,
    cg_eng_errmsg_rcmd text,
    cg_eng_errmsg_superv text,
    cg_eng_gps_alt double,
    cg_eng_gps_cog double,
    cg_eng_gps_date bigint,
    cg_eng_gps_fix int,
    cg_eng_gps_hdop double,
    cg_eng_gps_last_update double,
    cg_eng_gps_lat double,
    cg_eng_gps_latstr text,
    cg_eng_gps_lon double,
    cg_eng_gps_lonstr text,
    cg_eng_gps_msg_date text,
    cg_eng_gps_msg_time text,
    cg_eng_gps_nsat int,
    cg_eng_gps_spd double,
    cg_eng_gps_time bigint,
    cg_eng_loadshed_last_update double,
    cg_eng_loadshed_status text,
    cg_eng_memory_free bigint,
    cg_eng_memory_ram bigint,
    cg_eng_mpic_bat_c double,
    cg_eng_mpic_bat_v double,
    cg_eng_mpic_dcl bigint,
    cg_eng_mpic_dsl bigint,
    cg_eng_mpic_eflag bigint,
    cg_eng_mpic_eflag2 bigint,
    cg_eng_mpic_esw bigint,
    cg_eng_mpic_fw_wifi int,
    cg_eng_mpic_fw_wifi_c double,
    cg_eng_mpic_fw_wifi_e int,
    cg_eng_mpic_fw_wifi_v double,
    cg_eng_mpic_gf_ena int,
    cg_eng_mpic_gflt1 double,
    cg_eng_mpic_gflt2 double,
    cg_eng_mpic_gflt3 double,
    cg_eng_mpic_gflt4 double,
    cg_eng_mpic_gps int,
    cg_eng_mpic_hbeat_dtime int,
    cg_eng_mpic_hbeat_enable int,
    cg_eng_mpic_hbeat_threshold int,
    cg_eng_mpic_humid double,
    cg_eng_mpic_irid int,
    cg_eng_mpic_irid_c double,
    cg_eng_mpic_irid_e int,
    cg_eng_mpic_irid_v double,
    cg_eng_mpic_last_update double,
    cg_eng_mpic_ld_ena int,
    cg_eng_mpic_ldet1 double,
    cg_eng_mpic_ldet2 double,
    cg_eng_mpic_main_c double,
    cg_eng_mpic_main_v double,
    cg_eng_mpic_pps int,
    cg_eng_mpic_press double,
    cg_eng_mpic_sbd int,
    cg_eng_mpic_sbd_ce_msg int,
    cg_eng_mpic_temp1 double,
    cg_eng_mpic_temp2 double,
    cg_eng_mpic_wake_cpm double,
    cg_eng_mpic_wpc int,
    cg_eng_mpic_wsrc int,
    cg_eng_msg_cnts_c_gps int,
    cg_eng_msg_cnts_c_ntp int,
    cg_eng_msg_cnts_c_power_sys int,
    cg_eng_msg_cnts_c_pps int,
    cg_eng_msg_cnts_c_superv int,
    cg_eng_msg_cnts_c_telem int,
    cg_eng_nproc int,
    cg_eng_ntp_jitter double,
    cg_eng_ntp_offset double,
    cg_eng_ntp_refid text,
    cg_eng_platform_time text,
    cg_eng_platform_utime double,
    cg_eng_pps_bad_pulse int,
    cg_eng_pps_delta int,
    cg_eng_pps_deltamax int,
    cg_eng_pps_deltamin int,
    cg_eng_pps_last_update double,
    cg_eng_pps_lock text,
    cg_eng_pps_timestamp text,
    cg_eng_pwrsys_b1_0 double,
    cg_eng_pwrsys_b1_1 double,
    cg_eng_pwrsys_b1_2 double,
    cg_eng_pwrsys_b2_0 double,
    cg_eng_pwrsys_b2_1 double,
    cg_eng_pwrsys_b2_2 double,
    cg_eng_pwrsys_b3_0 double,
    cg_eng_pwrsys_b3_1 double,
    cg_eng_pwrsys_b3_2 double,
    cg_eng_pwrsys_b4_0 double,
    cg_eng_pwrsys_b4_1 double,
    cg_eng_pwrsys_b4_2 double,
    cg_eng_pwrsys_b_chg double,
    cg_eng_pwrsys_cvt_0 double,
    cg_eng_pwrsys_cvt_1 double,
    cg_eng_pwrsys_cvt_2 double,
    cg_eng_pwrsys_cvt_3 double,
    cg_eng_pwrsys_cvt_4 double,
    cg_eng_pwrsys_eflag1 bigint,
    cg_eng_pwrsys_eflag2 bigint,
    cg_eng_pwrsys_eflag3 bigint,
    cg_eng_pwrsys_fc1_0 double,
    cg_eng_pwrsys_fc1_1 double,
    cg_eng_pwrsys_fc1_2 double,
    cg_eng_pwrsys_fc2_0 double,
    cg_eng_pwrsys_fc2_1 double,
    cg_eng_pwrsys_fc2_2 double,
    cg_eng_pwrsys_fc_level double,
    cg_eng_pwrsys_last_update double,
    cg_eng_pwrsys_main_c double,
    cg_eng_pwrsys_main_v double,
    cg_eng_pwrsys_override int,
    cg_eng_pwrsys_pv1_0 double,
    cg_eng_pwrsys_pv1_1 double,
    cg_eng_pwrsys_pv1_2 double,
    cg_eng_pwrsys_pv2_0 double,
    cg_eng_pwrsys_pv2_1 double,
    cg_eng_pwrsys_pv2_2 double,
    cg_eng_pwrsys_pv3_0 double,
    cg_eng_pwrsys_pv3_1 double,
    cg_eng_pwrsys_pv3_2 double,
    cg_eng_pwrsys_pv4_0 double,
    cg_eng_pwrsys_pv4_1 double,
    cg_eng_pwrsys_pv4_2 double,
    cg_eng_pwrsys_swg_0 double,
    cg_eng_pwrsys_swg_1 double,
    cg_eng_pwrsys_swg_2 double,
    cg_eng_pwrsys_temp double,
    cg_eng_pwrsys_wt1_0 double,
    cg_eng_pwrsys_wt1_1 double,
    cg_eng_pwrsys_wt1_2 double,
    cg_eng_pwrsys_wt2_0 double,
    cg_eng_pwrsys_wt2_1 double,
    cg_eng_pwrsys_wt2_2 double,
    cg_eng_sbc_bid int,
    cg_eng_sbc_bstr int,
    cg_eng_sbc_ce_led int,
    cg_eng_sbc_eth0 int,
    cg_eng_sbc_eth1 int,
    cg_eng_sbc_fb1 int,
    cg_eng_sbc_fb2 int,
    cg_eng_sbc_gpio0 int,
    cg_eng_sbc_gpio1 int,
    cg_eng_sbc_gpio2 int,
    cg_eng_sbc_gpio3 int,
    cg_eng_sbc_gpio4 int,
    cg_eng_sbc_gpio5 int,
    cg_eng_sbc_gpo0 int,
    cg_eng_sbc_gpo1 int,
    cg_eng_sbc_gpo2 int,
    cg_eng_sbc_gpo3 int,
    cg_eng_sbc_gpo4 int,
    cg_eng_sbc_led0 int,
    cg_eng_sbc_led1 int,
    cg_eng_sbc_led2 int,
    cg_eng_sbc_wdt int,
    cg_eng_sched_last_update double,
    cg_eng_sched_num1 blob,
    cg_eng_sched_num2 blob,
    cg_eng_sched_num3 blob,
    cg_eng_sched_num4 blob,
    cg_eng_sched_num5 blob,
    cg_eng_sched_num6 blob,
    cg_eng_sched_num7 blob,
    cg_eng_sched_remaining blob,
    cg_eng_sched_status blob,
    cg_eng_sched_status_val blob,
    cg_eng_sched_sys blob,
    cg_eng_sched_time blob,
    cg_eng_sched_type blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    date_of_sample int,
    frame_header text,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    ref_channel_average double,
    ref_channel_variance double,
    rms_error double,
    sea_water_dark double,
    serial_number text,
    spec_channel_average double,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_analog double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    firmware_date text,
    firmware_version text,
    serial_number text,
    startup_time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_sio_mule_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    ctd_time int,
    inductive_id int,
    pressure int,
    sio_controller_timestamp bigint,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdmo_ghqr_sio_offset (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ctd_time_offset int,
    inductive_id int,
    sio_controller_timestamp bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_l_wfp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    vel3d_l_date_time_array blob,
    vel3d_l_heading double,
    vel3d_l_hx double,
    vel3d_l_hy double,
    vel3d_l_hz double,
    vel3d_l_tx double,
    vel3d_l_ty double,
    vel3d_l_vp1 double,
    vel3d_l_vp2 double,
    vel3d_l_vp3 double,
    vel3d_l_vp4 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_l_wfp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    serial_number text,
    vel3d_l_number_of_records int,
    vel3d_l_time_off bigint,
    vel3d_l_time_on bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_ctd_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity_millisiemens double,
    pressure double,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_ctd_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity_millisiemens double,
    pressure double,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_flnturtd_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    chlaflo bigint,
    ntuflo bigint,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_flnturtd_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    chlaflo bigint,
    ntuflo bigint,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_flcdrtd_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cdomflo bigint,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_flcdrtd_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cdomflo bigint,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_acm_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    vel3d_a_hx double,
    vel3d_a_hy double,
    vel3d_a_hz double,
    vel3d_a_tx double,
    vel3d_a_ty double,
    vel3d_a_va double,
    vel3d_a_vb double,
    vel3d_a_vc double,
    vel3d_a_vd double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_acm_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    vel3d_a_hx double,
    vel3d_a_hy double,
    vel3d_a_hz double,
    vel3d_a_tx double,
    vel3d_a_ty double,
    vel3d_a_va double,
    vel3d_a_vb double,
    vel3d_a_vc double,
    vel3d_a_vd double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_optode_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibrated_phase double,
    optode_temperature double,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_optode_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibrated_phase double,
    optode_temperature double,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_acs_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a_reference_counts blob,
    a_reference_dark_counts int,
    a_signal_counts blob,
    a_signal_dark_counts int,
    c_reference_counts blob,
    c_reference_dark_counts int,
    c_signal_counts blob,
    c_signal_dark_counts int,
    elapsed_run_time bigint,
    external_temp_raw int,
    internal_temp_raw int,
    meter_type int,
    num_wavelengths int,
    packet_type int,
    pressure_counts int,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_instrument_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_output_enable int,
    analog_power_output int,
    average_interval int,
    blanking_distance int,
    compass_update_rate int,
    coordinate_system int,
    correlation_threshold int,
    date_time_string text,
    deployment_name text,
    diagnostics_interval int,
    diagnostics_mode_enable int,
    firmware_version text,
    hardware_revision int,
    head_frequency int,
    head_serial_number text,
    head_type int,
    instrmt_type_serial_number text,
    magnetometer_sensor int,
    measurement_interval int,
    number_beams int,
    number_cells int,
    number_diagnostics_samples int,
    number_of_beam_sequences int,
    number_of_beams_in_diagnostics_mode int,
    number_pings_diagnostic int,
    output_format_nortek int,
    pic_version int,
    pressure_sensor int,
    receive_length int,
    recorder_size int,
    reserved_bit_easyq int,
    scaling int,
    serial_output_enable int,
    software_version int,
    sound_speed_adjust_factor int,
    stage_enable int,
    tilt_sensor int,
    tilt_sensor_mounting int,
    time_between_bursts int,
    time_between_pings int,
    transmit_pulse_length int,
    use_specified_sound_speed int,
    velocity_range int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    analog1 int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    pressure_mbar int,
    roll_decidegree int,
    sound_speed_dms int,
    status int,
    temperature_centidegree int,
    velocity_beam1 int,
    velocity_beam2 int,
    velocity_beam3 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_diagnostics_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cell_number_diagnostics int,
    date_time_string text,
    distance_beam1 int,
    distance_beam2 int,
    distance_beam3 int,
    distance_beam4 int,
    noise_amplitude_beam1 int,
    noise_amplitude_beam2 int,
    noise_amplitude_beam3 int,
    noise_amplitude_beam4 int,
    processing_magnitude_beam1 int,
    processing_magnitude_beam2 int,
    processing_magnitude_beam3 int,
    processing_magnitude_beam4 int,
    records_to_follow int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_ab_diagnostics_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    analog1 int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    pressure_mbar int,
    roll_decidegree int,
    sound_speed_dms int,
    status int,
    temperature_centidegree int,
    velocity_beam1 int,
    velocity_beam2 int,
    velocity_beam3 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_a_mmp_cds_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    vel3d_a_hx double,
    vel3d_a_hy double,
    vel3d_a_hz double,
    vel3d_a_tx double,
    vel3d_a_ty double,
    vel3d_a_va double,
    vel3d_a_vb double,
    vel3d_a_vc double,
    vel3d_a_vd double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_ac_mmp_cds_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a_reference_counts blob,
    a_reference_dark_counts int,
    a_signal_counts blob,
    a_signal_dark_counts int,
    c_reference_counts blob,
    c_reference_dark_counts int,
    c_signal_counts blob,
    c_signal_dark_counts int,
    elapsed_run_time bigint,
    external_temp_raw int,
    internal_temp_raw int,
    meter_type int,
    num_wavelengths int,
    packet_type int,
    pressure_counts int,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_msg_counts (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dlog_mgr_counts int,
    gps_counts int,
    header_timestamp text,
    ntp_counts int,
    pps_counts int,
    superv_counts int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_msg_counts_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dlog_mgr_counts int,
    gps_counts int,
    header_timestamp text,
    ntp_counts int,
    pps_counts int,
    superv_counts int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_cpu_uptime (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    header_timestamp text,
    load_val_1 double,
    load_val_2 double,
    load_val_3 double,
    mem_free int,
    num_processes int,
    uptime_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_cpu_uptime_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    header_timestamp text,
    load_val_1 double,
    load_val_2 double,
    load_val_3 double,
    mem_free int,
    num_processes int,
    uptime_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_error (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    header_timestamp text,
    log_type text,
    message_text text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_error_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    header_timestamp text,
    log_type text,
    message_text text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_gps (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_of_fix text,
    gps_altitude double,
    gps_hdop double,
    gps_num_satellites int,
    gps_quality int,
    gps_speed double,
    gps_true_course double,
    header_timestamp text,
    latitude double,
    latitude_alt_format text,
    longitude double,
    longitude_alt_format text,
    message_sent_timestamp text,
    time_of_fix text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_gps_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_of_fix text,
    gps_altitude double,
    gps_hdop double,
    gps_num_satellites int,
    gps_quality int,
    gps_speed double,
    gps_true_course double,
    header_timestamp text,
    latitude double,
    latitude_alt_format text,
    longitude double,
    longitude_alt_format text,
    message_sent_timestamp text,
    time_of_fix text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_pps (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bad_pulses int,
    delta int,
    delta_max int,
    delta_min int,
    header_timestamp text,
    message_sent_timestamp text,
    nmea_lock int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_pps_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bad_pulses int,
    delta int,
    delta_max int,
    delta_min int,
    header_timestamp text,
    message_sent_timestamp text,
    nmea_lock int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_superv (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    active_leak_detect_channels int,
    active_swgf_channels int,
    bmp085_pressure double,
    bmp085_temp double,
    board_type text,
    channel_error_status blob,
    channel_i blob,
    channel_state blob,
    channel_v blob,
    dpb_mode int,
    dpb_voltage_mode int,
    error_brown_out_reset int,
    error_channel_1_not_responding int,
    error_channel_2_not_responding int,
    error_channel_3_not_responding int,
    error_channel_4_not_responding int,
    error_channel_5_not_responding int,
    error_channel_6_not_responding int,
    error_channel_7_not_responding int,
    error_channel_8_not_responding int,
    error_channel_overcurrent_fault int,
    error_dcl_iso_swgf_lim_exceeded int,
    error_dcl_rtn_swfg_lim_exceeded int,
    error_gmain_swgf_lim_exceeded int,
    error_i2c_error int,
    error_imain_out_tolerance int,
    error_leak_detect_c1_lim_exceeded int,
    error_leak_detect_c2_lim_exceeded int,
    error_sensor_iso_swgf_lim_exceeded int,
    error_snsr_com_swgf_lim_exceeded int,
    error_uart_error int,
    error_vmain_out_tolerance int,
    error_vmain_swgf_lim_exceeded int,
    header_timestamp text,
    imain_current double,
    imain_dpb_in double,
    leak_detect_c1_v int,
    leak_detect_c2_v int,
    murata_12v_temp double,
    murata_24v_temp double,
    out_12v_i double,
    out_12v_v double,
    out_24v_i double,
    out_24v_v double,
    pwr_board_mode int,
    sht25_humidity double,
    sht25_temp double,
    swgf_c1_max_leakage double,
    swgf_c2_max_leakage double,
    swgf_c3_max_leakage double,
    vicor_12v_bcm_temp double,
    vmain_backplane_bus_voltage double,
    vmain_dpb_in double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_superv_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    active_leak_detect_channels int,
    active_swgf_channels int,
    bmp085_pressure double,
    bmp085_temp double,
    board_type text,
    channel_error_status blob,
    channel_i blob,
    channel_state blob,
    channel_v blob,
    dpb_mode int,
    dpb_voltage_mode int,
    error_brown_out_reset int,
    error_channel_1_not_responding int,
    error_channel_2_not_responding int,
    error_channel_3_not_responding int,
    error_channel_4_not_responding int,
    error_channel_5_not_responding int,
    error_channel_6_not_responding int,
    error_channel_7_not_responding int,
    error_channel_8_not_responding int,
    error_channel_overcurrent_fault int,
    error_dcl_iso_swgf_lim_exceeded int,
    error_dcl_rtn_swfg_lim_exceeded int,
    error_gmain_swgf_lim_exceeded int,
    error_i2c_error int,
    error_imain_out_tolerance int,
    error_leak_detect_c1_lim_exceeded int,
    error_leak_detect_c2_lim_exceeded int,
    error_sensor_iso_swgf_lim_exceeded int,
    error_snsr_com_swgf_lim_exceeded int,
    error_uart_error int,
    error_vmain_out_tolerance int,
    error_vmain_swgf_lim_exceeded int,
    header_timestamp text,
    imain_current double,
    imain_dpb_in double,
    leak_detect_c1_v int,
    leak_detect_c2_v int,
    murata_12v_temp double,
    murata_24v_temp double,
    out_12v_i double,
    out_12v_v double,
    out_24v_i double,
    out_24v_v double,
    pwr_board_mode int,
    sht25_humidity double,
    sht25_temp double,
    swgf_c1_max_leakage double,
    swgf_c2_max_leakage double,
    swgf_c3_max_leakage double,
    vicor_12v_bcm_temp double,
    vmain_backplane_bus_voltage double,
    vmain_dpb_in double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_dlog_mgr (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    datalogger_timestamp text,
    dlog_mgr_act int,
    dlog_mgr_fld int,
    dlog_mgr_hlt int,
    dlog_mgr_map text,
    dlog_mgr_str int,
    header_timestamp text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_dlog_mgr_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    datalogger_timestamp text,
    dlog_mgr_act int,
    dlog_mgr_fld int,
    dlog_mgr_hlt int,
    dlog_mgr_map text,
    dlog_mgr_str int,
    header_timestamp text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_dlog_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bad_bytes int,
    bad_records int,
    bytes_logged int,
    bytes_received int,
    bytes_sent int,
    datalogger_state text,
    good_records int,
    header_timestamp text,
    instrument_identifier text,
    message_sent_timestamp text,
    time_last_communicated bigint,
    time_received_last_data bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_dlog_status_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bad_bytes int,
    bad_records int,
    bytes_logged int,
    bytes_received int,
    bytes_sent int,
    datalogger_state text,
    good_records int,
    header_timestamp text,
    instrument_identifier text,
    message_sent_timestamp text,
    time_last_communicated bigint,
    time_received_last_data bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_dlog_aarm (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    acceleration_x double,
    acceleration_y double,
    acceleration_z double,
    angular_rate_x double,
    angular_rate_y double,
    angular_rate_z double,
    header_timestamp text,
    magnetometer_x double,
    magnetometer_y double,
    magnetometer_z double,
    tic_counter double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_dlog_aarm_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    acceleration_x double,
    acceleration_y double,
    acceleration_z double,
    angular_rate_x double,
    angular_rate_y double,
    angular_rate_z double,
    header_timestamp text,
    magnetometer_x double,
    magnetometer_y double,
    magnetometer_z double,
    tic_counter double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    header_timestamp text,
    message_sent_timestamp text,
    message_sent_type text,
    ntp_jitter double,
    ntp_offset double,
    sync_type text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cg_dcl_eng_dcl_status_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    header_timestamp text,
    message_sent_timestamp text,
    message_sent_type text,
    ntp_jitter double,
    ntp_offset double,
    sync_type text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcpt_m_instrument_log9_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    burst_number bigint,
    burst_start_time blob,
    d_mean double,
    depth_level_direction blob,
    depth_level_magnitude blob,
    depth_water_level double,
    dp_sea double,
    dp_swell double,
    h_1_10 double,
    h_1_3 double,
    h_max double,
    h_mean double,
    hs_sea double,
    hs_swell double,
    num_bins int,
    peak_wave_direction double,
    peak_wave_period double,
    significant_wave_height double,
    t_1_10 double,
    t_1_3 double,
    t_max double,
    t_mean double,
    tp_sea double,
    tp_swell double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcpt_m_instrument_dspec_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    directional_surface_spectrum blob,
    file_time text,
    freq_0 double,
    freq_w_band double,
    num_dir int,
    num_freq int,
    start_dir double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcpt_m_instrument_fcoeff_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a1_band blob,
    a2_band blob,
    b1_band blob,
    b2_band blob,
    bandwidth_band blob,
    check_factor_band blob,
    direction_band blob,
    energy_density_band blob,
    file_time text,
    freq_0 double,
    freq_w_band double,
    frequency_band blob,
    num_fields int,
    num_freq int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcpt_m_wvs_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    altitude bigint,
    average_depth bigint,
    avg_heading int,
    avg_pitch int,
    avg_roll int,
    avg_ss int,
    avg_temp int,
    beam_angle int,
    beam_conf int,
    bin_1_middle int,
    bin_map blob,
    bin_size int,
    bottom_slope_x int,
    bottom_slope_y int,
    cal_press int,
    clip_pwr_spec int,
    currents int,
    depth_offset int,
    dir_cutoff int,
    dir_p2 int,
    disc_flag int,
    down int,
    ds_freq_hi bigint,
    dspec_dat blob,
    dspec_good int,
    dspec_num_dir int,
    dspec_num_freq int,
    dummy_surf int,
    file_mode int,
    file_time text,
    fixed_pitch int,
    fixed_roll int,
    freq_lo int,
    freq_thresh double,
    h_max_dev int,
    heading_offset int,
    heading_time_series blob,
    heading_variation int,
    horizontal int,
    hpr_num_samples int,
    hs_std bigint,
    nfft_samples int,
    nom_depth bigint,
    num_beams int,
    num_directional_slices int,
    num_freq_bins int,
    num_int_bins int,
    num_range_bins int,
    num_vel_bins int,
    pct_gd_press int,
    pct_gd_surf int,
    pct_gd_vel int,
    pitch_time_series blob,
    pr_max_dev int,
    press_spec int,
    ps_freq_hi bigint,
    ps_std bigint,
    pspec_dat blob,
    pspec_num_freq int,
    rec_dir_spec int,
    rec_spectra int,
    rec_time_series int,
    remove_bias int,
    roll_time_series blob,
    sample_rate double,
    samples_collected int,
    samples_per_burst int,
    scale_spec int,
    sequence_number int,
    small_wave_freq int,
    small_wave_thresh int,
    soft_rev int,
    ss_freq_hi bigint,
    sspec_dat blob,
    sspec_num_freq int,
    start_time blob,
    stop_time blob,
    strack_spec int,
    surf_max int,
    surf_max_chng int,
    surf_min int,
    surf_pct_gd int,
    surf_std int,
    tbe_max_dev int,
    tilts int,
    time_between_bursts_sec int,
    time_between_samples int,
    trans_v2_surf int,
    use_press_4_depth int,
    use_strack_4_depth int,
    vel_max int,
    vel_max_change int,
    vel_min int,
    vel_pct_gd int,
    vel_std int,
    vs_freq_hi bigint,
    vs_std bigint,
    vspec_dat blob,
    vspec_num_freq int,
    vspec_pct_measured int,
    wave_dm int,
    wave_dp1 int,
    wave_dp2 int,
    wave_hs1 int,
    wave_hs2 int,
    wave_param_source int,
    wave_tp1 int,
    wave_tp2 int,
    window_type int,
    x_vel int,
    y_vel int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_mmp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    operating_mode text,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    wfp_prof_current double,
    wfp_prof_pressure double,
    wfp_prof_voltage double,
    wfp_profile_number bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dpc_mmp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    operating_mode text,
    raw_time_microseconds bigint,
    raw_time_seconds bigint,
    wfp_prof_current double,
    wfp_prof_pressure double,
    wfp_prof_voltage double,
    wfp_profile_number bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_sio_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    sio_controller_timestamp bigint,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_dj_sio_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    measurement_wavelength_beta int,
    measurement_wavelength_cdom int,
    measurement_wavelength_chl int,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_cdom int,
    raw_signal_chl int,
    sio_controller_timestamp bigint,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_instrument_blank (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blank_light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_instrument_blank_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    blank_light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    thermistor_raw int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_control (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_control_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_power (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    passed_checksum int,
    record_time bigint,
    record_type int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_power_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    passed_checksum int,
    record_time bigint,
    record_type int,
    unique_id int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    file_time text,
    instrument_id text,
    num_data_records int,
    num_events int,
    num_samples int,
    record_length int,
    serial_number text,
    voltage_flt32 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.pco2w_abc_imodem_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    file_time text,
    instrument_id text,
    num_data_records int,
    num_events int,
    num_samples int,
    record_length int,
    serial_number text,
    voltage_flt32 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_imodem_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    reference_light_measurements blob,
    thermistor_end int,
    thermistor_start int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_imodem_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    light_measurements blob,
    passed_checksum int,
    record_time bigint,
    record_type int,
    reference_light_measurements blob,
    thermistor_end int,
    thermistor_start int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_imodem_control (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_imodem_control_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_low_blank int,
    battery_low_external int,
    battery_low_measurement int,
    battery_low_prestart int,
    clock_active int,
    data_download_ok int,
    external_device1_fault int,
    external_device2_fault int,
    external_device3_fault int,
    flash_erased int,
    flash_memory_open int,
    num_bytes_stored int,
    num_data_records int,
    num_error_records int,
    passed_checksum int,
    power_on_invalid int,
    record_end_on_error int,
    record_end_on_time int,
    record_memory_full int,
    record_time bigint,
    record_type int,
    recording_active int,
    unique_id int,
    voltage_battery int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_imodem_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    file_time text,
    instrument_id text,
    num_data_records int,
    num_events int,
    num_samples int,
    record_length int,
    serial_number text,
    voltage_flt32 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.phsen_abcdef_imodem_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    file_time text,
    instrument_id text,
    num_data_records int,
    num_events int,
    num_samples int,
    record_length int,
    serial_number text,
    voltage_flt32 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.sio_eng_control_status_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sio_controller_id bigint,
    sio_controller_timestamp bigint,
    sio_eng_clock_drift int,
    sio_eng_number_of_wakeups bigint,
    sio_eng_on_time bigint,
    sio_eng_temperature double,
    sio_eng_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_dbg_pdbg_batt_eng (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_number_uint8 int,
    battery_voltage_flt32 double,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_dbg_pdbg_batt_eng_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    battery_number_uint8 int,
    battery_voltage_flt32 double,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_dbg_pdbg_gps_eng (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    gps_adjustment int,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_dbg_pdbg_gps_eng_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    gps_adjustment int,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_dbg_pdbg_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_dbg_pdbg_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_hmr_eng (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    heading double,
    pitch double,
    pressure_depth double,
    profiler_timestamp double,
    roll double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_hmr_eng_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    heading double,
    pitch double,
    pressure_depth double,
    profiler_timestamp double,
    roll double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_hmr_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_hmr_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_sbe_eng (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    velocity_flt32 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_sbe_eng_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    velocity_flt32 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_sbe_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_sbe_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_wm_eng (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    current_flt32 double,
    device_status text,
    encoder_counts int,
    pressure_depth double,
    profiler_timestamp double,
    rope_on_drum double,
    suspect_timestamp int,
    temperature double,
    voltage_flt32 double,
    winch_velocity double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_wm_eng_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    current_flt32 double,
    device_status text,
    encoder_counts int,
    pressure_depth double,
    profiler_timestamp double,
    rope_on_drum double,
    suspect_timestamp int,
    temperature double,
    voltage_flt32 double,
    winch_velocity double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_wm_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_cspp_wc_wm_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcps_jln_stc_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcps_jln_bins int,
    adcps_jln_day int,
    adcps_jln_fw_rev int,
    adcps_jln_fw_vers int,
    adcps_jln_heading int,
    adcps_jln_hour int,
    adcps_jln_hsec int,
    adcps_jln_minute int,
    adcps_jln_month int,
    adcps_jln_number bigint,
    adcps_jln_pitch int,
    adcps_jln_pressure int,
    adcps_jln_record bigint,
    adcps_jln_roll int,
    adcps_jln_second int,
    adcps_jln_startbin int,
    adcps_jln_temp int,
    adcps_jln_unit_id int,
    adcps_jln_year int,
    error_velocity blob,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcps_jln_stc_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcps_jln_events bigint,
    adcps_jln_id int,
    adcps_jln_length bigint,
    adcps_jln_records bigint,
    adcps_jln_samples_written bigint,
    adcps_jln_timestamp text,
    adcps_jln_volts double,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_j_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    par bigint,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_j_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    par bigint,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_j_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_j_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_abj_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    channel_array blob,
    frame_counter int,
    internal_temperature int,
    pressure_depth double,
    profiler_timestamp double,
    sample_delay int,
    suspect_timestamp int,
    timer double,
    va_sense int,
    vin_sense int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_abj_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    channel_array blob,
    frame_counter int,
    internal_temperature int,
    pressure_depth double,
    profiler_timestamp double,
    sample_delay int,
    suspect_timestamp int,
    timer double,
    va_sense int,
    vin_sense int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_abj_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    instrument_id text,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    serial_number text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.spkir_abj_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    instrument_id text,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    serial_number text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_j_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    day_of_year int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    pressure_depth double,
    profiler_timestamp double,
    spectral_channels blob,
    suspect_timestamp int,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_j_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    day_of_year int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    pressure_depth double,
    profiler_timestamp double,
    spectral_channels blob,
    suspect_timestamp int,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_j_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_j_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_j_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    heading double,
    pitch double,
    pressure_depth double,
    profiler_timestamp double,
    roll double,
    speed_of_sound double,
    suspect_timestamp int,
    temperature double,
    velocity_beam1_m_s double,
    velocity_beam2_m_s double,
    velocity_beam3_m_s double,
    velpt_pressure double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_j_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam1 int,
    amplitude_beam2 int,
    amplitude_beam3 int,
    heading double,
    pitch double,
    pressure_depth double,
    profiler_timestamp double,
    roll double,
    speed_of_sound double,
    suspect_timestamp int,
    temperature double,
    velocity_beam1_m_s double,
    velocity_beam2_m_s double,
    velocity_beam3_m_s double,
    velpt_pressure double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_j_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.velpt_j_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_cspp_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a_reference_counts blob,
    a_reference_dark_counts int,
    a_signal_counts blob,
    a_signal_dark_counts int,
    c_reference_counts blob,
    c_reference_dark_counts int,
    c_signal_counts blob,
    c_signal_dark_counts int,
    external_temp_raw int,
    internal_temp_raw int,
    num_wavelengths int,
    on_seconds double,
    pressure_counts int,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_cspp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    a_reference_counts blob,
    a_reference_dark_counts int,
    a_signal_counts blob,
    a_signal_dark_counts int,
    c_reference_counts blob,
    c_reference_dark_counts int,
    c_signal_counts blob,
    c_signal_dark_counts int,
    external_temp_raw int,
    internal_temp_raw int,
    num_wavelengths int,
    on_seconds double,
    pressure_counts int,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_cspp_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    serial_number text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.optaa_dj_cspp_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day_of_year_number int,
    fraction_of_day int,
    last_character_controller_id text,
    preprocessing_software_version text,
    processing_time text,
    serial_number text,
    source_file text,
    start_date text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_user_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input_address int,
    analog_output_enable int,
    analog_power_output int,
    analog_scale_factor int,
    average_interval int,
    blanking_distance int,
    cell_size int,
    compass_update_rate int,
    coordinate_system int,
    correlation_threshold int,
    deployment_name text,
    deployment_start_time blob,
    diagnostics_interval int,
    diagnostics_mode_enable int,
    dynamic_position_type int,
    file_comments text,
    filter_constants text,
    filter_data_output int,
    fixed_wave_blanking_distance int,
    measurement_interval int,
    mode_type int,
    number_beams int,
    number_beams_per_cell int,
    number_cells int,
    number_diagnostics_per_wave int,
    number_diagnostics_samples int,
    number_pings int,
    number_pings_diagnostic int,
    number_samples_per_burst int,
    output_format_nortek int,
    percent_wave_cell_position int,
    power_level_pcr1 int,
    power_level_pcr2 int,
    power_level_tcm1 int,
    power_level_tcm2 int,
    profile_type int,
    receive_length int,
    sample_on_sync int,
    scaling int,
    serial_output_enable int,
    software_version int,
    sound_speed_adjust_factor int,
    stage_enable int,
    start_on_sync int,
    sync_out_position int,
    time_between_bursts int,
    time_between_pings int,
    transmit_pulse_length int,
    transmit_pulse_length_2nd int,
    use_dsp_filter int,
    use_specified_sound_speed int,
    velocity_adjustment_factor text,
    wave_cell_position int,
    wave_data_rate int,
    wave_measurement_cell_size int,
    wave_transmit_pulse int,
    wrap_mode int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_user_configuration_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input_address int,
    analog_output_enable int,
    analog_power_output int,
    analog_scale_factor int,
    average_interval int,
    blanking_distance int,
    cell_size int,
    compass_update_rate int,
    coordinate_system int,
    correlation_threshold int,
    deployment_name text,
    deployment_start_time blob,
    diagnostics_interval int,
    diagnostics_mode_enable int,
    dynamic_position_type int,
    file_comments text,
    filter_constants text,
    filter_data_output int,
    fixed_wave_blanking_distance int,
    measurement_interval int,
    mode_type int,
    number_beams int,
    number_beams_per_cell int,
    number_cells int,
    number_diagnostics_per_wave int,
    number_diagnostics_samples int,
    number_pings int,
    number_pings_diagnostic int,
    number_samples_per_burst int,
    output_format_nortek int,
    percent_wave_cell_position int,
    power_level_pcr1 int,
    power_level_pcr2 int,
    power_level_tcm1 int,
    power_level_tcm2 int,
    profile_type int,
    receive_length int,
    sample_on_sync int,
    scaling int,
    serial_output_enable int,
    software_version int,
    sound_speed_adjust_factor int,
    stage_enable int,
    start_on_sync int,
    sync_out_position int,
    time_between_bursts int,
    time_between_pings int,
    transmit_pulse_length int,
    transmit_pulse_length_2nd int,
    use_dsp_filter int,
    use_specified_sound_speed int,
    velocity_adjustment_factor text,
    wave_cell_position int,
    wave_data_rate int,
    wave_measurement_cell_size int,
    wave_transmit_pulse int,
    wrap_mode int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_hardware_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    board_frequency int,
    compass_installed int,
    firmware_version text,
    hardware_revision int,
    instrmt_type_serial_number text,
    pic_version int,
    recorder_installed int,
    recorder_size int,
    velocity_range int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_hardware_configuration_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    board_frequency int,
    compass_installed int,
    firmware_version text,
    hardware_revision int,
    instrmt_type_serial_number text,
    pic_version int,
    recorder_installed int,
    recorder_size int,
    velocity_range int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_head_configuration (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    head_frequency int,
    head_serial_number text,
    head_type int,
    magnetometer_sensor int,
    number_beams int,
    pressure_sensor int,
    system_data text,
    tilt_sensor int,
    tilt_sensor_mounting int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_head_configuration_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    head_frequency int,
    head_serial_number text,
    head_type int,
    magnetometer_sensor int,
    number_beams int,
    pressure_sensor int,
    system_data text,
    tilt_sensor int,
    tilt_sensor_mounting int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_data_header (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    noise_amp_beam1 int,
    noise_amp_beam2 int,
    noise_amp_beam3 int,
    noise_correlation_beam1 int,
    noise_correlation_beam2 int,
    noise_correlation_beam3 int,
    number_velocity_records int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_data_header_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    noise_amp_beam1 int,
    noise_amp_beam2 int,
    noise_amp_beam3 int,
    noise_correlation_beam1 int,
    noise_correlation_beam2 int,
    noise_correlation_beam3 int,
    number_velocity_records int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_velocity_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam_1 int,
    amplitude_beam_2 int,
    amplitude_beam_3 int,
    analog_input_1 int,
    analog_input_2 int,
    correlation_beam_1 int,
    correlation_beam_2 int,
    correlation_beam_3 int,
    ensemble_counter int,
    seawater_pressure_mbar int,
    turbulent_velocity_east int,
    turbulent_velocity_north int,
    turbulent_velocity_vertical int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_velocity_data_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    amplitude_beam_1 int,
    amplitude_beam_2 int,
    amplitude_beam_3 int,
    analog_input_1 int,
    analog_input_2 int,
    correlation_beam_1 int,
    correlation_beam_2 int,
    correlation_beam_3 int,
    ensemble_counter int,
    seawater_pressure_mbar int,
    turbulent_velocity_east int,
    turbulent_velocity_north int,
    turbulent_velocity_vertical int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_system_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    roll_decidegree int,
    speed_of_sound double,
    status_code int,
    temperature_centidegree int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vel3d_cd_dcl_system_data_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    analog_input int,
    battery_voltage_dv int,
    date_time_string text,
    error_code int,
    heading_decidegree int,
    pitch_decidegree int,
    roll_decidegree int,
    speed_of_sound double,
    status_code int,
    temperature_centidegree int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.fdchp_a_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    buoyance_flux double,
    dcl_controller_timestamp text,
    eng_wave_motion double,
    heading double,
    heading_max double,
    heading_min double,
    heading_std double,
    instrument_start_timestamp text,
    pitch double,
    pitch_max double,
    pitch_min double,
    pitch_std double,
    roll double,
    roll_max double,
    roll_min double,
    roll_std double,
    speed_of_sound_avg double,
    speed_of_sound_max double,
    speed_of_sound_min double,
    speed_of_sound_std double,
    status_datacollection text,
    time_datacollection double,
    u_corr double,
    u_corr_std double,
    uw_momentum_flux double,
    v_corr double,
    v_corr_std double,
    v_num_datacollection double,
    vw_momentum_flux double,
    w_corr double,
    w_corr_std double,
    wind_speed double,
    wind_u_avg double,
    wind_u_max double,
    wind_u_min double,
    wind_u_std double,
    wind_v_avg double,
    wind_v_max double,
    wind_v_min double,
    wind_v_std double,
    wind_w_avg double,
    wind_w_max double,
    wind_w_min double,
    wind_w_std double,
    x_accel double,
    x_accel_max double,
    x_accel_min double,
    x_accel_std double,
    x_ang_rate_avg double,
    x_ang_rate_max double,
    x_ang_rate_min double,
    x_ang_rate_std double,
    y_accel double,
    y_accel_max double,
    y_accel_min double,
    y_accel_std double,
    y_ang_rate_avg double,
    y_ang_rate_max double,
    y_ang_rate_min double,
    y_ang_rate_std double,
    z_accel double,
    z_accel_max double,
    z_accel_min double,
    z_accel_std double,
    z_ang_rate_avg double,
    z_ang_rate_max double,
    z_ang_rate_min double,
    z_ang_rate_std double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.fdchp_a_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    buoyance_flux double,
    dcl_controller_timestamp text,
    eng_wave_motion double,
    heading double,
    heading_max double,
    heading_min double,
    heading_std double,
    instrument_start_timestamp text,
    pitch double,
    pitch_max double,
    pitch_min double,
    pitch_std double,
    roll double,
    roll_max double,
    roll_min double,
    roll_std double,
    speed_of_sound_avg double,
    speed_of_sound_max double,
    speed_of_sound_min double,
    speed_of_sound_std double,
    status_datacollection text,
    time_datacollection double,
    u_corr double,
    u_corr_std double,
    uw_momentum_flux double,
    v_corr double,
    v_corr_std double,
    v_num_datacollection double,
    vw_momentum_flux double,
    w_corr double,
    w_corr_std double,
    wind_speed double,
    wind_u_avg double,
    wind_u_max double,
    wind_u_min double,
    wind_u_std double,
    wind_v_avg double,
    wind_v_max double,
    wind_v_min double,
    wind_v_std double,
    wind_w_avg double,
    wind_w_max double,
    wind_w_min double,
    wind_w_std double,
    x_accel double,
    x_accel_max double,
    x_accel_min double,
    x_accel_std double,
    x_ang_rate_avg double,
    x_ang_rate_max double,
    x_ang_rate_min double,
    x_ang_rate_std double,
    y_accel double,
    y_accel_max double,
    y_accel_min double,
    y_accel_std double,
    y_ang_rate_avg double,
    y_ang_rate_max double,
    y_ang_rate_min double,
    y_ang_rate_std double,
    z_accel double,
    z_accel_max double,
    z_accel_min double,
    z_accel_std double,
    z_ang_rate_avg double,
    z_ang_rate_max double,
    z_ang_rate_min double,
    z_ang_rate_std double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.zplsc_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    filepath text,
    zplsc_absorption_coeff blob,
    zplsc_bandwidth blob,
    zplsc_channel blob,
    zplsc_frequency blob,
    zplsc_pulse_length blob,
    zplsc_sample_interval blob,
    zplsc_sound_velocity blob,
    zplsc_temperature blob,
    zplsc_timestamp text,
    zplsc_transducer_depth blob,
    zplsc_transmit_power blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.fuelcell_eng_dcl_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    air_pump_pwm_drive_percent int,
    air_pump_tach_count int,
    balance_of_plant_converter_temperature int,
    balance_of_plant_power int,
    battery1_converter_temperature int,
    battery2_converter_temperature int,
    control_board_temperature int,
    coolant_pump_pwm_drive_percent int,
    datalog_manager_version text,
    dcl_controller_timestamp text,
    fuel_cell_current int,
    fuel_cell_error_mask bigint,
    fuel_cell_h2_pressure int,
    fuel_cell_state int,
    fuel_cell_temperature int,
    fuel_cell_voltage int,
    fuel_pump_pwm_drive_percent int,
    fuel_remaining int,
    power_board_temperature int,
    power_manager_error_mask int,
    power_manager_status bigint,
    power_to_battery1 int,
    power_to_battery2 int,
    reformer_error_mask bigint,
    reformer_fuel_pressure int,
    reformer_temperature int,
    system_software_version text,
    total_run_time bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.fuelcell_eng_dcl_telemetered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    air_pump_pwm_drive_percent int,
    air_pump_tach_count int,
    balance_of_plant_converter_temperature int,
    balance_of_plant_power int,
    battery1_converter_temperature int,
    battery2_converter_temperature int,
    control_board_temperature int,
    coolant_pump_pwm_drive_percent int,
    datalog_manager_version text,
    dcl_controller_timestamp text,
    fuel_cell_current int,
    fuel_cell_error_mask bigint,
    fuel_cell_h2_pressure int,
    fuel_cell_state int,
    fuel_cell_temperature int,
    fuel_cell_voltage int,
    fuel_pump_pwm_drive_percent int,
    fuel_remaining int,
    power_board_temperature int,
    power_manager_error_mask int,
    power_manager_status bigint,
    power_to_battery1 int,
    power_to_battery2 int,
    reformer_error_mask bigint,
    reformer_fuel_pressure int,
    reformer_temperature int,
    system_software_version text,
    total_run_time bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.osmoi_a_subcon_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    acidity double,
    alkalinity double,
    aluminum_concentration double,
    ammonia_concentration double,
    barium_concentration double,
    boron_concentration double,
    bromide_concentration double,
    cadmium_concentration double,
    calcium_concentration double,
    cesium_concentration double,
    chloride_concentration double,
    cobalt_concentration double,
    copper_concentration double,
    gadolinium_concentration double,
    hydrogen_sulfide_concentration double,
    iron_concentration double,
    lat double,
    lead_concentration double,
    lithium_concentration double,
    lon double,
    m_depth double,
    magnesium_concentration double,
    manganese_concentration double,
    molybdenum_concentration double,
    nickel_concentration double,
    port_number int,
    potassium_concentration double,
    rubidium_concentration double,
    serial_number text,
    silicon_concentration double,
    silver_concentration double,
    sodium_concentration double,
    start_time text,
    stop_time text,
    strontium_icpaes_concentration double,
    strontium_icpms_concentration double,
    sulfate_concentration double,
    temp double,
    titanium_concentration double,
    uranium_concentration double,
    vanadium_concentration double,
    volume_pumped double,
    yttrium_concentration double,
    zinc_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.rasfl_a_subcon_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    acidity double,
    alkalinity double,
    aluminum_concentration double,
    ammonia_concentration double,
    barium_concentration double,
    boron_concentration double,
    bromide_concentration double,
    cadmium_concentration double,
    calcium_concentration double,
    cesium_concentration double,
    chloride_concentration double,
    cobalt_concentration double,
    copper_concentration double,
    gadolinium_concentration double,
    hydrogen_sulfide_concentration double,
    iron_concentration double,
    lat double,
    lead_concentration double,
    lithium_concentration double,
    lon double,
    m_depth double,
    magnesium_concentration double,
    manganese_concentration double,
    molybdenum_concentration double,
    nickel_concentration double,
    port_number int,
    potassium_concentration double,
    rubidium_concentration double,
    serial_number text,
    silicon_concentration double,
    silver_concentration double,
    sodium_concentration double,
    start_time text,
    stop_time text,
    strontium_icpaes_concentration double,
    strontium_icpms_concentration double,
    sulfate_concentration double,
    temp double,
    titanium_concentration double,
    uranium_concentration double,
    vanadium_concentration double,
    yttrium_concentration double,
    zinc_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ppsdn_a_subcon_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    fasta_url text,
    lat double,
    lon double,
    m_depth double,
    ncbi_sequence_read_archive_url text,
    port_number int,
    serial_number text,
    start_time text,
    stop_time text,
    vamps_url text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_c_upper_coil_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    barium_concentration_um double,
    boron_concentration double,
    calcium_concentration double,
    flow_rate double,
    lithium_concentration double,
    magnesium_concentration double,
    potassium_concentration double,
    sample_time text,
    sodium_concentration double,
    strontium_concentration double,
    sulfur_concentration double,
    tracer_percent double,
    tracking_id text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_c_lower_coil_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    barium_concentration_um double,
    boron_concentration double,
    calcium_concentration double,
    flow_rate double,
    lithium_concentration double,
    magnesium_concentration double,
    potassium_concentration double,
    sample_time text,
    sodium_concentration double,
    strontium_concentration double,
    sulfur_concentration double,
    tracer_percent double,
    tracking_id text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_x1_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sample_time text,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_x2_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sample_time text,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_y1_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sample_time text,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_y2_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sample_time text,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_z1_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calcium_concentration double,
    chloride_concentration double,
    magnesium_concentration double,
    potassium_concentration double,
    sample_time text,
    sodium_concentration double,
    sulfate_concentration double,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_z2_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calcium_concentration double,
    chloride_concentration double,
    magnesium_concentration double,
    potassium_concentration double,
    sample_time text,
    sodium_concentration double,
    sulfate_concentration double,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_z3_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calcium_concentration double,
    chloride_concentration double,
    magnesium_concentration double,
    potassium_concentration double,
    sample_time text,
    sodium_concentration double,
    sulfate_concentration double,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_z4_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calcium_concentration double,
    chloride_concentration double,
    magnesium_concentration double,
    potassium_concentration double,
    sample_time text,
    sodium_concentration double,
    sulfate_concentration double,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_position_z5_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calcium_concentration double,
    chloride_concentration double,
    magnesium_concentration double,
    potassium_concentration double,
    sample_time text,
    sodium_concentration double,
    sulfate_concentration double,
    tracer_concentration double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_direction_x_flow_rate_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    flow_rate double,
    sample_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_direction_y_flow_rate_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    flow_rate double,
    sample_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_direction_z_flow_rate_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    flow_rate double,
    sample_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flobn_m_ambient_temperature_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ambient_temperature double,
    sample_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.hyd_o_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    hyd_percent double,
    hyd_raw double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.hyd_o_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dcl_controller_timestamp text,
    hyd_percent double,
    hyd_raw double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcpa_n_auv_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcpa_n_auv_error_velocity double,
    altitude double,
    altitude_track_range_beam_1 double,
    altitude_track_range_beam_2 double,
    altitude_track_range_beam_3 double,
    altitude_track_range_beam_4 double,
    auv_latitude double,
    auv_longitude double,
    average_current double,
    average_direction double,
    binary_velocity_data_1 int,
    binary_velocity_data_2 int,
    binary_velocity_data_3 int,
    binary_velocity_data_4 int,
    coordinates_transformation int,
    ensemble_number int,
    forward_velocity double,
    heading double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    pitch double,
    roll double,
    starboard_velocity double,
    temperature double,
    vertical_velocity double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_kn_auv_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    b double,
    device_count int,
    device_id int,
    eco_data_offset int,
    html_plot int,
    mission_epoch bigint,
    mx double,
    parameter_id int,
    parameter_name text,
    parameter_type int,
    parameter_unit text,
    sensor_name text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_kn_auv_metadata_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    b double,
    device_count int,
    device_id int,
    eco_data_offset int,
    html_plot int,
    mission_epoch bigint,
    mx double,
    parameter_id int,
    parameter_name text,
    parameter_type int,
    parameter_unit text,
    sensor_name text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_kn_auv_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    device_count int,
    device_id int,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    parameter_0 double,
    parameter_1 double,
    parameter_2 double,
    parameter_3 double,
    parameter_4 double,
    parameter_5 double,
    parameter_6 double,
    parameter_7 double,
    parameter_8 double,
    version int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_kn_auv_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    device_count int,
    device_id int,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    parameter_0 double,
    parameter_1 double,
    parameter_2 double,
    parameter_3 double,
    parameter_4 double,
    parameter_5 double,
    parameter_6 double,
    parameter_7 double,
    parameter_8 double,
    version int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_ln_auv_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    b_pot double,
    blue_amplitude double,
    blue_phase double,
    calculated_oxygen_concentration double,
    calculated_oxygen_saturation double,
    calibrated_phase double,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    external_temperature double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    optode_temperature double,
    product_number int,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    salinity double,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_ln_auv_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    b_pot double,
    blue_amplitude double,
    blue_phase double,
    calculated_oxygen_concentration double,
    calculated_oxygen_saturation double,
    calibrated_phase double,
    estimated_oxygen_concentration double,
    estimated_oxygen_saturation double,
    external_temperature double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    optode_temperature double,
    product_number int,
    raw_temperature double,
    red_amplitude double,
    red_phase double,
    salinity double,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdav_n_auv_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    ctdav_n_auv_conductivity double,
    dissolved_oxygen double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    powered_on int,
    salinity double,
    speed_of_sound double,
    temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdav_n_auv_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    ctdav_n_auv_conductivity double,
    dissolved_oxygen double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    powered_on int,
    salinity double,
    speed_of_sound double,
    temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_n_auv_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    biospherical_mobile_sensor_voltage double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    parad_n_auv_supply_voltage double,
    sensor_temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.parad_n_auv_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    biospherical_mobile_sensor_voltage double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    parad_n_auv_supply_voltage double,
    sensor_temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.fdchp_a_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    day int,
    fdchp_heading double,
    fdchp_pitch double,
    fdchp_roll double,
    fdchp_speed_of_sound_sonic int,
    fdchp_status_1 int,
    fdchp_status_2 int,
    fdchp_wind_x int,
    fdchp_wind_y int,
    fdchp_wind_z int,
    fdchp_x_accel_g double,
    fdchp_x_ang_rate double,
    fdchp_y_accel_g double,
    fdchp_y_ang_rate double,
    fdchp_z_accel_g double,
    fdchp_z_ang_rate double,
    hour int,
    millisecond int,
    minute int,
    month int,
    second int,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_imagenex_852 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    estimated_range double,
    estimated_rate double,
    look_down_angle double,
    m_altitude double,
    m_depth double,
    median_filter_range double,
    mission_epoch bigint,
    mission_time bigint,
    obstacle_range_critical double,
    obstacle_range_maximum double,
    obstacle_range_rate_critical double,
    obstacle_range_rate_minimum double,
    pings bigint,
    pitch_deg double,
    range_setting int,
    roll_deg double,
    sonar_range double,
    sonar_range_minimum double,
    status int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_imagenex_852_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    estimated_range double,
    estimated_rate double,
    look_down_angle double,
    m_altitude double,
    m_depth double,
    median_filter_range double,
    mission_epoch bigint,
    mission_time bigint,
    obstacle_range_critical double,
    obstacle_range_maximum double,
    obstacle_range_rate_critical double,
    obstacle_range_rate_minimum double,
    pings bigint,
    pitch_deg double,
    range_setting int,
    roll_deg double,
    sonar_range double,
    sonar_range_minimum double,
    status int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_digital_usbl (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    array_sound_speed int,
    auv_latitude double,
    auv_longitude double,
    auv_speed_of_sound double,
    compass_true_heading double,
    gain_1 int,
    gain_2 int,
    inband_snr int,
    latency double,
    mission_epoch bigint,
    mission_time bigint,
    outband_snr int,
    range double,
    range_maximum double,
    range_minimum double,
    reason int,
    reserved double,
    transponder_table_index int,
    x_angle double,
    x_center int,
    y_angle double,
    y_center int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_digital_usbl_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    array_sound_speed int,
    auv_latitude double,
    auv_longitude double,
    auv_speed_of_sound double,
    compass_true_heading double,
    gain_1 int,
    gain_2 int,
    inband_snr int,
    latency double,
    mission_epoch bigint,
    mission_time bigint,
    outband_snr int,
    range double,
    range_maximum double,
    range_minimum double,
    reason int,
    reserved double,
    transponder_table_index int,
    x_angle double,
    x_center int,
    y_angle double,
    y_center int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_tri_fin_motor (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    fin_command_data_1 double,
    fin_command_data_2 double,
    fin_command_data_3 double,
    fin_command_data_4 double,
    fin_command_data_5 double,
    fin_command_data_6 double,
    fin_count int,
    fin_depth_translation_command double,
    fin_depth_translation_position int,
    fin_pitch_command double,
    fin_pitch_position int,
    fin_position_data_1 double,
    fin_position_data_2 double,
    fin_position_data_3 double,
    fin_position_data_4 double,
    fin_position_data_5 double,
    fin_position_data_6 double,
    fin_roll_command double,
    fin_roll_position int,
    fin_rudder_command double,
    fin_rudder_position int,
    fin_yaw_translation_command double,
    fin_yaw_translation_position int,
    mission_epoch bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_tri_fin_motor_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    fin_command_data_1 double,
    fin_command_data_2 double,
    fin_command_data_3 double,
    fin_command_data_4 double,
    fin_command_data_5 double,
    fin_command_data_6 double,
    fin_count int,
    fin_depth_translation_command double,
    fin_depth_translation_position int,
    fin_pitch_command double,
    fin_pitch_position int,
    fin_position_data_1 double,
    fin_position_data_2 double,
    fin_position_data_3 double,
    fin_position_data_4 double,
    fin_position_data_5 double,
    fin_position_data_6 double,
    fin_roll_command double,
    fin_roll_position int,
    fin_rudder_command double,
    fin_rudder_position int,
    fin_yaw_translation_command double,
    fin_yaw_translation_position int,
    mission_epoch bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_emergency_board (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ascent_continuity int,
    ascent_status int,
    board_voltage double,
    descent_continuity int,
    descent_status int,
    mission_epoch bigint,
    pickup_continuity int,
    pickup_status int,
    secondary_status bigint,
    status int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_emergency_board_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ascent_continuity int,
    ascent_status int,
    board_voltage double,
    descent_continuity int,
    descent_status int,
    mission_epoch bigint,
    pickup_continuity int,
    pickup_status int,
    secondary_status bigint,
    status int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_oil_compensator (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    oil_level double,
    oil_location int,
    raw_value int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_oil_compensator_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    oil_level double,
    oil_location int,
    raw_value int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_smart_battery (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    address_mask int,
    auv_temperature double,
    available_power double,
    average_current int,
    battery_count int,
    battery_flags int,
    battery_index int,
    battery_status int,
    battery_temperature double,
    cycle_count int,
    desired_charge_rate int,
    end_of_discharge int,
    flags int,
    full_charge_capacity int,
    mission_epoch bigint,
    pic_balance_enabled int,
    pic_cell_voltage_1 int,
    pic_cell_voltage_2 int,
    pic_cell_voltage_3 int,
    pic_cell_voltage_4 int,
    pic_cell_voltage_5 int,
    pic_cell_voltage_6 int,
    pic_cell_voltage_7 int,
    pic_charge_value int,
    pic_faults int,
    pic_fet_state int,
    pressure_mbar double,
    remaining_capacity int,
    serial int,
    smart_battery_voltage int,
    temperature_one_tenth int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_smart_battery_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    address_mask int,
    auv_temperature double,
    available_power double,
    average_current int,
    battery_count int,
    battery_flags int,
    battery_index int,
    battery_status int,
    battery_temperature double,
    cycle_count int,
    desired_charge_rate int,
    end_of_discharge int,
    flags int,
    full_charge_capacity int,
    mission_epoch bigint,
    pic_balance_enabled int,
    pic_cell_voltage_1 int,
    pic_cell_voltage_2 int,
    pic_cell_voltage_3 int,
    pic_cell_voltage_4 int,
    pic_cell_voltage_5 int,
    pic_cell_voltage_6 int,
    pic_cell_voltage_7 int,
    pic_charge_value int,
    pic_faults int,
    pic_fet_state int,
    pressure_mbar double,
    remaining_capacity int,
    serial int,
    smart_battery_voltage int,
    temperature_one_tenth int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_digital_tx_board (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    auv_speed_of_sound double,
    compass_true_heading double,
    fail_flag int,
    inband_channel_1_snr int,
    inband_channel_2_snr int,
    interrogate_channel_1_snr int,
    interrogate_channel_2_snr int,
    mission_epoch bigint,
    mission_time bigint,
    outband_channel_1_snr int,
    outband_channel_2_snr int,
    range_1 double,
    range_2 double,
    receive_channel_1 int,
    receive_channel_2 int,
    received_bits int,
    reply_age_1 bigint,
    reply_age_2 bigint,
    transponder_table_index_1 int,
    transponder_table_index_2 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_digital_tx_board_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    auv_speed_of_sound double,
    compass_true_heading double,
    fail_flag int,
    inband_channel_1_snr int,
    inband_channel_2_snr int,
    interrogate_channel_1_snr int,
    interrogate_channel_2_snr int,
    mission_epoch bigint,
    mission_time bigint,
    outband_channel_1_snr int,
    outband_channel_2_snr int,
    range_1 double,
    range_2 double,
    receive_channel_1 int,
    receive_channel_2 int,
    received_bits int,
    reply_age_1 bigint,
    reply_age_2 bigint,
    transponder_table_index_1 int,
    transponder_table_index_2 int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_fault_message (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    filename text,
    line int,
    message text,
    mission_epoch bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_fault_message_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    filename text,
    line int,
    message text,
    mission_epoch bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_state (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_current double,
    auv_latitude double,
    auv_longitude double,
    auv_state_voltage double,
    auv_temperature double,
    compass_true_heading double,
    cpu_usage int,
    current_objective int,
    days_since_1970 int,
    depth_goal double,
    dr_latitude double,
    dr_longitude double,
    estimated_velocity double,
    faults bigint,
    flags int,
    gfi double,
    goal_latitude double,
    goal_longitude double,
    heading_goal double,
    heading_offset double,
    heading_rate double,
    leg_number int,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    navigation_mode int,
    objective_index int,
    obs double,
    pitch_command int,
    pitch_deg double,
    pitch_fin_position int,
    pitch_goal double,
    pitch_rate double,
    pressure_mbar double,
    roll_deg double,
    roll_rate double,
    rudder_command int,
    rudder_fin_position int,
    secondary_faults int,
    software_version int,
    spare_slider double,
    thruster int,
    thruster_command int,
    thruster_goal int,
    total_objectives int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.auv_eng_auv_state_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_current double,
    auv_latitude double,
    auv_longitude double,
    auv_state_voltage double,
    auv_temperature double,
    compass_true_heading double,
    cpu_usage int,
    current_objective int,
    days_since_1970 int,
    depth_goal double,
    dr_latitude double,
    dr_longitude double,
    estimated_velocity double,
    faults bigint,
    flags int,
    gfi double,
    goal_latitude double,
    goal_longitude double,
    heading_goal double,
    heading_offset double,
    heading_rate double,
    leg_number int,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    navigation_mode int,
    objective_index int,
    obs double,
    pitch_command int,
    pitch_deg double,
    pitch_fin_position int,
    pitch_goal double,
    pitch_rate double,
    pressure_mbar double,
    roll_deg double,
    roll_rate double,
    rudder_command int,
    rudder_fin_position int,
    secondary_faults int,
    software_version int,
    spare_slider double,
    thruster int,
    thruster_command int,
    thruster_goal int,
    total_objectives int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_statistics (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    average_wave_height double,
    date_string text,
    dcl_controller_timestamp text,
    max_wave_height double,
    mean_direction double,
    mean_spectral_period double,
    mean_spread double,
    mean_wave_period double,
    number_zero_crossings int,
    peak_wave_period double,
    serial_number text,
    significant_period double,
    significant_wave_height double,
    time_string text,
    wave_height_10 double,
    wave_height_hmo double,
    wave_period_10 double,
    wave_period_tp5 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.wavss_a_dcl_statistics_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    average_wave_height double,
    date_string text,
    dcl_controller_timestamp text,
    max_wave_height double,
    mean_direction double,
    mean_spectral_period double,
    mean_spread double,
    mean_wave_period double,
    number_zero_crossings int,
    peak_wave_period double,
    serial_number text,
    significant_period double,
    significant_wave_height double,
    time_string text,
    wave_height_10 double,
    wave_height_hmo double,
    wave_period_10 double,
    wave_period_tp5 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_kn_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    device_count int,
    device_id int,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    parameter_0 double,
    parameter_1 double,
    parameter_2 double,
    parameter_3 double,
    parameter_4 double,
    parameter_5 double,
    parameter_6 double,
    parameter_7 double,
    parameter_8 double,
    version int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.winch_cspp_eng (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sensor_current_draw double,
    winch_current_draw double,
    winch_date text,
    winch_payout int,
    winch_speed int,
    winch_state text,
    winch_status text,
    winch_time text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_n_auv_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    humidity double,
    lamp_state int,
    lamp_time_cumulative bigint,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    nitrate_concentration double,
    nutnr_current_main double,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectral_avg_last_dark int,
    nutnr_voltage_int double,
    sample_time double,
    temp_lamp double,
    temp_spectrometer double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_n_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    day_of_year int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    serial_number text,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_m_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    day_of_year int,
    frame_type text,
    humidity double,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    serial_number text,
    spectral_channels blob,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_m_glider_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    sci_suna_nitrate_mg double,
    sci_suna_nitrate_um double,
    sci_suna_record_offset bigint,
    sci_suna_timestamp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.zplsc_c_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    burst_number bigint,
    serial_number text,
    zplsc_c_battery_voltage double,
    zplsc_c_frequency_channel_1 int,
    zplsc_c_frequency_channel_2 int,
    zplsc_c_frequency_channel_3 int,
    zplsc_c_frequency_channel_4 int,
    zplsc_c_phase int,
    zplsc_c_pressure double,
    zplsc_c_temperature double,
    zplsc_c_tilt_x double,
    zplsc_c_tilt_y double,
    zplsc_c_transmission_timestamp double,
    zplsc_c_values_channel_1 blob,
    zplsc_c_values_channel_2 blob,
    zplsc_c_values_channel_3 blob,
    zplsc_c_values_channel_4 blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.camhd_streaming_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    camhd_heading double,
    camhd_laser int,
    camhd_light1_intensity int,
    camhd_light2_intensity int,
    camhd_pan_position double,
    camhd_pitch double,
    camhd_tilt_position double,
    camhd_zoom int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.camhd_adread_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    camhd_channel_name blob,
    camhd_channel_value blob,
    camhd_value_units blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_cdef_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity double,
    date_time_string text,
    dcl_controller_timestamp text,
    pressure double,
    temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_cdef_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity double,
    date_time_string text,
    dcl_controller_timestamp text,
    pressure double,
    temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_ctdbp_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    dcl_controller_timestamp text,
    dosta_ln_optode_oxygen double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_ctdbp_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    dcl_controller_timestamp text,
    dosta_ln_optode_oxygen double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_cdef_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    ctd_time int,
    pressure int,
    pressure_temp int,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_ctdbp_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ctd_time int,
    oxygen int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_d_data_record (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_string text,
    measurement_wavelength_beta int,
    measurement_wavelength_chl int,
    raw_internal_temp int,
    raw_signal_beta int,
    raw_signal_chl int,
    signal_1_offset int,
    signal_1_scale_factor double,
    signal_2_offset int,
    signal_2_scale_factor double,
    time_string text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_d_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    baud_rate int,
    clock text,
    date text,
    firmware_version text,
    internal_memory int,
    manual_mode int,
    manual_start_time text,
    measurement_1_dark_count_value int,
    measurement_1_slope_value double,
    measurement_2_dark_count_value int,
    measurement_2_slope_value double,
    number_measurements_per_reported_value int,
    number_of_packets_per_set int,
    number_of_reported_values_per_packet int,
    predefined_output_sequence int,
    recording_mode int,
    sampling_interval text,
    serial_number text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_a_dark_sample (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    checksum int,
    date_of_sample int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    serial_number text,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.deep_profiler_dock_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dp_dock_12_v_current double,
    dp_dock_ambient_temperature double,
    dp_dock_heat_sink_temperature double,
    dp_dock_ips_status_control int,
    dp_dock_relative_humidity double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.deep_profiler_vehicle_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    dp_mobile_profiler_battery_energy double,
    dp_mobile_profiler_current double,
    dp_mobile_profiler_pressure double,
    dp_mobile_profiler_profile_number int,
    dp_mobile_profiler_relative_humidity double,
    dp_mobile_profiler_state int,
    dp_mobile_profiler_temperature_1 double,
    dp_mobile_profiler_temperature_2 double,
    dp_mobile_profiler_temperature_3 double,
    dp_mobile_profiler_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.secondary_node_lpjbox_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sn_ambient_temperature double,
    sn_cib_5v_current double,
    sn_cib_board_state int,
    sn_cib_error_state int,
    sn_cib_hotel_current double,
    sn_cib_hotel_voltage double,
    sn_internal_pressure double,
    sn_pitch double,
    sn_relative_humidity double,
    sn_roll double,
    sn_tilt_x double,
    sn_tilt_y double,
    sn_tilt_z double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.secondary_node_port_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sn_port_error_state int,
    sn_port_gfd_high double,
    sn_port_gfd_low double,
    sn_port_gpio_state int,
    sn_port_ocd_current double,
    sn_port_ocd_time_const double,
    sn_port_output_current double,
    sn_port_output_voltage double,
    sn_port_power_state int,
    sn_port_unit_temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.secondary_node_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sn_ambient_temperature double,
    sn_cib_5v_current double,
    sn_cib_board_state int,
    sn_cib_error_state int,
    sn_cib_hotel_current double,
    sn_cib_hotel_voltage double,
    sn_hpb_board_state int,
    sn_hpb_error_state int,
    sn_hpb_gfd_375_high double,
    sn_hpb_gfd_375_low double,
    sn_hpb_hotel_current double,
    sn_hpb_hotel_temperature double,
    sn_hpb_hotel_voltage double,
    sn_hpb_input_voltage double,
    sn_internal_pressure double,
    sn_pitch double,
    sn_relative_humidity double,
    sn_roll double,
    sn_tilt_x double,
    sn_tilt_y double,
    sn_tilt_z double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shallow_profiler_winch_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    sp_mc_engineering_mode_on int,
    sp_mc_mc_event int,
    sp_mc_mission_is_active int,
    sp_mc_scipod_is_docked int,
    sp_mc_scipod_is_idle int,
    sp_mc_sp_timestamp_microsec_component int,
    sp_nav_accel_x double,
    sp_nav_accel_y double,
    sp_nav_accel_z double,
    sp_nav_magnetic_flux_density_x double,
    sp_nav_magnetic_flux_density_y double,
    sp_nav_magnetic_flux_density_z double,
    sp_nav_mission_control_event int,
    sp_nav_navdata_timestamp_microsec_component double,
    sp_nav_pitch double,
    sp_nav_pitch_rate double,
    sp_nav_roll double,
    sp_nav_roll_rate double,
    sp_nav_yaw double,
    sp_nav_yaw_rate double,
    sp_science_pod_depth double,
    sp_science_pod_direction int,
    sp_science_pod_mission_control_event int,
    sp_science_pod_speed double,
    sp_science_pod_wave_height double,
    sp_wc_cable_out double,
    sp_wc_is_bottom_layer int,
    sp_wc_levelwind_cart_direction int,
    sp_wc_levelwind_direction int,
    sp_wc_levelwind_direction_is_clockwise int,
    sp_wc_levelwind_mission_control_event int,
    sp_wc_levelwind_one_way_strokes int,
    sp_wc_levelwind_position_at_last_reverse_index int,
    sp_wc_levelwind_speed int,
    sp_wc_levelwind_vfd_board_temperature double,
    sp_wc_levelwind_vfd_sink_temperature double,
    sp_wc_mission_control_event int,
    sp_wc_winch_cable_wrap_index int,
    sp_wc_winch_cable_wrap_layer int,
    sp_wc_winch_position_at_last_drum_index int,
    sp_wc_winch_revs int,
    sp_wc_winch_speed double,
    sp_wc_winch_vfd_board_temp double,
    sp_wc_winch_vfd_sink_temp double,
    sp_wcler_based_xml_rpc_data_server_mission_control_event int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shore_station_power_feed_equipment_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pfe_hvps1_on text,
    pfe_hvps2_on text,
    pfe_i_gnd double,
    pfe_i_ncbl double,
    pfe_i_phasea double,
    pfe_i_phaseb double,
    pfe_i_phasec double,
    pfe_i_scbl double,
    pfe_imon_1 double,
    pfe_imon_2 double,
    pfe_mode text,
    pfe_p_hvps1 double,
    pfe_p_hvps2 double,
    pfe_p_ncbl double,
    pfe_p_scbl double,
    pfe_v_gnd double,
    pfe_v_ncbl double,
    pfe_v_phasea double,
    pfe_v_phaseb double,
    pfe_v_phasec double,
    pfe_v_scbl double,
    pfe_vmon_1 double,
    pfe_vmon_2 double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.primary_node_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pn_currentsustainingload text,
    pn_currentsustainingloadimbalancecurrent double,
    pn_currentsustainingloadportcurrent double,
    pn_hotelcurrent double,
    pn_inputbuscurrent double,
    pn_inputearthleakage double,
    pn_inputvoltage double,
    pn_monitoringboardhumidity double,
    pn_monitoringboardtemperature double,
    pn_mvpcexpansionport1current double,
    pn_mvpcexpansionport2current double,
    pn_mvpcinputcurrent double,
    pn_mvpcinputvoltage double,
    pn_mvpcpressure1 double,
    pn_mvpcpressure2 double,
    pn_mvpctemperature double,
    pn_pitch double,
    pn_primaryoobtemperature double,
    pn_primarypowermoduletemperature double,
    pn_primaryswtemperature double,
    pn_roll double,
    pn_scienceport1_current double,
    pn_scienceport1_imbalancecurrent double,
    pn_scienceport1_status text,
    pn_scienceport2_current double,
    pn_scienceport2_imbalancecurrent double,
    pn_scienceport2_status text,
    pn_scienceport3_current double,
    pn_scienceport3_imbalancecurrent double,
    pn_scienceport3_status text,
    pn_scienceport4_current double,
    pn_scienceport4_imbalancecurrent double,
    pn_scienceport4_status text,
    pn_scienceport5_current double,
    pn_scienceport5_imbalancecurrent double,
    pn_scienceport5_status text,
    pn_scienceport6_current double,
    pn_scienceport6_imbalancecurrent double,
    pn_scienceport6_status text,
    pn_scienceport7_current double,
    pn_scienceport7_imbalancecurrent double,
    pn_scienceport7_status text,
    pn_secondaryoobtemperature double,
    pn_secondarypowermoduletemperature double,
    pn_secondaryswtemperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.primary_node_port_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pn_currentsustainingload text,
    pn_currentsustainingloadimbalancecurrent double,
    pn_currentsustainingloadportcurrent double,
    pn_hotelcurrent double,
    pn_inputbuscurrent double,
    pn_inputearthleakage double,
    pn_inputvoltage double,
    pn_monitoringboardhumidity double,
    pn_monitoringboardtemperature double,
    pn_mvpcexpansionport1current double,
    pn_mvpcexpansionport2current double,
    pn_mvpcinputcurrent double,
    pn_mvpcinputvoltage double,
    pn_mvpcpressure1 double,
    pn_mvpcpressure2 double,
    pn_mvpctemperature double,
    pn_pitch double,
    pn_primaryoobtemperature double,
    pn_primarypowermoduletemperature double,
    pn_primaryswtemperature double,
    pn_roll double,
    pn_scienceport1_current double,
    pn_scienceport1_imbalancecurrent double,
    pn_scienceport1_status text,
    pn_scienceport2_current double,
    pn_scienceport2_imbalancecurrent double,
    pn_scienceport2_status text,
    pn_scienceport3_current double,
    pn_scienceport3_imbalancecurrent double,
    pn_scienceport3_status text,
    pn_scienceport4_current double,
    pn_scienceport4_imbalancecurrent double,
    pn_scienceport4_status text,
    pn_scienceport5_current double,
    pn_scienceport5_imbalancecurrent double,
    pn_scienceport5_status text,
    pn_scienceport6_current double,
    pn_scienceport6_imbalancecurrent double,
    pn_scienceport6_status text,
    pn_scienceport7_current double,
    pn_scienceport7_imbalancecurrent double,
    pn_scienceport7_status text,
    pn_secondaryoobtemperature double,
    pn_secondarypowermoduletemperature double,
    pn_secondaryswtemperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.primary_node_out_of_band_port_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    pn_oob_sfp_current double,
    pn_oob_sfp_enabled text,
    pn_oob_sfp_inpackets int,
    pn_oob_sfp_linkdownstate text,
    pn_oob_sfp_outpackets int,
    pn_oob_sfp_rxerrors int,
    pn_oob_sfp_rxpower double,
    pn_oob_sfp_temp double,
    pn_oob_sfp_timeoutstate text,
    pn_oob_sfp_txpower double,
    pn_oob_sfp_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shore_station_otn_sea_side_port_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    otn_ifadminstatusdata text,
    otn_ifoperstatusdata text,
    otn_sfpdiagmoduletemperaturedegreescsfp double,
    otn_sfpdiagrxinputpowerdbmsfp double,
    otn_sfpdiagrxlasertemperaturedegreescsfp double,
    otn_sfpdiagtxoutputpowerdbmsfp double,
    otn_slotnconfigoperationmode text,
    otn_slotnpmfecqfactorfe double,
    otn_slotnpmfecqfactorne double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shore_station_force_10_network_port_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    f10_ifadminstatus text,
    f10_ifindiscards int,
    f10_ifinerrors int,
    f10_ifinnucastpkts int,
    f10_ifinoctets int,
    f10_ifinucastpkts int,
    f10_ifinunknownprotos int,
    f10_ifoperstatus text,
    f10_ifoutdiscards int,
    f10_ifouterrors int,
    f10_ifoutnucastpkts int,
    f10_ifoutoctets int,
    f10_ifoutucastpkts int,
    f10_ifspeed int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shore_station_time_server_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ts_fault_aux_reference_clock_lock int,
    ts_fault_digital_to_audio_converter int,
    ts_fault_first_time_locking int,
    ts_fault_irig_lock int,
    ts_fault_lpn_pll int,
    ts_fault_pll_synthesizer int,
    ts_fault_primary_power int,
    ts_fault_primary_ref_clk int,
    ts_fault_rubidium_oscillator int,
    ts_fault_secondary_power int,
    ts_fault_secondary_ref_clk int,
    ts_fault_time_error int,
    ts_fault_timeout int,
    ts_ntp_auth_fail int,
    ts_ntp_in_errors int,
    ts_ntp_in_pkts int,
    ts_ntp_out_pkts int,
    ts_status_aux_ref_clock text,
    ts_status_clock text,
    ts_status_clock_source text,
    ts_status_digital_to_audio_converter text,
    ts_status_first_time_locking text,
    ts_status_irig_lock text,
    ts_status_lpn_pll text,
    ts_status_pll_synthesizer text,
    ts_status_primary_power text,
    ts_status_primary_reference_clock text,
    ts_status_rubidium_oscillator text,
    ts_status_secondary_power text,
    ts_status_secondary_reference_clock text,
    ts_status_time_error text,
    ts_status_timeout_error text,
    ts_system_up_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shore_station_ups_status (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ups_battery_current int,
    ups_battery_status text,
    ups_battery_voltage int,
    ups_estimated_charge_remaining int,
    ups_estimated_minutes_remaining int,
    ups_input_line_bads int,
    ups_input_num_lines int,
    ups_output_frequency int,
    ups_output_num_lines int,
    ups_output_source text,
    ups_seconds_on_battery int,
    ups_system_up_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shore_station_ups_line_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ups_line_input_current int,
    ups_line_input_frequency int,
    ups_line_input_voltage int,
    ups_line_output_current int,
    ups_line_output_percent_load int,
    ups_line_output_power int,
    ups_line_output_voltage int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_p_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity double,
    date_time_string text,
    pressure double,
    serial_number text,
    temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdbp_p_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity double,
    date_time_string text,
    pressure double,
    serial_number text,
    temp double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_ctdbp_p_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    oxy_calphase_volts double,
    oxy_temp_volts double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_ctdbp_p_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    oxy_calphase_volts double,
    oxy_temp_volts double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_g_ctdbp_p_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    raw_signal_beta_volts double,
    raw_signal_chl_volts double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_g_ctdbp_p_dcl_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    date_time_string text,
    raw_signal_beta_volts double,
    raw_signal_chl_volts double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dark_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    dark_frame_spectral_channels blob,
    date_of_sample int,
    frame_header text,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    ref_channel_average double,
    ref_channel_variance double,
    rms_error double,
    sea_water_dark double,
    serial_number text,
    spec_channel_average double,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_analog double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_dark_conc_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    nitrate_concentration double,
    rms_error double,
    serial_number text,
    time_of_sample double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_dark_conc_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    nitrate_concentration double,
    rms_error double,
    serial_number text,
    time_of_sample double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_dark_full_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    dark_frame_spectral_channels blob,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    ref_channel_average double,
    ref_channel_variance double,
    rms_error double,
    sea_water_dark double,
    serial_number text,
    spec_channel_average double,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_analog double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_b_dcl_dark_full_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    aux_fitting_3 double,
    dark_frame_spectral_channels blob,
    date_of_sample int,
    dcl_controller_timestamp text,
    frame_header text,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    ref_channel_average double,
    ref_channel_variance double,
    rms_error double,
    sea_water_dark double,
    serial_number text,
    spec_channel_average double,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_analog double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.shore_station_otn_shore_side_port_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    otn_ifadminstatussfp text,
    otn_ifoperstatussfp text,
    otn_sfpdiagmoduletemperaturesfp double,
    otn_sfpdiagrxinputpowersfp double,
    otn_sfpdiagrxlasertemperaturesfp double,
    otn_sfpdiagrxmeasuredwavelengthsfp double,
    otn_sfpdiagsupplyvoltagesfp double,
    otn_sfpdiagtxbiassfp double,
    otn_sfpdiagtxoutputpowersfp text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.antelope_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    antelope_channel text,
    antelope_endtime double,
    antelope_location text,
    antelope_network text,
    antelope_num_samples int,
    antelope_sampling_rate int,
    antelope_starttime double,
    antelope_station text,
    filepath text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_j_cspp_dark_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    dark_frame_spectral_channels blob,
    day_of_year int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_j_cspp_dark_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    dark_frame_spectral_channels blob,
    day_of_year int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    pressure_depth double,
    profiler_timestamp double,
    suspect_timestamp int,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_n_dark_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    dark_frame_spectral_channels blob,
    day_of_year int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    serial_number text,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.nutnr_m_dark_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ctd_dbar double,
    ctd_psu double,
    ctd_temp double,
    ctd_time_uint32 bigint,
    dark_frame_spectral_channels blob,
    day_of_year int,
    frame_type text,
    humidity double,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    serial_number text,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    year int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_velocity_beam (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bin_1_distance int,
    cell_length int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    ensemble_number int,
    heading int,
    num_cells int,
    percent_good_beam1 blob,
    percent_good_beam2 blob,
    percent_good_beam3 blob,
    percent_good_beam4 blob,
    pitch int,
    pressure bigint,
    roll int,
    salinity int,
    sysconfig_vertical_orientation int,
    temperature int,
    transducer_depth int,
    velocity_beam1 blob,
    velocity_beam2 blob,
    velocity_beam3 blob,
    velocity_beam4 blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_velocity_earth (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bin_1_distance int,
    cell_length int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    ensemble_number int,
    error_velocity blob,
    heading int,
    num_cells int,
    percent_bad_beams blob,
    percent_good_3beam blob,
    percent_good_4beam blob,
    percent_transforms_reject blob,
    pitch int,
    pressure bigint,
    roll int,
    salinity int,
    sysconfig_vertical_orientation int,
    temperature int,
    transducer_depth int,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_velocity_inst (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bin_1_distance int,
    cell_length int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    ensemble_number int,
    error_velocity blob,
    heading int,
    num_cells int,
    percent_bad_beams blob,
    percent_good_3beam blob,
    percent_good_4beam blob,
    percent_transforms_reject blob,
    pitch int,
    roll int,
    salinity int,
    sysconfig_vertical_orientation int,
    temperature int,
    transducer_depth int,
    water_velocity_forward blob,
    water_velocity_starboard blob,
    water_velocity_vertical blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_velocity_glider (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bin_1_distance int,
    cell_length int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    ensemble_number int,
    error_velocity blob,
    heading int,
    num_cells int,
    percent_bad_beams blob,
    percent_good_3beam blob,
    percent_good_4beam blob,
    percent_transforms_reject blob,
    pitch int,
    pressure bigint,
    roll int,
    salinity int,
    sysconfig_vertical_orientation int,
    temperature int,
    transducer_depth int,
    water_velocity_east blob,
    water_velocity_north blob,
    water_velocity_up blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_engineering (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    bit_result int,
    error_status_word bigint,
    heading_stdev int,
    mpt_hundredths int,
    mpt_minutes int,
    mpt_seconds int,
    pitch_stdev int,
    pressure_variance bigint,
    roll_stdev int,
    speed_of_sound int,
    transmit_pulse_length int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_config (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    beam_angle int,
    blank_after_transmit int,
    cell_length int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    cpu_board_serial_number text,
    data_flag int,
    error_vel_threshold int,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    heading_alignment int,
    heading_bias int,
    lag_length int,
    low_corr_threshold int,
    low_latency_trigger int,
    num_beams int,
    num_cells int,
    num_code_repetitions int,
    percent_good_min int,
    pings_per_ensemble int,
    reference_layer_start int,
    reference_layer_stop int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_speed int,
    sensor_available_temperature int,
    sensor_available_temperature_eu int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    sensor_source_temperature_eu int,
    serial_number text,
    signal_processing_mode int,
    sysconfig_beam_angle int,
    sysconfig_beam_config int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    time_per_ping_hundredths int,
    time_per_ping_minutes int,
    time_per_ping_seconds int,
    transmit_lag_distance int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_bottom_track_earth (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bt_beam1_correlation int,
    bt_beam1_eval_amp int,
    bt_beam1_percent_good int,
    bt_beam1_range bigint,
    bt_beam1_ref_correlation int,
    bt_beam1_ref_intensity int,
    bt_beam1_ref_percent_good int,
    bt_beam1_rssi_amplitude int,
    bt_beam2_correlation int,
    bt_beam2_eval_amp int,
    bt_beam2_percent_good int,
    bt_beam2_range bigint,
    bt_beam2_ref_correlation int,
    bt_beam2_ref_intensity int,
    bt_beam2_ref_percent_good int,
    bt_beam2_rssi_amplitude int,
    bt_beam3_correlation int,
    bt_beam3_eval_amp int,
    bt_beam3_percent_good int,
    bt_beam3_range bigint,
    bt_beam3_ref_correlation int,
    bt_beam3_ref_intensity int,
    bt_beam3_ref_percent_good int,
    bt_beam3_rssi_amplitude int,
    bt_beam4_correlation int,
    bt_beam4_eval_amp int,
    bt_beam4_percent_good int,
    bt_beam4_range bigint,
    bt_beam4_ref_correlation int,
    bt_beam4_ref_intensity int,
    bt_beam4_ref_percent_good int,
    bt_beam4_rssi_amplitude int,
    bt_eastward_ref_layer_velocity int,
    bt_eastward_velocity int,
    bt_error_ref_layer_velocity int,
    bt_error_velocity int,
    bt_gain int,
    bt_northward_ref_layer_velocity int,
    bt_northward_velocity int,
    bt_ref_layer_far int,
    bt_ref_layer_min int,
    bt_ref_layer_near int,
    bt_upward_ref_layer_velocity int,
    bt_upward_velocity int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_bottom_track_inst (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bt_beam1_correlation int,
    bt_beam1_eval_amp int,
    bt_beam1_percent_good int,
    bt_beam1_range bigint,
    bt_beam1_ref_correlation int,
    bt_beam1_ref_intensity int,
    bt_beam1_ref_percent_good int,
    bt_beam1_rssi_amplitude int,
    bt_beam2_correlation int,
    bt_beam2_eval_amp int,
    bt_beam2_percent_good int,
    bt_beam2_range bigint,
    bt_beam2_ref_correlation int,
    bt_beam2_ref_intensity int,
    bt_beam2_ref_percent_good int,
    bt_beam2_rssi_amplitude int,
    bt_beam3_correlation int,
    bt_beam3_eval_amp int,
    bt_beam3_percent_good int,
    bt_beam3_range bigint,
    bt_beam3_ref_correlation int,
    bt_beam3_ref_intensity int,
    bt_beam3_ref_percent_good int,
    bt_beam3_rssi_amplitude int,
    bt_beam4_correlation int,
    bt_beam4_eval_amp int,
    bt_beam4_percent_good int,
    bt_beam4_range bigint,
    bt_beam4_ref_correlation int,
    bt_beam4_ref_intensity int,
    bt_beam4_ref_percent_good int,
    bt_beam4_rssi_amplitude int,
    bt_error_ref_layer_velocity int,
    bt_error_velocity int,
    bt_forward_ref_layer_velocity int,
    bt_forward_velocity int,
    bt_gain int,
    bt_ref_layer_far int,
    bt_ref_layer_min int,
    bt_ref_layer_near int,
    bt_starboard_ref_layer_velocity int,
    bt_starboard_velocity int,
    bt_vertical_ref_layer_velocity int,
    bt_vertical_velocity int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_bottom_track_config (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bt_corr_magnitude_min int,
    bt_delay_before_reacquire int,
    bt_error_velocity_max int,
    bt_eval_magnitude_min int,
    bt_max_depth int,
    bt_mode int,
    bt_percent_good_min int,
    bt_pings_per_ensemble int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_velocity_beam (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bin_1_distance int,
    cell_length int,
    correlation_magnitude_beam1 blob,
    correlation_magnitude_beam2 blob,
    correlation_magnitude_beam3 blob,
    correlation_magnitude_beam4 blob,
    echo_intensity_beam1 blob,
    echo_intensity_beam2 blob,
    echo_intensity_beam3 blob,
    echo_intensity_beam4 blob,
    ensemble_number int,
    heading int,
    num_cells int,
    percent_good_beam1 blob,
    percent_good_beam2 blob,
    percent_good_beam3 blob,
    percent_good_beam4 blob,
    pitch int,
    pressure bigint,
    roll int,
    salinity int,
    sysconfig_vertical_orientation int,
    temperature int,
    transducer_depth int,
    velocity_beam1 blob,
    velocity_beam2 blob,
    velocity_beam3 blob,
    velocity_beam4 blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.vadcp_velocity_beam_5 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    bin_1_distance int,
    cell_length int,
    correlation_magnitude_beam5 blob,
    echo_intensity_beam5 blob,
    ensemble_number int,
    heading int,
    num_cells int,
    percent_good_beam5 blob,
    pitch int,
    pressure bigint,
    roll int,
    salinity int,
    sysconfig_vertical_orientation int,
    temperature int,
    transducer_depth int,
    velocity_beam5 blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_engineering_5 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adc_ambient_temp int,
    adc_attitude int,
    adc_attitude_temp int,
    adc_contamination_sensor int,
    adc_pressure_minus int,
    adc_pressure_plus int,
    adc_transmit_current int,
    adc_transmit_voltage int,
    heading_stdev int,
    mpt_hundredths int,
    mpt_minutes int,
    mpt_seconds double,
    pitch_stdev int,
    pressure_variance bigint,
    roll_stdev int,
    speed_of_sound int,
    transmit_pulse_length int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_config_5 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    beam_angle int,
    blank_after_transmit int,
    cell_length int,
    coord_transform_beams int,
    coord_transform_mapping int,
    coord_transform_tilts int,
    coord_transform_type int,
    cpu_board_serial_number text,
    data_flag int,
    error_vel_threshold int,
    false_target_threshold int,
    firmware_revision int,
    firmware_version int,
    heading_alignment int,
    heading_bias int,
    lag_length int,
    low_corr_threshold int,
    low_latency_trigger int,
    num_beams int,
    num_cells int,
    num_code_repetitions int,
    percent_good_min int,
    pings_per_ensemble int,
    reference_layer_start int,
    reference_layer_stop int,
    sensor_available_conductivity int,
    sensor_available_depth int,
    sensor_available_heading int,
    sensor_available_pitch int,
    sensor_available_roll int,
    sensor_available_temperature int,
    sensor_source_conductivity int,
    sensor_source_depth int,
    sensor_source_heading int,
    sensor_source_pitch int,
    sensor_source_roll int,
    sensor_source_speed int,
    sensor_source_temperature int,
    serial_number text,
    signal_processing_mode int,
    sysconfig_beam_pattern int,
    sysconfig_frequency int,
    sysconfig_head_attached int,
    sysconfig_sensor_config int,
    sysconfig_vertical_orientation int,
    system_bandwidth int,
    system_power int,
    time_per_ping_hundredths int,
    time_per_ping_minutes int,
    time_per_ping_seconds double,
    transmit_lag_distance int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_compass_calibration_5 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    calibration_temp double,
    coil_offset blob,
    electrical_null double,
    fluxgate_calibration_timestamp double,
    offset_up_down blob,
    pitch_up_down blob,
    roll_up_down blob,
    s_inverse_bx blob,
    s_inverse_by blob,
    s_inverse_bz blob,
    s_inverse_err blob,
    tilt_calibration_timestamp double,
    tilt_null double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_system_configuration_5 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    beam_angle int,
    beam_pattern text,
    board_serial_numbers text,
    boot_code_actual text,
    boot_code_required text,
    configuration text,
    cpu_firmware text,
    demod_1_type text,
    demod_1_version text,
    demod_2_type text,
    demod_2_version text,
    match_layer text,
    orientation text,
    power_timing_type text,
    power_timing_version text,
    pressure_coeff_c1 double,
    pressure_coeff_c2 double,
    pressure_coeff_c3 double,
    pressure_coeff_offset double,
    sensors text,
    serial_number text,
    temperature_sensor_offset double,
    transducer_frequency bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_ancillary_system_data_5 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcp_ambient_temp double,
    adcp_attitude_temp double,
    adcp_internal_moisture text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.adcp_transmit_path_5 (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    adcp_transmit_current double,
    adcp_transmit_impedance double,
    adcp_transmit_test_results text,
    adcp_transmit_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.camhd_metadata (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    filepath text,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.glider_gps_position (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_gps_lat double,
    m_gps_lon double,
    m_lat double,
    m_lon double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_dcl_modem (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cspp_dsp_battery_voltage double,
    cspp_modem_distance double,
    cspp_transmit_battery_voltage double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_dcl_eng_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cspp_current_state int,
    cspp_date_time bigint,
    cspp_enable_device text,
    cspp_enable_state text,
    cspp_previous_state int,
    cspp_profile_start_delta bigint,
    cspp_profile_start_time bigint,
    cspp_wave_height double,
    cspp_wave_mode int,
    cspp_wave_period double,
    cspp_wave_start_time bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_dcl_summary (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cspp_end_depth double,
    cspp_file_size int,
    cspp_file_space int,
    cspp_filename text,
    cspp_low_battery_number int,
    cspp_low_cell_voltage double,
    cspp_low_voltage double,
    cspp_num_files int,
    cspp_profile_number int,
    cspp_start_depth double,
    cspp_system_voltage double,
    cspp_travel_time double,
    cspp_watts_used double,
    cspp_winch_end_position int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.cspp_eng_dcl_profile (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    cspp_home_depth double,
    cspp_interval_time bigint,
    cspp_num_profiles int,
    cspp_setup_ascent_rate double,
    cspp_setup_descent_rate double,
    cspp_setup_end_depth double,
    cspp_setup_rate double,
    cspp_setup_start_depth double,
    cspp_start_delay bigint,
    cspp_start_time bigint,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_abc_tide_measurement_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    presf_tide_pressure_number int,
    presf_tide_temperature_number int,
    presf_time int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.presf_abc_wave_burst_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    presf_time int,
    presf_wave_burst_pressure_number blob,
    presf_wave_press_temp_comp_number int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.dosta_abcdjm_ctdbp_p_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ctd_time int,
    oxy_calphase int,
    oxy_temp int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flord_g_ctdbp_p_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    ctd_time int,
    raw_signal_beta int,
    raw_signal_chl int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.flort_o_glider_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    m_present_secs_into_mission double,
    m_present_time double,
    sci_bb3slo_b470_sig double,
    sci_bb3slo_b532_sig double,
    sci_bb3slo_b660_sig double,
    sci_m_present_secs_into_mission double,
    sci_m_present_time double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_nano_sample_15sec (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    quality_flag text,
    provenance uuid,
    botsflu_10minrate double,
    botsflu_5minrate double,
    botsflu_meandepth double,
    botsflu_meanpres double,
    botsflu_predtide double,
    botsflu_time15s double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.botpt_nano_sample_24hour (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    quality_flag text,
    provenance uuid,
    botsflu_4wkrate double,
    botsflu_8wkrate double,
    botsflu_daydepth double,
    botsflu_time24h double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.zplsc_c_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    burst_number bigint,
    serial_number text,
    zplsc_c_battery_voltage_counts int,
    zplsc_c_frequency_channel_1 int,
    zplsc_c_frequency_channel_2 int,
    zplsc_c_frequency_channel_3 int,
    zplsc_c_frequency_channel_4 int,
    zplsc_c_is_averaged_data blob,
    zplsc_c_phase int,
    zplsc_c_pressure_counts int,
    zplsc_c_temperature_counts int,
    zplsc_c_tilt_x_counts int,
    zplsc_c_tilt_y_counts int,
    zplsc_c_transmission_timestamp double,
    zplsc_c_values_channel_1 blob,
    zplsc_c_values_channel_2 blob,
    zplsc_c_values_channel_3 blob,
    zplsc_c_values_channel_4 blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.zplsc_echogram_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    zplsc_depth_range_channel_1 blob,
    zplsc_depth_range_channel_2 blob,
    zplsc_depth_range_channel_3 blob,
    zplsc_depth_range_channel_4 blob,
    zplsc_frequency_channel_1 double,
    zplsc_frequency_channel_2 double,
    zplsc_frequency_channel_3 double,
    zplsc_frequency_channel_4 double,
    zplsc_values_channel_1 blob,
    zplsc_values_channel_2 blob,
    zplsc_values_channel_3 blob,
    zplsc_values_channel_4 blob,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.ctdav_auv_data (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    auv_latitude double,
    auv_longitude double,
    ctdav_n_auv_conductivity double,
    dissolved_oxygen double,
    m_depth double,
    mission_epoch bigint,
    mission_time bigint,
    powered_on int,
    pressure double,
    salinity double,
    speed_of_sound double,
    temperature double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.suna_dcl_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    checksum int,
    date_of_sample int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    serial_number text,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.suna_instrument_recovered (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    aux_fitting_1 double,
    aux_fitting_2 double,
    checksum int,
    date_of_sample int,
    frame_type text,
    humidity double,
    lamp_time int,
    nitrate_concentration double,
    nutnr_absorbance_at_254_nm double,
    nutnr_absorbance_at_350_nm double,
    nutnr_bromide_trace double,
    nutnr_current_main double,
    nutnr_dark_value_used_for_fit int,
    nutnr_fit_base_1 double,
    nutnr_fit_base_2 double,
    nutnr_fit_rmse double,
    nutnr_integration_time_factor int,
    nutnr_nitrogen_in_nitrate double,
    nutnr_spectrum_average int,
    nutnr_voltage_int double,
    serial_number text,
    spectral_channels blob,
    temp_interior double,
    temp_lamp double,
    temp_spectrometer double,
    time_of_sample double,
    voltage_lamp double,
    voltage_main double,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

CREATE TABLE ooi.metbk_ct_dcl_instrument (
    subsite text,
    node text,
    sensor text,
    bin bigint,
    method text,
    time double,
    deployment int,
    id uuid,
    driver_timestamp double,
    ingestion_timestamp double,
    internal_timestamp double,
    port_timestamp double,
    preferred_timestamp text,
    quality_flag text,
    provenance uuid,
    conductivity int,
    ctd_time int,
    serial_number text,
    temperature int,
    PRIMARY KEY((subsite, node, sensor, bin), method, time, deployment, id)
);

